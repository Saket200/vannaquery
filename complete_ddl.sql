CREATE TABLE Industry (lead_publish_id integer NOT NULL, industry_config_id integer NOT NULL);
ALTER TABLE Industry ADD CONSTRAINT Industry_pkey PRIMARY KEY (lead_publish_id, industry_config_id);
ALTER TABLE Industry ADD CONSTRAINT Industry_industry_config_id_fkey FOREIGN KEY (industry_config_id) REFERENCES industry_config (id) ON DELETE CASCADE;
ALTER TABLE Industry ADD CONSTRAINT Industry_lead_publish_id_fkey FOREIGN KEY (lead_publish_id) REFERENCES lead_publish (id) ON DELETE CASCADE;
CREATE TABLE access_group (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE access_group ADD CONSTRAINT access_group_pkey PRIMARY KEY (id);
ALTER TABLE access_group ADD CONSTRAINT access_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE access_group ADD CONSTRAINT access_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE access_group_line (id integer NOT NULL, app_config_id integer NOT NULL, group_id integer NOT NULL, access_group_id integer, create_uid integer, write_uid integer, show_on_website boolean, create_date timestamp, write_date timestamp, sequence integer);
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_pkey PRIMARY KEY (id);
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_access_group_id_fkey FOREIGN KEY (access_group_id) REFERENCES access_group (id) ON DELETE SET NULL;
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_app_config_id_fkey FOREIGN KEY (app_config_id) REFERENCES app_config (id) ON DELETE CASCADE;
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE access_group_line ADD CONSTRAINT access_group_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE access_menu (id integer NOT NULL, parent_id integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE access_menu ADD CONSTRAINT access_menu_pkey PRIMARY KEY (id);
ALTER TABLE access_menu ADD CONSTRAINT access_menu_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES access_menu (id) ON DELETE SET NULL;
ALTER TABLE access_menu ADD CONSTRAINT access_menu_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE access_menu ADD CONSTRAINT access_menu_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_account (id integer NOT NULL, currency_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, code_store jsonb, note text, deprecated boolean, reconcile boolean, non_trade boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_account ADD CONSTRAINT account_account_pkey PRIMARY KEY (id);
ALTER TABLE account_account ADD CONSTRAINT account_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_account ADD CONSTRAINT account_account_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_account ADD CONSTRAINT account_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_account_account_auto_reconcile_wizard_rel (account_auto_reconcile_wizard_id integer NOT NULL, account_account_id integer NOT NULL);
ALTER TABLE account_account_account_auto_reconcile_wizard_rel ADD CONSTRAINT account_account_account_auto_reconcile_wizard_rel_pkey PRIMARY KEY (account_auto_reconcile_wizard_id, account_account_id);
ALTER TABLE account_account_account_auto_reconcile_wizard_rel ADD CONSTRAINT account_account_account_auto_reconcile__account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_account_account_auto_reconcile_wizard_rel ADD CONSTRAINT account_account_account_auto__account_auto_reconcile_wizar_fkey FOREIGN KEY (account_auto_reconcile_wizard_id) REFERENCES account_auto_reconcile_wizard (id) ON DELETE CASCADE;
CREATE TABLE account_account_account_import_summary_rel (account_import_summary_id integer NOT NULL, account_account_id integer NOT NULL);
ALTER TABLE account_account_account_import_summary_rel ADD CONSTRAINT account_account_account_import_summary_rel_pkey PRIMARY KEY (account_import_summary_id, account_account_id);
ALTER TABLE account_account_account_import_summary_rel ADD CONSTRAINT account_account_account_import_s_account_import_summary_id_fkey FOREIGN KEY (account_import_summary_id) REFERENCES account_import_summary (id) ON DELETE CASCADE;
ALTER TABLE account_account_account_import_summary_rel ADD CONSTRAINT account_account_account_import_summary__account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
CREATE TABLE account_account_account_journal_rel (account_account_id integer NOT NULL, account_journal_id integer NOT NULL);
ALTER TABLE account_account_account_journal_rel ADD CONSTRAINT account_account_account_journal_rel_pkey PRIMARY KEY (account_account_id, account_journal_id);
ALTER TABLE account_account_account_journal_rel ADD CONSTRAINT account_account_account_journal_rel_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
ALTER TABLE account_account_account_journal_rel ADD CONSTRAINT account_account_account_journal_rel_account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
CREATE TABLE account_account_account_merge_wizard_rel (account_merge_wizard_id integer NOT NULL, account_account_id integer NOT NULL);
ALTER TABLE account_account_account_merge_wizard_rel ADD CONSTRAINT account_account_account_merge_wizard_rel_pkey PRIMARY KEY (account_merge_wizard_id, account_account_id);
ALTER TABLE account_account_account_merge_wizard_rel ADD CONSTRAINT account_account_account_merge_wiza_account_merge_wizard_id_fkey FOREIGN KEY (account_merge_wizard_id) REFERENCES account_merge_wizard (id) ON DELETE CASCADE;
ALTER TABLE account_account_account_merge_wizard_rel ADD CONSTRAINT account_account_account_merge_wizard_re_account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
CREATE TABLE account_account_account_tag (account_account_id integer NOT NULL, account_account_tag_id integer NOT NULL);
ALTER TABLE account_account_account_tag ADD CONSTRAINT account_account_account_tag_pkey PRIMARY KEY (account_account_id, account_account_tag_id);
ALTER TABLE account_account_account_tag ADD CONSTRAINT account_account_account_tag_account_account_tag_id_fkey FOREIGN KEY (account_account_tag_id) REFERENCES account_account_tag (id) ON DELETE RESTRICT;
ALTER TABLE account_account_account_tag ADD CONSTRAINT account_account_account_tag_account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
CREATE TABLE account_account_res_company_rel (account_account_id integer NOT NULL, res_company_id integer NOT NULL);
ALTER TABLE account_account_res_company_rel ADD CONSTRAINT account_account_res_company_rel_pkey PRIMARY KEY (account_account_id, res_company_id);
ALTER TABLE account_account_res_company_rel ADD CONSTRAINT account_account_res_company_rel_res_company_id_fkey FOREIGN KEY (res_company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_account_res_company_rel ADD CONSTRAINT account_account_res_company_rel_account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
CREATE TABLE account_account_tag (id integer NOT NULL, color integer, country_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, tax_negate boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_account_tag ADD CONSTRAINT account_account_tag_pkey PRIMARY KEY (id);
ALTER TABLE account_account_tag ADD CONSTRAINT account_account_tag_name_uniq UNIQUE (name, applicability, country_id);
ALTER TABLE account_account_tag ADD CONSTRAINT account_account_tag_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_account_tag ADD CONSTRAINT account_account_tag_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE account_account_tag ADD CONSTRAINT account_account_tag_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_account_tag_account_move_line_rel (account_move_line_id integer NOT NULL, account_account_tag_id integer NOT NULL);
ALTER TABLE account_account_tag_account_move_line_rel ADD CONSTRAINT account_account_tag_account_move_line_rel_pkey PRIMARY KEY (account_move_line_id, account_account_tag_id);
ALTER TABLE account_account_tag_account_move_line_rel ADD CONSTRAINT account_account_tag_account_move_li_account_account_tag_id_fkey FOREIGN KEY (account_account_tag_id) REFERENCES account_account_tag (id) ON DELETE RESTRICT;
ALTER TABLE account_account_tag_account_move_line_rel ADD CONSTRAINT account_account_tag_account_move_line_account_move_line_id_fkey FOREIGN KEY (account_move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
CREATE TABLE account_account_tag_account_tax_repartition_line_rel (account_tax_repartition_line_id integer NOT NULL, account_account_tag_id integer NOT NULL);
ALTER TABLE account_account_tag_account_tax_repartition_line_rel ADD CONSTRAINT account_account_tag_account_tax_repartition_line_rel_pkey PRIMARY KEY (account_tax_repartition_line_id, account_account_tag_id);
ALTER TABLE account_account_tag_account_tax_repartition_line_rel ADD CONSTRAINT account_account_tag_account_t_account_tax_repartition_line_fkey FOREIGN KEY (account_tax_repartition_line_id) REFERENCES account_tax_repartition_line (id) ON DELETE CASCADE;
ALTER TABLE account_account_tag_account_tax_repartition_line_rel ADD CONSTRAINT account_account_tag_account_tax_rep_account_account_tag_id_fkey FOREIGN KEY (account_account_tag_id) REFERENCES account_account_tag (id) ON DELETE RESTRICT;
CREATE TABLE account_account_tag_product_template_rel (product_template_id integer NOT NULL, account_account_tag_id integer NOT NULL);
ALTER TABLE account_account_tag_product_template_rel ADD CONSTRAINT account_account_tag_product_template_rel_pkey PRIMARY KEY (product_template_id, account_account_tag_id);
ALTER TABLE account_account_tag_product_template_rel ADD CONSTRAINT account_account_tag_product_templat_account_account_tag_id_fkey FOREIGN KEY (account_account_tag_id) REFERENCES account_account_tag (id) ON DELETE CASCADE;
ALTER TABLE account_account_tag_product_template_rel ADD CONSTRAINT account_account_tag_product_template_r_product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE account_account_tax_default_rel (account_id integer NOT NULL, tax_id integer NOT NULL);
ALTER TABLE account_account_tax_default_rel ADD CONSTRAINT account_account_tax_default_rel_pkey PRIMARY KEY (account_id, tax_id);
ALTER TABLE account_account_tax_default_rel ADD CONSTRAINT account_account_tax_default_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_account_tax_default_rel ADD CONSTRAINT account_account_tax_default_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE account_accrued_orders_wizard (id integer NOT NULL, company_id integer, journal_id integer NOT NULL, currency_id integer, account_id integer NOT NULL, create_uid integer, write_uid integer, date date NOT NULL, reversal_date date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_accrued_orders_wizard ADD CONSTRAINT account_accrued_orders_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_analytic_account (id integer NOT NULL, plan_id integer NOT NULL, root_plan_id integer, company_id integer, partner_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_pkey PRIMARY KEY (id);
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES account_analytic_plan (id) ON DELETE RESTRICT;
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_root_plan_id_fkey FOREIGN KEY (root_plan_id) REFERENCES account_analytic_plan (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_account ADD CONSTRAINT account_analytic_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_analytic_account_account_transfer_model_line_rel (account_transfer_model_line_id integer NOT NULL, account_analytic_account_id integer NOT NULL);
ALTER TABLE account_analytic_account_account_transfer_model_line_rel ADD CONSTRAINT account_analytic_account_account_transfer_model_line_rel_pkey PRIMARY KEY (account_transfer_model_line_id, account_analytic_account_id);
ALTER TABLE account_analytic_account_account_transfer_model_line_rel ADD CONSTRAINT account_analytic_account_accou_account_analytic_account_id_fkey FOREIGN KEY (account_analytic_account_id) REFERENCES account_analytic_account (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_account_account_transfer_model_line_rel ADD CONSTRAINT account_analytic_account_acco_account_transfer_model_line__fkey FOREIGN KEY (account_transfer_model_line_id) REFERENCES account_transfer_model_line (id) ON DELETE CASCADE;
CREATE TABLE account_analytic_applicability (id integer NOT NULL, analytic_plan_id integer, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, product_categ_id integer);
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_pkey PRIMARY KEY (id);
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_analytic_plan_id_fkey FOREIGN KEY (analytic_plan_id) REFERENCES account_analytic_plan (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_applicability ADD CONSTRAINT account_analytic_applicability_product_categ_id_fkey FOREIGN KEY (product_categ_id) REFERENCES product_category (id) ON DELETE SET NULL;
CREATE TABLE account_analytic_distribution_model (id integer NOT NULL, sequence integer, partner_id integer, partner_category_id integer, company_id integer, create_uid integer, write_uid integer, analytic_distribution jsonb, create_date timestamp, write_date timestamp, product_id integer, product_categ_id integer);
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_pkey PRIMARY KEY (id);
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_partner_category_id_fkey FOREIGN KEY (partner_category_id) REFERENCES res_partner_category (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_product_categ_id_fkey FOREIGN KEY (product_categ_id) REFERENCES product_category (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_distribution_model ADD CONSTRAINT account_analytic_distribution_model_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
CREATE TABLE account_analytic_line (id integer NOT NULL, account_id integer, product_uom_id integer, partner_id integer, user_id integer, company_id integer NOT NULL, currency_id integer, create_uid integer, write_uid integer, date date NOT NULL, create_date timestamp, write_date timestamp, unit_amount double precision, product_id integer, general_account_id integer, journal_id integer, move_line_id integer, code varchar(8), so_line integer);
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_pkey PRIMARY KEY (id);
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_general_account_id_fkey FOREIGN KEY (general_account_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_move_line_id_fkey FOREIGN KEY (move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_so_line_fkey FOREIGN KEY (so_line) REFERENCES sale_order_line (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_line ADD CONSTRAINT account_analytic_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_analytic_account (id) ON DELETE RESTRICT;
CREATE TABLE account_analytic_plan (id integer NOT NULL, parent_id integer, color integer, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, default_applicability jsonb, description text, create_date timestamp, write_date timestamp);
ALTER TABLE account_analytic_plan ADD CONSTRAINT account_analytic_plan_pkey PRIMARY KEY (id);
ALTER TABLE account_analytic_plan ADD CONSTRAINT account_analytic_plan_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_analytic_plan ADD CONSTRAINT account_analytic_plan_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_analytic_plan (id) ON DELETE CASCADE;
ALTER TABLE account_analytic_plan ADD CONSTRAINT account_analytic_plan_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_auto_reconcile_wizard (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, from_date date, to_date date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_auto_reconcile_wizard ADD CONSTRAINT account_auto_reconcile_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_auto_reconcile_wizard ADD CONSTRAINT account_auto_reconcile_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_auto_reconcile_wizard ADD CONSTRAINT account_auto_reconcile_wizard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_auto_reconcile_wizard ADD CONSTRAINT account_auto_reconcile_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_auto_reconcile_wizard_account_move_line_rel (account_auto_reconcile_wizard_id integer NOT NULL, account_move_line_id integer NOT NULL);
ALTER TABLE account_auto_reconcile_wizard_account_move_line_rel ADD CONSTRAINT account_auto_reconcile_wizard_account_move_line_rel_pkey PRIMARY KEY (account_auto_reconcile_wizard_id, account_move_line_id);
ALTER TABLE account_auto_reconcile_wizard_account_move_line_rel ADD CONSTRAINT account_auto_reconcile_wizard_account_auto_reconcile_wizar_fkey FOREIGN KEY (account_auto_reconcile_wizard_id) REFERENCES account_auto_reconcile_wizard (id) ON DELETE CASCADE;
ALTER TABLE account_auto_reconcile_wizard_account_move_line_rel ADD CONSTRAINT account_auto_reconcile_wizard_account_account_move_line_id_fkey FOREIGN KEY (account_move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
CREATE TABLE account_auto_reconcile_wizard_res_partner_rel (account_auto_reconcile_wizard_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE account_auto_reconcile_wizard_res_partner_rel ADD CONSTRAINT account_auto_reconcile_wizard_res_partner_rel_pkey PRIMARY KEY (account_auto_reconcile_wizard_id, res_partner_id);
ALTER TABLE account_auto_reconcile_wizard_res_partner_rel ADD CONSTRAINT account_auto_reconcile_wizar_account_auto_reconcile_wizar_fkey1 FOREIGN KEY (account_auto_reconcile_wizard_id) REFERENCES account_auto_reconcile_wizard (id) ON DELETE CASCADE;
ALTER TABLE account_auto_reconcile_wizard_res_partner_rel ADD CONSTRAINT account_auto_reconcile_wizard_res_partner_r_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE account_automatic_entry_wizard (id integer NOT NULL, company_id integer NOT NULL, destination_account_id integer, create_uid integer, write_uid integer, date date NOT NULL, create_date timestamp, write_date timestamp, percentage double precision);
ALTER TABLE account_automatic_entry_wizard ADD CONSTRAINT account_automatic_entry_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_automatic_entry_wizard ADD CONSTRAINT account_automatic_entry_wizard_destination_account_id_fkey FOREIGN KEY (destination_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_automatic_entry_wizard ADD CONSTRAINT account_automatic_entry_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_automatic_entry_wizard ADD CONSTRAINT account_automatic_entry_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_automatic_entry_wizard ADD CONSTRAINT account_automatic_entry_wizard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
CREATE TABLE account_automatic_entry_wizard_account_move_line_rel (account_automatic_entry_wizard_id integer NOT NULL, account_move_line_id integer NOT NULL);
ALTER TABLE account_automatic_entry_wizard_account_move_line_rel ADD CONSTRAINT account_automatic_entry_wizard_account_move_line_rel_pkey PRIMARY KEY (account_automatic_entry_wizard_id, account_move_line_id);
ALTER TABLE account_automatic_entry_wizard_account_move_line_rel ADD CONSTRAINT account_automatic_entry_wizar_account_automatic_entry_wiza_fkey FOREIGN KEY (account_automatic_entry_wizard_id) REFERENCES account_automatic_entry_wizard (id) ON DELETE CASCADE;
ALTER TABLE account_automatic_entry_wizard_account_move_line_rel ADD CONSTRAINT account_automatic_entry_wizard_accoun_account_move_line_id_fkey FOREIGN KEY (account_move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
CREATE TABLE account_autopost_bills_wizard (id integer NOT NULL, partner_id integer, nb_unmodified_bills integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_autopost_bills_wizard ADD CONSTRAINT account_autopost_bills_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_autopost_bills_wizard ADD CONSTRAINT account_autopost_bills_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_autopost_bills_wizard ADD CONSTRAINT account_autopost_bills_wizard_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE account_autopost_bills_wizard ADD CONSTRAINT account_autopost_bills_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_bank_selection (id integer NOT NULL, account_online_link_id integer, selected_account integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_bank_selection ADD CONSTRAINT account_bank_selection_pkey PRIMARY KEY (id);
ALTER TABLE account_bank_selection ADD CONSTRAINT account_bank_selection_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_selection ADD CONSTRAINT account_bank_selection_account_online_link_id_fkey FOREIGN KEY (account_online_link_id) REFERENCES account_online_link (id) ON DELETE SET NULL;
ALTER TABLE account_bank_selection ADD CONSTRAINT account_bank_selection_selected_account_fkey FOREIGN KEY (selected_account) REFERENCES account_online_account (id) ON DELETE SET NULL;
ALTER TABLE account_bank_selection ADD CONSTRAINT account_bank_selection_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_bank_statement (id integer NOT NULL, company_id integer, journal_id integer, create_uid integer, write_uid integer, date date, is_complete boolean, create_date timestamp, write_date timestamp, message_main_attachment_id integer);
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_pkey PRIMARY KEY (id);
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_message_main_attachment_id_fkey FOREIGN KEY (message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement ADD CONSTRAINT account_bank_statement_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE account_bank_statement_ir_attachment_rel (account_bank_statement_id integer NOT NULL, ir_attachment_id integer NOT NULL);
ALTER TABLE account_bank_statement_ir_attachment_rel ADD CONSTRAINT account_bank_statement_ir_attachment_rel_pkey PRIMARY KEY (account_bank_statement_id, ir_attachment_id);
ALTER TABLE account_bank_statement_ir_attachment_rel ADD CONSTRAINT account_bank_statement_ir_attach_account_bank_statement_id_fkey FOREIGN KEY (account_bank_statement_id) REFERENCES account_bank_statement (id) ON DELETE CASCADE;
ALTER TABLE account_bank_statement_ir_attachment_rel ADD CONSTRAINT account_bank_statement_ir_attachment_rel_ir_attachment_id_fkey FOREIGN KEY (ir_attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
CREATE TABLE account_bank_statement_line (id integer NOT NULL, move_id integer NOT NULL, journal_id integer NOT NULL, company_id integer NOT NULL, statement_id integer, sequence integer, partner_id integer, currency_id integer, foreign_currency_id integer, create_uid integer, write_uid integer, transaction_details jsonb, is_reconciled boolean, create_date timestamp, write_date timestamp, amount_residual double precision, cron_last_check timestamp, online_account_id integer, online_link_id integer);
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_pkey PRIMARY KEY (id);
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_unique_import_id UNIQUE (unique_import_id);
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_foreign_currency_id_fkey FOREIGN KEY (foreign_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_online_account_id_fkey FOREIGN KEY (online_account_id) REFERENCES account_online_account (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_online_link_id_fkey FOREIGN KEY (online_link_id) REFERENCES account_online_link (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_statement_id_fkey FOREIGN KEY (statement_id) REFERENCES account_bank_statement (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line ADD CONSTRAINT account_bank_statement_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE account_bank_statement_line_transient (id integer NOT NULL, sequence integer, journal_id integer, online_account_id integer, company_id integer, foreign_currency_id integer, create_uid integer, write_uid integer, date date, transaction_details text, create_date timestamp, write_date timestamp);
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_pkey PRIMARY KEY (id);
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_foreign_currency_id_fkey FOREIGN KEY (foreign_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_online_account_id_fkey FOREIGN KEY (online_account_id) REFERENCES account_online_account (id) ON DELETE SET NULL;
ALTER TABLE account_bank_statement_line_transient ADD CONSTRAINT account_bank_statement_line_transient_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_cash_rounding (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, profit_account_id jsonb, loss_account_id jsonb, create_date timestamp, write_date timestamp, rounding double precision NOT NULL);
ALTER TABLE account_cash_rounding ADD CONSTRAINT account_cash_rounding_pkey PRIMARY KEY (id);
ALTER TABLE account_cash_rounding ADD CONSTRAINT account_cash_rounding_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_cash_rounding ADD CONSTRAINT account_cash_rounding_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_change_lock_date (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, fiscalyear_lock_date date, tax_lock_date date, sale_lock_date date, purchase_lock_date date, hard_lock_date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_change_lock_date ADD CONSTRAINT account_change_lock_date_pkey PRIMARY KEY (id);
ALTER TABLE account_change_lock_date ADD CONSTRAINT account_change_lock_date_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_change_lock_date ADD CONSTRAINT account_change_lock_date_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_change_lock_date ADD CONSTRAINT account_change_lock_date_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_duplicate_transaction_wizard (id integer NOT NULL, journal_id integer, create_uid integer, write_uid integer, date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_duplicate_transaction_wizard ADD CONSTRAINT account_duplicate_transaction_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_duplicate_transaction_wizard ADD CONSTRAINT account_duplicate_transaction_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_duplicate_transaction_wizard ADD CONSTRAINT account_duplicate_transaction_wizard_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_duplicate_transaction_wizard ADD CONSTRAINT account_duplicate_transaction_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_financial_year_op (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_financial_year_op ADD CONSTRAINT account_financial_year_op_pkey PRIMARY KEY (id);
ALTER TABLE account_financial_year_op ADD CONSTRAINT account_financial_year_op_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_financial_year_op ADD CONSTRAINT account_financial_year_op_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_financial_year_op ADD CONSTRAINT account_financial_year_op_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_fiscal_position (id integer NOT NULL, sequence integer, company_id integer NOT NULL, country_id integer, country_group_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, note jsonb, active boolean, auto_apply boolean, vat_required boolean, create_date timestamp, write_date timestamp, avatax_invoice_account_id integer, avatax_refund_account_id integer, is_avatax boolean);
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_pkey PRIMARY KEY (id);
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_country_group_id_fkey FOREIGN KEY (country_group_id) REFERENCES res_country_group (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_avatax_invoice_account_id_fkey FOREIGN KEY (avatax_invoice_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position ADD CONSTRAINT account_fiscal_position_avatax_refund_account_id_fkey FOREIGN KEY (avatax_refund_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
CREATE TABLE account_fiscal_position_account (id integer NOT NULL, position_id integer NOT NULL, company_id integer, account_src_id integer NOT NULL, account_dest_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_pkey PRIMARY KEY (id);
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_account_src_dest_uniq UNIQUE (position_id, account_src_id, account_dest_id);
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_account_dest_id_fkey FOREIGN KEY (account_dest_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_account_src_id_fkey FOREIGN KEY (account_src_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position (id) ON DELETE CASCADE;
ALTER TABLE account_fiscal_position_account ADD CONSTRAINT account_fiscal_position_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_fiscal_position_res_country_state_rel (account_fiscal_position_id integer NOT NULL, res_country_state_id integer NOT NULL);
ALTER TABLE account_fiscal_position_res_country_state_rel ADD CONSTRAINT account_fiscal_position_res_country_state_rel_pkey PRIMARY KEY (account_fiscal_position_id, res_country_state_id);
ALTER TABLE account_fiscal_position_res_country_state_rel ADD CONSTRAINT account_fiscal_position_res_cou_account_fiscal_position_id_fkey FOREIGN KEY (account_fiscal_position_id) REFERENCES account_fiscal_position (id) ON DELETE CASCADE;
ALTER TABLE account_fiscal_position_res_country_state_rel ADD CONSTRAINT account_fiscal_position_res_country_s_res_country_state_id_fkey FOREIGN KEY (res_country_state_id) REFERENCES res_country_state (id) ON DELETE CASCADE;
CREATE TABLE account_fiscal_position_tax (id integer NOT NULL, position_id integer NOT NULL, company_id integer, tax_src_id integer NOT NULL, tax_dest_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_pkey PRIMARY KEY (id);
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_tax_src_dest_uniq UNIQUE (position_id, tax_src_id, tax_dest_id);
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_tax_dest_id_fkey FOREIGN KEY (tax_dest_id) REFERENCES account_tax (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_tax_src_id_fkey FOREIGN KEY (tax_src_id) REFERENCES account_tax (id) ON DELETE RESTRICT;
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_position_id_fkey FOREIGN KEY (position_id) REFERENCES account_fiscal_position (id) ON DELETE CASCADE;
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_position_tax ADD CONSTRAINT account_fiscal_position_tax_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_fiscal_year (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, date_from date NOT NULL, date_to date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_fiscal_year ADD CONSTRAINT account_fiscal_year_pkey PRIMARY KEY (id);
ALTER TABLE account_fiscal_year ADD CONSTRAINT account_fiscal_year_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_fiscal_year ADD CONSTRAINT account_fiscal_year_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_fiscal_year ADD CONSTRAINT account_fiscal_year_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_full_reconcile (id integer NOT NULL, exchange_move_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_full_reconcile ADD CONSTRAINT account_full_reconcile_pkey PRIMARY KEY (id);
ALTER TABLE account_full_reconcile ADD CONSTRAINT account_full_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_full_reconcile ADD CONSTRAINT account_full_reconcile_exchange_move_id_fkey FOREIGN KEY (exchange_move_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE account_full_reconcile ADD CONSTRAINT account_full_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_group (id integer NOT NULL, parent_id integer, company_id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_group ADD CONSTRAINT account_group_pkey PRIMARY KEY (id);
ALTER TABLE account_group ADD CONSTRAINT account_group_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_group ADD CONSTRAINT account_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_group ADD CONSTRAINT account_group_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_group (id) ON DELETE CASCADE;
ALTER TABLE account_group ADD CONSTRAINT account_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_import_summary (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_import_summary ADD CONSTRAINT account_import_summary_pkey PRIMARY KEY (id);
ALTER TABLE account_import_summary ADD CONSTRAINT account_import_summary_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_import_summary ADD CONSTRAINT account_import_summary_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_import_summary_account_journal_rel (account_import_summary_id integer NOT NULL, account_journal_id integer NOT NULL);
ALTER TABLE account_import_summary_account_journal_rel ADD CONSTRAINT account_import_summary_account_journal_rel_pkey PRIMARY KEY (account_import_summary_id, account_journal_id);
ALTER TABLE account_import_summary_account_journal_rel ADD CONSTRAINT account_import_summary_account_j_account_import_summary_id_fkey FOREIGN KEY (account_import_summary_id) REFERENCES account_import_summary (id) ON DELETE CASCADE;
ALTER TABLE account_import_summary_account_journal_rel ADD CONSTRAINT account_import_summary_account_journal__account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
CREATE TABLE account_import_summary_account_move_rel (account_import_summary_id integer NOT NULL, account_move_id integer NOT NULL);
ALTER TABLE account_import_summary_account_move_rel ADD CONSTRAINT account_import_summary_account_move_rel_pkey PRIMARY KEY (account_import_summary_id, account_move_id);
ALTER TABLE account_import_summary_account_move_rel ADD CONSTRAINT account_import_summary_account_m_account_import_summary_id_fkey FOREIGN KEY (account_import_summary_id) REFERENCES account_import_summary (id) ON DELETE CASCADE;
ALTER TABLE account_import_summary_account_move_rel ADD CONSTRAINT account_import_summary_account_move_rel_account_move_id_fkey FOREIGN KEY (account_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
CREATE TABLE account_import_summary_account_tax_rel (account_import_summary_id integer NOT NULL, account_tax_id integer NOT NULL);
ALTER TABLE account_import_summary_account_tax_rel ADD CONSTRAINT account_import_summary_account_tax_rel_pkey PRIMARY KEY (account_import_summary_id, account_tax_id);
ALTER TABLE account_import_summary_account_tax_rel ADD CONSTRAINT account_import_summary_account_t_account_import_summary_id_fkey FOREIGN KEY (account_import_summary_id) REFERENCES account_import_summary (id) ON DELETE CASCADE;
ALTER TABLE account_import_summary_account_tax_rel ADD CONSTRAINT account_import_summary_account_tax_rel_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE account_import_summary_res_partner_rel (account_import_summary_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE account_import_summary_res_partner_rel ADD CONSTRAINT account_import_summary_res_partner_rel_pkey PRIMARY KEY (account_import_summary_id, res_partner_id);
ALTER TABLE account_import_summary_res_partner_rel ADD CONSTRAINT account_import_summary_res_partn_account_import_summary_id_fkey FOREIGN KEY (account_import_summary_id) REFERENCES account_import_summary (id) ON DELETE CASCADE;
ALTER TABLE account_import_summary_res_partner_rel ADD CONSTRAINT account_import_summary_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE account_incoterms (id integer NOT NULL, create_uid integer, write_uid integer, code varchar(3) NOT NULL, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_incoterms ADD CONSTRAINT account_incoterms_pkey PRIMARY KEY (id);
ALTER TABLE account_incoterms ADD CONSTRAINT account_incoterms_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_incoterms ADD CONSTRAINT account_incoterms_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_invoice_extract_words (id integer NOT NULL, invoice_id integer NOT NULL, word_page integer, create_uid integer, write_uid integer, ocr_selected boolean, user_selected boolean, create_date timestamp, write_date timestamp, word_box_midX double precision, word_box_midY double precision, word_box_width double precision, word_box_height double precision, word_box_angle double precision);
ALTER TABLE account_invoice_extract_words ADD CONSTRAINT account_invoice_extract_words_pkey PRIMARY KEY (id);
ALTER TABLE account_invoice_extract_words ADD CONSTRAINT account_invoice_extract_words_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_invoice_extract_words ADD CONSTRAINT account_invoice_extract_words_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_invoice_extract_words ADD CONSTRAINT account_invoice_extract_words_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_invoice_transaction_rel (invoice_id integer NOT NULL, transaction_id integer NOT NULL);
ALTER TABLE account_invoice_transaction_rel ADD CONSTRAINT account_invoice_transaction_rel_pkey PRIMARY KEY (invoice_id, transaction_id);
ALTER TABLE account_invoice_transaction_rel ADD CONSTRAINT account_invoice_transaction_rel_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES payment_transaction (id) ON DELETE CASCADE;
ALTER TABLE account_invoice_transaction_rel ADD CONSTRAINT account_invoice_transaction_rel_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_move (id) ON DELETE CASCADE;
CREATE TABLE account_journal (id integer NOT NULL, alias_id integer, default_account_id integer, suspense_account_id integer, sequence integer, currency_id integer, company_id integer NOT NULL, profit_account_id integer, loss_account_id integer, bank_account_id integer, create_uid integer, write_uid integer, color integer, code varchar(5) NOT NULL, name jsonb NOT NULL, sequence_override_regex text, active boolean, autocheck_on_post boolean, restrict_mode_hash_table boolean, refund_sequence boolean, payment_sequence boolean, show_on_dashboard boolean, create_date timestamp, write_date timestamp, check_sequence_id integer, check_manual_sequencing boolean, account_online_account_id integer, account_online_link_id integer);
ALTER TABLE account_journal ADD CONSTRAINT account_journal_pkey PRIMARY KEY (id);
ALTER TABLE account_journal ADD CONSTRAINT account_journal_code_company_uniq UNIQUE (company_id, code);
ALTER TABLE account_journal ADD CONSTRAINT account_journal_bank_account_id_fkey FOREIGN KEY (bank_account_id) REFERENCES res_partner_bank (id) ON DELETE RESTRICT;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_check_sequence_id_fkey FOREIGN KEY (check_sequence_id) REFERENCES ir_sequence (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_account_online_account_id_fkey FOREIGN KEY (account_online_account_id) REFERENCES account_online_account (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_loss_account_id_fkey FOREIGN KEY (loss_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_profit_account_id_fkey FOREIGN KEY (profit_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_suspense_account_id_fkey FOREIGN KEY (suspense_account_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_default_account_id_fkey FOREIGN KEY (default_account_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_account_online_link_id_fkey FOREIGN KEY (account_online_link_id) REFERENCES account_online_link (id) ON DELETE SET NULL;
ALTER TABLE account_journal ADD CONSTRAINT account_journal_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias (id) ON DELETE RESTRICT;
CREATE TABLE account_journal_account_journal_group_rel (account_journal_group_id integer NOT NULL, account_journal_id integer NOT NULL);
ALTER TABLE account_journal_account_journal_group_rel ADD CONSTRAINT account_journal_account_journal_group_rel_pkey PRIMARY KEY (account_journal_group_id, account_journal_id);
ALTER TABLE account_journal_account_journal_group_rel ADD CONSTRAINT account_journal_account_journal_g_account_journal_group_id_fkey FOREIGN KEY (account_journal_group_id) REFERENCES account_journal_group (id) ON DELETE CASCADE;
ALTER TABLE account_journal_account_journal_group_rel ADD CONSTRAINT account_journal_account_journal_group_r_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
CREATE TABLE account_journal_account_reconcile_model_rel (account_reconcile_model_id integer NOT NULL, account_journal_id integer NOT NULL);
ALTER TABLE account_journal_account_reconcile_model_rel ADD CONSTRAINT account_journal_account_reconcile_model_rel_pkey PRIMARY KEY (account_reconcile_model_id, account_journal_id);
ALTER TABLE account_journal_account_reconcile_model_rel ADD CONSTRAINT account_journal_account_reconci_account_reconcile_model_id_fkey FOREIGN KEY (account_reconcile_model_id) REFERENCES account_reconcile_model (id) ON DELETE CASCADE;
ALTER TABLE account_journal_account_reconcile_model_rel ADD CONSTRAINT account_journal_account_reconcile_model_account_journal_id_fkey FOREIGN KEY (account_journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
CREATE TABLE account_journal_group (id integer NOT NULL, company_id integer, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_journal_group ADD CONSTRAINT account_journal_group_pkey PRIMARY KEY (id);
ALTER TABLE account_journal_group ADD CONSTRAINT account_journal_group_uniq_name UNIQUE (company_id, name);
ALTER TABLE account_journal_group ADD CONSTRAINT account_journal_group_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_journal_group ADD CONSTRAINT account_journal_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_journal_group ADD CONSTRAINT account_journal_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_lock_exception (id integer NOT NULL, company_id integer NOT NULL, user_id integer, create_uid integer, write_uid integer, lock_date date, company_lock_date date, active boolean, end_datetime timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE account_lock_exception ADD CONSTRAINT account_lock_exception_pkey PRIMARY KEY (id);
ALTER TABLE account_lock_exception ADD CONSTRAINT account_lock_exception_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_lock_exception ADD CONSTRAINT account_lock_exception_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_lock_exception ADD CONSTRAINT account_lock_exception_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_lock_exception ADD CONSTRAINT account_lock_exception_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_merge_wizard (id integer NOT NULL, create_uid integer, write_uid integer, is_group_by_name boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_merge_wizard ADD CONSTRAINT account_merge_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_merge_wizard ADD CONSTRAINT account_merge_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_merge_wizard ADD CONSTRAINT account_merge_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_merge_wizard_line (id integer NOT NULL, wizard_id integer NOT NULL, sequence integer, account_id integer, create_uid integer, write_uid integer, is_selected boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_merge_wizard_line ADD CONSTRAINT account_merge_wizard_line_pkey PRIMARY KEY (id);
ALTER TABLE account_merge_wizard_line ADD CONSTRAINT account_merge_wizard_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_merge_wizard_line ADD CONSTRAINT account_merge_wizard_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_merge_wizard_line ADD CONSTRAINT account_merge_wizard_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES account_merge_wizard (id) ON DELETE CASCADE;
ALTER TABLE account_merge_wizard_line ADD CONSTRAINT account_merge_wizard_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_missing_transaction_wizard (id integer NOT NULL, journal_id integer, create_uid integer, write_uid integer, date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_missing_transaction_wizard ADD CONSTRAINT account_missing_transaction_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_missing_transaction_wizard ADD CONSTRAINT account_missing_transaction_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_missing_transaction_wizard ADD CONSTRAINT account_missing_transaction_wizard_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_missing_transaction_wizard ADD CONSTRAINT account_missing_transaction_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_model_rel (account_transfer_model_id integer NOT NULL, account_account_id integer NOT NULL);
ALTER TABLE account_model_rel ADD CONSTRAINT account_model_rel_pkey PRIMARY KEY (account_transfer_model_id, account_account_id);
ALTER TABLE account_model_rel ADD CONSTRAINT account_model_rel_account_account_id_fkey FOREIGN KEY (account_account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_model_rel ADD CONSTRAINT account_model_rel_account_transfer_model_id_fkey FOREIGN KEY (account_transfer_model_id) REFERENCES account_transfer_model (id) ON DELETE CASCADE;
CREATE TABLE account_move (id integer NOT NULL, sequence_number integer, message_main_attachment_id integer, journal_id integer NOT NULL, company_id integer, origin_payment_id integer, statement_line_id integer, tax_cash_basis_rec_id integer, tax_cash_basis_origin_move_id integer, auto_post_origin_id integer, secure_sequence_number integer, invoice_payment_term_id integer, partner_id integer, commercial_partner_id integer, partner_shipping_id integer, partner_bank_id integer, fiscal_position_id integer, preferred_payment_method_line_id integer, currency_id integer NOT NULL, reversed_entry_id integer, invoice_user_id integer, invoice_incoterm_id integer, invoice_cash_rounding_id integer, create_uid integer, write_uid integer, date date NOT NULL, auto_post_until date, invoice_date date, invoice_date_due date, delivery_date date, sending_data jsonb, narration text, is_storno boolean, always_tax_exigible boolean, checked boolean, posted_before boolean, made_sequence_gap boolean, is_manually_modified boolean, is_move_sent boolean, create_date timestamp, write_date timestamp, signing_user integer, transfer_model_id integer, avatax_tax_date date, campaign_id integer, source_id integer, medium_id integer, team_id integer, extract_attachment_id integer, extract_detected_layout integer, extract_prefill_data jsonb, is_in_extractable_state boolean, extract_state_processed boolean);
ALTER TABLE account_move ADD CONSTRAINT account_move_pkey PRIMARY KEY (id);
ALTER TABLE account_move ADD CONSTRAINT account_move_commercial_partner_id_fkey FOREIGN KEY (commercial_partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_extract_attachment_id_fkey FOREIGN KEY (extract_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_fiscal_position_id_fkey FOREIGN KEY (fiscal_position_id) REFERENCES account_fiscal_position (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_invoice_cash_rounding_id_fkey FOREIGN KEY (invoice_cash_rounding_id) REFERENCES account_cash_rounding (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_invoice_incoterm_id_fkey FOREIGN KEY (invoice_incoterm_id) REFERENCES account_incoterms (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_invoice_payment_term_id_fkey FOREIGN KEY (invoice_payment_term_id) REFERENCES account_payment_term (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_invoice_user_id_fkey FOREIGN KEY (invoice_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES utm_medium (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_message_main_attachment_id_fkey FOREIGN KEY (message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_origin_payment_id_fkey FOREIGN KEY (origin_payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_partner_bank_id_fkey FOREIGN KEY (partner_bank_id) REFERENCES res_partner_bank (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_move ADD CONSTRAINT account_move_partner_shipping_id_fkey FOREIGN KEY (partner_shipping_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_preferred_payment_method_line_id_fkey FOREIGN KEY (preferred_payment_method_line_id) REFERENCES account_payment_method_line (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_reversed_entry_id_fkey FOREIGN KEY (reversed_entry_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_signing_user_fkey FOREIGN KEY (signing_user) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_source_id_fkey FOREIGN KEY (source_id) REFERENCES utm_source (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_statement_line_id_fkey FOREIGN KEY (statement_line_id) REFERENCES account_bank_statement_line (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_tax_cash_basis_origin_move_id_fkey FOREIGN KEY (tax_cash_basis_origin_move_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_tax_cash_basis_rec_id_fkey FOREIGN KEY (tax_cash_basis_rec_id) REFERENCES account_partial_reconcile (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_transfer_model_id_fkey FOREIGN KEY (transfer_model_id) REFERENCES account_transfer_model (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
ALTER TABLE account_move ADD CONSTRAINT account_move_auto_post_origin_id_fkey FOREIGN KEY (auto_post_origin_id) REFERENCES account_move (id) ON DELETE SET NULL;
CREATE TABLE account_move__account_payment (invoice_id integer NOT NULL, payment_id integer NOT NULL);
ALTER TABLE account_move__account_payment ADD CONSTRAINT account_move__account_payment_pkey PRIMARY KEY (invoice_id, payment_id);
ALTER TABLE account_move__account_payment ADD CONSTRAINT account_move__account_payment_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment (id) ON DELETE CASCADE;
ALTER TABLE account_move__account_payment ADD CONSTRAINT account_move__account_payment_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES account_move (id) ON DELETE CASCADE;
CREATE TABLE account_move_account_move_send_batch_wizard_rel (account_move_send_batch_wizard_id integer NOT NULL, account_move_id integer NOT NULL);
ALTER TABLE account_move_account_move_send_batch_wizard_rel ADD CONSTRAINT account_move_account_move_send_batch_wizard_rel_pkey PRIMARY KEY (account_move_send_batch_wizard_id, account_move_id);
ALTER TABLE account_move_account_move_send_batch_wizard_rel ADD CONSTRAINT account_move_account_move_send_batch_wizar_account_move_id_fkey FOREIGN KEY (account_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_account_move_send_batch_wizard_rel ADD CONSTRAINT account_move_account_move_sen_account_move_send_batch_wiza_fkey FOREIGN KEY (account_move_send_batch_wizard_id) REFERENCES account_move_send_batch_wizard (id) ON DELETE CASCADE;
CREATE TABLE account_move_account_resequence_wizard_rel (account_resequence_wizard_id integer NOT NULL, account_move_id integer NOT NULL);
ALTER TABLE account_move_account_resequence_wizard_rel ADD CONSTRAINT account_move_account_resequence_wizard_rel_pkey PRIMARY KEY (account_resequence_wizard_id, account_move_id);
ALTER TABLE account_move_account_resequence_wizard_rel ADD CONSTRAINT account_move_account_resequence_wizard_rel_account_move_id_fkey FOREIGN KEY (account_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_account_resequence_wizard_rel ADD CONSTRAINT account_move_account_resequen_account_resequence_wizard_id_fkey FOREIGN KEY (account_resequence_wizard_id) REFERENCES account_resequence_wizard (id) ON DELETE CASCADE;
CREATE TABLE account_move_deferred_rel (original_move_id integer NOT NULL, deferred_move_id integer NOT NULL);
ALTER TABLE account_move_deferred_rel ADD CONSTRAINT account_move_deferred_rel_pkey PRIMARY KEY (original_move_id, deferred_move_id);
ALTER TABLE account_move_deferred_rel ADD CONSTRAINT account_move_deferred_rel_original_move_id_fkey FOREIGN KEY (original_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_deferred_rel ADD CONSTRAINT account_move_deferred_rel_deferred_move_id_fkey FOREIGN KEY (deferred_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
CREATE TABLE account_move_line (id integer NOT NULL, move_id integer NOT NULL, journal_id integer, company_id integer, company_currency_id integer, sequence integer, account_id integer, currency_id integer NOT NULL, partner_id integer, reconcile_model_id integer, payment_id integer, statement_line_id integer, statement_id integer, group_tax_id integer, tax_line_id integer, tax_group_id integer, tax_repartition_line_id integer, full_reconcile_id integer, product_id integer, product_uom_id integer, create_uid integer, write_uid integer, date date, invoice_date date, date_maturity date, discount_date date, analytic_distribution jsonb, is_imported boolean, tax_tag_invert boolean, reconciled boolean, create_date timestamp, write_date timestamp, deferred_start_date date, deferred_end_date date, is_downpayment boolean);
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_pkey PRIMARY KEY (id);
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_tax_line_id_fkey FOREIGN KEY (tax_line_id) REFERENCES account_tax (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_tax_repartition_line_id_fkey FOREIGN KEY (tax_repartition_line_id) REFERENCES account_tax_repartition_line (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_company_currency_id_fkey FOREIGN KEY (company_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_full_reconcile_id_fkey FOREIGN KEY (full_reconcile_id) REFERENCES account_full_reconcile (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_group_tax_id_fkey FOREIGN KEY (group_tax_id) REFERENCES account_tax (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_reconcile_model_id_fkey FOREIGN KEY (reconcile_model_id) REFERENCES account_reconcile_model (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_statement_id_fkey FOREIGN KEY (statement_id) REFERENCES account_bank_statement (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_statement_line_id_fkey FOREIGN KEY (statement_line_id) REFERENCES account_bank_statement_line (id) ON DELETE SET NULL;
ALTER TABLE account_move_line ADD CONSTRAINT account_move_line_tax_group_id_fkey FOREIGN KEY (tax_group_id) REFERENCES account_tax_group (id) ON DELETE SET NULL;
CREATE TABLE account_move_line_account_reconcile_wizard_rel (account_reconcile_wizard_id integer NOT NULL, account_move_line_id integer NOT NULL);
ALTER TABLE account_move_line_account_reconcile_wizard_rel ADD CONSTRAINT account_move_line_account_reconcile_wizard_rel_pkey PRIMARY KEY (account_reconcile_wizard_id, account_move_line_id);
ALTER TABLE account_move_line_account_reconcile_wizard_rel ADD CONSTRAINT account_move_line_account_reconcile_w_account_move_line_id_fkey FOREIGN KEY (account_move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
ALTER TABLE account_move_line_account_reconcile_wizard_rel ADD CONSTRAINT account_move_line_account_reco_account_reconcile_wizard_id_fkey FOREIGN KEY (account_reconcile_wizard_id) REFERENCES account_reconcile_wizard (id) ON DELETE CASCADE;
CREATE TABLE account_move_line_account_tax_rel (account_move_line_id integer NOT NULL, account_tax_id integer NOT NULL);
ALTER TABLE account_move_line_account_tax_rel ADD CONSTRAINT account_move_line_account_tax_rel_pkey PRIMARY KEY (account_move_line_id, account_tax_id);
ALTER TABLE account_move_line_account_tax_rel ADD CONSTRAINT account_move_line_account_tax_rel_account_move_line_id_fkey FOREIGN KEY (account_move_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
ALTER TABLE account_move_line_account_tax_rel ADD CONSTRAINT account_move_line_account_tax_rel_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE account_move_reversal (id integer NOT NULL, journal_id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_move_reversal ADD CONSTRAINT account_move_reversal_pkey PRIMARY KEY (id);
ALTER TABLE account_move_reversal ADD CONSTRAINT account_move_reversal_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_move_reversal ADD CONSTRAINT account_move_reversal_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_reversal ADD CONSTRAINT account_move_reversal_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
ALTER TABLE account_move_reversal ADD CONSTRAINT account_move_reversal_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_move_reversal_move (reversal_id integer NOT NULL, move_id integer NOT NULL);
ALTER TABLE account_move_reversal_move ADD CONSTRAINT account_move_reversal_move_pkey PRIMARY KEY (reversal_id, move_id);
ALTER TABLE account_move_reversal_move ADD CONSTRAINT account_move_reversal_move_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_reversal_move ADD CONSTRAINT account_move_reversal_move_reversal_id_fkey FOREIGN KEY (reversal_id) REFERENCES account_move_reversal (id) ON DELETE CASCADE;
CREATE TABLE account_move_reversal_new_move (reversal_id integer NOT NULL, new_move_id integer NOT NULL);
ALTER TABLE account_move_reversal_new_move ADD CONSTRAINT account_move_reversal_new_move_pkey PRIMARY KEY (reversal_id, new_move_id);
ALTER TABLE account_move_reversal_new_move ADD CONSTRAINT account_move_reversal_new_move_reversal_id_fkey FOREIGN KEY (reversal_id) REFERENCES account_move_reversal (id) ON DELETE CASCADE;
ALTER TABLE account_move_reversal_new_move ADD CONSTRAINT account_move_reversal_new_move_new_move_id_fkey FOREIGN KEY (new_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
CREATE TABLE account_move_send_batch_wizard (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_move_send_batch_wizard ADD CONSTRAINT account_move_send_batch_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_move_send_batch_wizard ADD CONSTRAINT account_move_send_batch_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_send_batch_wizard ADD CONSTRAINT account_move_send_batch_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_move_send_wizard (id integer NOT NULL, move_id integer NOT NULL, pdf_report_id integer, mail_template_id integer, create_uid integer, write_uid integer, sending_method_checkboxes jsonb, extra_edi_checkboxes jsonb, mail_attachments_widget jsonb, mail_body text, create_date timestamp, write_date timestamp);
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_pdf_report_id_fkey FOREIGN KEY (pdf_report_id) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL;
ALTER TABLE account_move_send_wizard ADD CONSTRAINT account_move_send_wizard_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
CREATE TABLE account_move_send_wizard_res_partner_rel (account_move_send_wizard_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE account_move_send_wizard_res_partner_rel ADD CONSTRAINT account_move_send_wizard_res_partner_rel_pkey PRIMARY KEY (account_move_send_wizard_id, res_partner_id);
ALTER TABLE account_move_send_wizard_res_partner_rel ADD CONSTRAINT account_move_send_wizard_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE account_move_send_wizard_res_partner_rel ADD CONSTRAINT account_move_send_wizard_res_p_account_move_send_wizard_id_fkey FOREIGN KEY (account_move_send_wizard_id) REFERENCES account_move_send_wizard (id) ON DELETE CASCADE;
CREATE TABLE account_move_validate_account_move_rel (validate_account_move_id integer NOT NULL, account_move_id integer NOT NULL);
ALTER TABLE account_move_validate_account_move_rel ADD CONSTRAINT account_move_validate_account_move_rel_pkey PRIMARY KEY (validate_account_move_id, account_move_id);
ALTER TABLE account_move_validate_account_move_rel ADD CONSTRAINT account_move_validate_account_move_rel_account_move_id_fkey FOREIGN KEY (account_move_id) REFERENCES account_move (id) ON DELETE CASCADE;
ALTER TABLE account_move_validate_account_move_rel ADD CONSTRAINT account_move_validate_account_mov_validate_account_move_id_fkey FOREIGN KEY (validate_account_move_id) REFERENCES validate_account_move (id) ON DELETE CASCADE;
CREATE TABLE account_online_account (id integer NOT NULL, account_online_link_id integer, currency_id integer, create_uid integer, write_uid integer, last_sync date, inverse_balance_sign boolean, inverse_transaction_sign boolean, create_date timestamp, write_date timestamp, balance double precision);
ALTER TABLE account_online_account ADD CONSTRAINT account_online_account_pkey PRIMARY KEY (id);
ALTER TABLE account_online_account ADD CONSTRAINT account_online_account_account_online_link_id_fkey FOREIGN KEY (account_online_link_id) REFERENCES account_online_link (id) ON DELETE CASCADE;
ALTER TABLE account_online_account ADD CONSTRAINT account_online_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_online_account ADD CONSTRAINT account_online_account_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_online_account ADD CONSTRAINT account_online_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_online_link (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, expiring_synchronization_date date, connection_state_details jsonb, auto_sync boolean, has_unlinked_accounts boolean, last_refresh timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE account_online_link ADD CONSTRAINT account_online_link_pkey PRIMARY KEY (id);
ALTER TABLE account_online_link ADD CONSTRAINT account_online_link_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_online_link ADD CONSTRAINT account_online_link_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_online_link ADD CONSTRAINT account_online_link_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_partial_reconcile (id integer NOT NULL, debit_move_id integer NOT NULL, credit_move_id integer NOT NULL, full_reconcile_id integer, exchange_move_id integer, debit_currency_id integer, credit_currency_id integer, company_id integer, create_uid integer, write_uid integer, max_date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_pkey PRIMARY KEY (id);
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_credit_move_id_fkey FOREIGN KEY (credit_move_id) REFERENCES account_move_line (id) ON DELETE RESTRICT;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_credit_currency_id_fkey FOREIGN KEY (credit_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_debit_currency_id_fkey FOREIGN KEY (debit_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_debit_move_id_fkey FOREIGN KEY (debit_move_id) REFERENCES account_move_line (id) ON DELETE RESTRICT;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_exchange_move_id_fkey FOREIGN KEY (exchange_move_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_full_reconcile_id_fkey FOREIGN KEY (full_reconcile_id) REFERENCES account_full_reconcile (id) ON DELETE SET NULL;
ALTER TABLE account_partial_reconcile ADD CONSTRAINT account_partial_reconcile_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_payment (id integer NOT NULL, message_main_attachment_id integer, move_id integer, journal_id integer NOT NULL, company_id integer NOT NULL, partner_bank_id integer, paired_internal_transfer_payment_id integer, payment_method_line_id integer, payment_method_id integer, currency_id integer, partner_id integer, outstanding_account_id integer, destination_account_id integer, create_uid integer, write_uid integer, date date NOT NULL, is_reconciled boolean, is_matched boolean, is_sent boolean, create_date timestamp, write_date timestamp, payment_transaction_id integer, payment_token_id integer, source_payment_id integer);
ALTER TABLE account_payment ADD CONSTRAINT account_payment_pkey PRIMARY KEY (id);
ALTER TABLE account_payment ADD CONSTRAINT account_payment_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_destination_account_id_fkey FOREIGN KEY (destination_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE RESTRICT;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_message_main_attachment_id_fkey FOREIGN KEY (message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_move_id_fkey FOREIGN KEY (move_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_outstanding_account_id_fkey FOREIGN KEY (outstanding_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_paired_internal_transfer_payment_id_fkey FOREIGN KEY (paired_internal_transfer_payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES account_payment_method (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_payment_method_line_id_fkey FOREIGN KEY (payment_method_line_id) REFERENCES account_payment_method_line (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_payment_token_id_fkey FOREIGN KEY (payment_token_id) REFERENCES payment_token (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_payment_transaction_id_fkey FOREIGN KEY (payment_transaction_id) REFERENCES payment_transaction (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_source_payment_id_fkey FOREIGN KEY (source_payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_partner_bank_id_fkey FOREIGN KEY (partner_bank_id) REFERENCES res_partner_bank (id) ON DELETE RESTRICT;
ALTER TABLE account_payment ADD CONSTRAINT account_payment_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_payment_account_bank_statement_line_rel (account_bank_statement_line_id integer NOT NULL, account_payment_id integer NOT NULL);
ALTER TABLE account_payment_account_bank_statement_line_rel ADD CONSTRAINT account_payment_account_bank_statement_line_rel_pkey PRIMARY KEY (account_bank_statement_line_id, account_payment_id);
ALTER TABLE account_payment_account_bank_statement_line_rel ADD CONSTRAINT account_payment_account_bank__account_bank_statement_line__fkey FOREIGN KEY (account_bank_statement_line_id) REFERENCES account_bank_statement_line (id) ON DELETE CASCADE;
ALTER TABLE account_payment_account_bank_statement_line_rel ADD CONSTRAINT account_payment_account_bank_statement__account_payment_id_fkey FOREIGN KEY (account_payment_id) REFERENCES account_payment (id) ON DELETE CASCADE;
CREATE TABLE account_payment_method (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_payment_method ADD CONSTRAINT account_payment_method_pkey PRIMARY KEY (id);
ALTER TABLE account_payment_method ADD CONSTRAINT account_payment_method_name_code_unique UNIQUE (code, payment_type);
ALTER TABLE account_payment_method ADD CONSTRAINT account_payment_method_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_method ADD CONSTRAINT account_payment_method_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_payment_method_line (id integer NOT NULL, sequence integer, payment_method_id integer NOT NULL, payment_account_id integer, journal_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, payment_provider_id integer);
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_pkey PRIMARY KEY (id);
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_payment_account_id_fkey FOREIGN KEY (payment_account_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_payment_provider_id_fkey FOREIGN KEY (payment_provider_id) REFERENCES payment_provider (id) ON DELETE SET NULL;
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_method_line ADD CONSTRAINT account_payment_method_line_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES account_payment_method (id) ON DELETE RESTRICT;
CREATE TABLE account_payment_register (id integer NOT NULL, currency_id integer, journal_id integer, partner_bank_id integer, custom_user_currency_id integer, source_currency_id integer, company_id integer, partner_id integer, payment_method_line_id integer, writeoff_account_id integer, create_uid integer, write_uid integer, payment_date date NOT NULL, group_payment boolean, can_edit_wizard boolean, can_group_payments boolean, create_date timestamp, write_date timestamp, payment_token_id integer);
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_pkey PRIMARY KEY (id);
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_custom_user_currency_id_fkey FOREIGN KEY (custom_user_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_partner_bank_id_fkey FOREIGN KEY (partner_bank_id) REFERENCES res_partner_bank (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_payment_token_id_fkey FOREIGN KEY (payment_token_id) REFERENCES payment_token (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_source_currency_id_fkey FOREIGN KEY (source_currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_writeoff_account_id_fkey FOREIGN KEY (writeoff_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_payment_register ADD CONSTRAINT account_payment_register_payment_method_line_id_fkey FOREIGN KEY (payment_method_line_id) REFERENCES account_payment_method_line (id) ON DELETE SET NULL;
CREATE TABLE account_payment_register_move_line_rel (wizard_id integer NOT NULL, line_id integer NOT NULL);
ALTER TABLE account_payment_register_move_line_rel ADD CONSTRAINT account_payment_register_move_line_rel_pkey PRIMARY KEY (wizard_id, line_id);
ALTER TABLE account_payment_register_move_line_rel ADD CONSTRAINT account_payment_register_move_line_rel_line_id_fkey FOREIGN KEY (line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
ALTER TABLE account_payment_register_move_line_rel ADD CONSTRAINT account_payment_register_move_line_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES account_payment_register (id) ON DELETE CASCADE;
CREATE TABLE account_payment_term (id integer NOT NULL, company_id integer, sequence integer NOT NULL, discount_days integer, create_uid integer, write_uid integer, name jsonb NOT NULL, note jsonb, active boolean, display_on_invoice boolean, early_discount boolean, create_date timestamp, write_date timestamp, discount_percentage double precision);
ALTER TABLE account_payment_term ADD CONSTRAINT account_payment_term_pkey PRIMARY KEY (id);
ALTER TABLE account_payment_term ADD CONSTRAINT account_payment_term_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_payment_term ADD CONSTRAINT account_payment_term_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_term ADD CONSTRAINT account_payment_term_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_payment_term_line (id integer NOT NULL, nb_days integer, payment_id integer NOT NULL, create_uid integer, write_uid integer, days_next_month varchar(2), create_date timestamp, write_date timestamp);
ALTER TABLE account_payment_term_line ADD CONSTRAINT account_payment_term_line_pkey PRIMARY KEY (id);
ALTER TABLE account_payment_term_line ADD CONSTRAINT account_payment_term_line_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment_term (id) ON DELETE CASCADE;
ALTER TABLE account_payment_term_line ADD CONSTRAINT account_payment_term_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_payment_term_line ADD CONSTRAINT account_payment_term_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_reconcile_model (id integer NOT NULL, sequence integer NOT NULL, company_id integer NOT NULL, past_months_limit integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, auto_reconcile boolean, to_check boolean, match_text_location_label boolean, match_text_location_note boolean, match_text_location_reference boolean, match_same_currency boolean, allow_payment_tolerance boolean, match_partner boolean, create_date timestamp, write_date timestamp, match_amount_min double precision, match_amount_max double precision, payment_tolerance_param double precision);
ALTER TABLE account_reconcile_model ADD CONSTRAINT account_reconcile_model_pkey PRIMARY KEY (id);
ALTER TABLE account_reconcile_model ADD CONSTRAINT account_reconcile_model_name_unique UNIQUE (name, company_id);
ALTER TABLE account_reconcile_model ADD CONSTRAINT account_reconcile_model_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_reconcile_model ADD CONSTRAINT account_reconcile_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_model ADD CONSTRAINT account_reconcile_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_reconcile_model_line (id integer NOT NULL, model_id integer, company_id integer, sequence integer NOT NULL, account_id integer, journal_id integer, create_uid integer, write_uid integer, analytic_distribution jsonb, label jsonb, force_tax_included boolean, create_date timestamp, write_date timestamp, amount double precision);
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_pkey PRIMARY KEY (id);
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_line ADD CONSTRAINT account_reconcile_model_line_model_id_fkey FOREIGN KEY (model_id) REFERENCES account_reconcile_model (id) ON DELETE CASCADE;
CREATE TABLE account_reconcile_model_line_account_tax_rel (account_reconcile_model_line_id integer NOT NULL, account_tax_id integer NOT NULL);
ALTER TABLE account_reconcile_model_line_account_tax_rel ADD CONSTRAINT account_reconcile_model_line_account_tax_rel_pkey PRIMARY KEY (account_reconcile_model_line_id, account_tax_id);
ALTER TABLE account_reconcile_model_line_account_tax_rel ADD CONSTRAINT account_reconcile_model_line_account_tax_re_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax (id) ON DELETE RESTRICT;
ALTER TABLE account_reconcile_model_line_account_tax_rel ADD CONSTRAINT account_reconcile_model_line__account_reconcile_model_line_fkey FOREIGN KEY (account_reconcile_model_line_id) REFERENCES account_reconcile_model_line (id) ON DELETE CASCADE;
CREATE TABLE account_reconcile_model_partner_mapping (id integer NOT NULL, model_id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_reconcile_model_partner_mapping ADD CONSTRAINT account_reconcile_model_partner_mapping_pkey PRIMARY KEY (id);
ALTER TABLE account_reconcile_model_partner_mapping ADD CONSTRAINT account_reconcile_model_partner_mapping_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_model_partner_mapping ADD CONSTRAINT account_reconcile_model_partner_mapping_model_id_fkey FOREIGN KEY (model_id) REFERENCES account_reconcile_model (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_partner_mapping ADD CONSTRAINT account_reconcile_model_partner_mapping_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_partner_mapping ADD CONSTRAINT account_reconcile_model_partner_mapping_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_reconcile_model_res_partner_category_rel (account_reconcile_model_id integer NOT NULL, res_partner_category_id integer NOT NULL);
ALTER TABLE account_reconcile_model_res_partner_category_rel ADD CONSTRAINT account_reconcile_model_res_partner_category_rel_pkey PRIMARY KEY (account_reconcile_model_id, res_partner_category_id);
ALTER TABLE account_reconcile_model_res_partner_category_rel ADD CONSTRAINT account_reconcile_model_res_partne_res_partner_category_id_fkey FOREIGN KEY (res_partner_category_id) REFERENCES res_partner_category (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_res_partner_category_rel ADD CONSTRAINT account_reconcile_model_res_pa_account_reconcile_model_id_fkey1 FOREIGN KEY (account_reconcile_model_id) REFERENCES account_reconcile_model (id) ON DELETE CASCADE;
CREATE TABLE account_reconcile_model_res_partner_rel (account_reconcile_model_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE account_reconcile_model_res_partner_rel ADD CONSTRAINT account_reconcile_model_res_partner_rel_pkey PRIMARY KEY (account_reconcile_model_id, res_partner_id);
ALTER TABLE account_reconcile_model_res_partner_rel ADD CONSTRAINT account_reconcile_model_res_par_account_reconcile_model_id_fkey FOREIGN KEY (account_reconcile_model_id) REFERENCES account_reconcile_model (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_model_res_partner_rel ADD CONSTRAINT account_reconcile_model_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE account_reconcile_wizard (id integer NOT NULL, journal_id integer NOT NULL, account_id integer, to_partner_id integer, tax_id integer, create_uid integer, write_uid integer, date date, allow_partials boolean, to_check boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_to_partner_id_fkey FOREIGN KEY (to_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_reconcile_wizard ADD CONSTRAINT account_reconcile_wizard_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE SET NULL;
CREATE TABLE account_report (id integer NOT NULL, sequence integer, root_report_id integer, country_id integer, load_more_limit integer, prefix_groups_threshold integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, use_sections boolean, only_tax_exigible boolean, search_bar boolean, filter_date_range boolean, filter_show_draft boolean, filter_unreconciled boolean, filter_unfold_all boolean, filter_period_comparison boolean, filter_growth_comparison boolean, filter_journals boolean, filter_analytic boolean, filter_partner boolean, filter_fiscal_position boolean, filter_aml_ir_filters boolean, filter_budgets boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_report ADD CONSTRAINT account_report_pkey PRIMARY KEY (id);
ALTER TABLE account_report ADD CONSTRAINT account_report_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report ADD CONSTRAINT account_report_root_report_id_fkey FOREIGN KEY (root_report_id) REFERENCES account_report (id) ON DELETE SET NULL;
ALTER TABLE account_report ADD CONSTRAINT account_report_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report ADD CONSTRAINT account_report_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
CREATE TABLE account_report_column (id integer NOT NULL, sequence integer, report_id integer, custom_audit_action_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, sortable boolean, blank_if_zero boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_report_column ADD CONSTRAINT account_report_column_pkey PRIMARY KEY (id);
ALTER TABLE account_report_column ADD CONSTRAINT account_report_column_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_column ADD CONSTRAINT account_report_column_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_column ADD CONSTRAINT account_report_column_custom_audit_action_id_fkey FOREIGN KEY (custom_audit_action_id) REFERENCES ir_act_window (id) ON DELETE SET NULL;
ALTER TABLE account_report_column ADD CONSTRAINT account_report_column_report_id_fkey FOREIGN KEY (report_id) REFERENCES account_report (id) ON DELETE SET NULL;
CREATE TABLE account_report_expression (id integer NOT NULL, report_line_id integer NOT NULL, create_uid integer, write_uid integer, green_on_positive boolean, blank_if_zero boolean, auditable boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_report_expression ADD CONSTRAINT account_report_expression_pkey PRIMARY KEY (id);
ALTER TABLE account_report_expression ADD CONSTRAINT account_report_expression_line_label_uniq UNIQUE (report_line_id, label);
ALTER TABLE account_report_expression ADD CONSTRAINT account_report_expression_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_expression ADD CONSTRAINT account_report_expression_report_line_id_fkey FOREIGN KEY (report_line_id) REFERENCES account_report_line (id) ON DELETE CASCADE;
ALTER TABLE account_report_expression ADD CONSTRAINT account_report_expression_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_report_external_value (id integer NOT NULL, target_report_expression_id integer NOT NULL, company_id integer NOT NULL, foreign_vat_fiscal_position_id integer, carryover_origin_report_line_id integer, create_uid integer, write_uid integer, date date NOT NULL, create_date timestamp, write_date timestamp, value double precision);
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_pkey PRIMARY KEY (id);
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_foreign_vat_fiscal_position__fkey FOREIGN KEY (foreign_vat_fiscal_position_id) REFERENCES account_fiscal_position (id) ON DELETE SET NULL;
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_target_report_expression_id_fkey FOREIGN KEY (target_report_expression_id) REFERENCES account_report_expression (id) ON DELETE CASCADE;
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_external_value ADD CONSTRAINT account_report_external_value_carryover_origin_report_line_fkey FOREIGN KEY (carryover_origin_report_line_id) REFERENCES account_report_line (id) ON DELETE SET NULL;
CREATE TABLE account_report_line (id integer NOT NULL, report_id integer NOT NULL, hierarchy_level integer NOT NULL, parent_id integer, sequence integer, action_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, foldable boolean, print_on_new_page boolean, hide_if_zero boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_pkey PRIMARY KEY (id);
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_code_uniq UNIQUE (report_id, code);
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES account_report_line (id) ON DELETE SET NULL;
ALTER TABLE account_report_line ADD CONSTRAINT account_report_line_report_id_fkey FOREIGN KEY (report_id) REFERENCES account_report (id) ON DELETE CASCADE;
CREATE TABLE account_report_section_rel (main_report_id integer NOT NULL, sub_report_id integer NOT NULL);
ALTER TABLE account_report_section_rel ADD CONSTRAINT account_report_section_rel_pkey PRIMARY KEY (main_report_id, sub_report_id);
ALTER TABLE account_report_section_rel ADD CONSTRAINT account_report_section_rel_sub_report_id_fkey FOREIGN KEY (sub_report_id) REFERENCES account_report (id) ON DELETE CASCADE;
ALTER TABLE account_report_section_rel ADD CONSTRAINT account_report_section_rel_main_report_id_fkey FOREIGN KEY (main_report_id) REFERENCES account_report (id) ON DELETE CASCADE;
CREATE TABLE account_resequence_wizard (id integer NOT NULL, create_uid integer, write_uid integer, first_date date, end_date date, create_date timestamp, write_date timestamp);
ALTER TABLE account_resequence_wizard ADD CONSTRAINT account_resequence_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_resequence_wizard ADD CONSTRAINT account_resequence_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_resequence_wizard ADD CONSTRAINT account_resequence_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_secure_entries_wizard (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, hash_date date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE account_secure_entries_wizard ADD CONSTRAINT account_secure_entries_wizard_pkey PRIMARY KEY (id);
ALTER TABLE account_secure_entries_wizard ADD CONSTRAINT account_secure_entries_wizard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE account_secure_entries_wizard ADD CONSTRAINT account_secure_entries_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_secure_entries_wizard ADD CONSTRAINT account_secure_entries_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_setup_bank_manual_config (id integer NOT NULL, res_partner_bank_id integer NOT NULL, num_journals_without_account integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE account_setup_bank_manual_config ADD CONSTRAINT account_setup_bank_manual_config_pkey PRIMARY KEY (id);
ALTER TABLE account_setup_bank_manual_config ADD CONSTRAINT account_setup_bank_manual_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_setup_bank_manual_config ADD CONSTRAINT account_setup_bank_manual_config_res_partner_bank_id_fkey FOREIGN KEY (res_partner_bank_id) REFERENCES res_partner_bank (id) ON DELETE CASCADE;
ALTER TABLE account_setup_bank_manual_config ADD CONSTRAINT account_setup_bank_manual_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_tax (id integer NOT NULL, company_id integer NOT NULL, sequence integer NOT NULL, tax_group_id integer NOT NULL, cash_basis_transition_account_id integer, country_id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, description jsonb, invoice_label jsonb, invoice_legal_notes text, active boolean, include_base_amount boolean, is_base_affected boolean, analytic boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_tax ADD CONSTRAINT account_tax_pkey PRIMARY KEY (id);
ALTER TABLE account_tax ADD CONSTRAINT account_tax_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_tax ADD CONSTRAINT account_tax_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE RESTRICT;
ALTER TABLE account_tax ADD CONSTRAINT account_tax_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_tax ADD CONSTRAINT account_tax_tax_group_id_fkey FOREIGN KEY (tax_group_id) REFERENCES account_tax_group (id) ON DELETE RESTRICT;
ALTER TABLE account_tax ADD CONSTRAINT account_tax_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_tax ADD CONSTRAINT account_tax_cash_basis_transition_account_id_fkey FOREIGN KEY (cash_basis_transition_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
CREATE TABLE account_tax_filiation_rel (parent_tax integer NOT NULL, child_tax integer NOT NULL);
ALTER TABLE account_tax_filiation_rel ADD CONSTRAINT account_tax_filiation_rel_pkey PRIMARY KEY (parent_tax, child_tax);
ALTER TABLE account_tax_filiation_rel ADD CONSTRAINT account_tax_filiation_rel_child_tax_fkey FOREIGN KEY (child_tax) REFERENCES account_tax (id) ON DELETE CASCADE;
ALTER TABLE account_tax_filiation_rel ADD CONSTRAINT account_tax_filiation_rel_parent_tax_fkey FOREIGN KEY (parent_tax) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE account_tax_group (id integer NOT NULL, sequence integer, company_id integer NOT NULL, tax_payable_account_id integer, tax_receivable_account_id integer, advance_tax_payment_account_id integer, country_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, preceding_subtotal jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_pkey PRIMARY KEY (id);
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_advance_tax_payment_account_id_fkey FOREIGN KEY (advance_tax_payment_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_tax_payable_account_id_fkey FOREIGN KEY (tax_payable_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_tax_receivable_account_id_fkey FOREIGN KEY (tax_receivable_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_tax_group ADD CONSTRAINT account_tax_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_tax_repartition_line (id integer NOT NULL, account_id integer, tax_id integer, company_id integer, sequence integer, create_uid integer, write_uid integer, use_in_tax_closing boolean, create_date timestamp, write_date timestamp, factor_percent double precision NOT NULL);
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_pkey PRIMARY KEY (id);
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE account_tax_repartition_line ADD CONSTRAINT account_tax_repartition_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE account_tax_sale_order_discount_rel (sale_order_discount_id integer NOT NULL, account_tax_id integer NOT NULL);
ALTER TABLE account_tax_sale_order_discount_rel ADD CONSTRAINT account_tax_sale_order_discount_rel_pkey PRIMARY KEY (sale_order_discount_id, account_tax_id);
ALTER TABLE account_tax_sale_order_discount_rel ADD CONSTRAINT account_tax_sale_order_discount_rel_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
ALTER TABLE account_tax_sale_order_discount_rel ADD CONSTRAINT account_tax_sale_order_discount_rel_sale_order_discount_id_fkey FOREIGN KEY (sale_order_discount_id) REFERENCES sale_order_discount (id) ON DELETE CASCADE;
CREATE TABLE account_tax_sale_order_line_rel (sale_order_line_id integer NOT NULL, account_tax_id integer NOT NULL);
ALTER TABLE account_tax_sale_order_line_rel ADD CONSTRAINT account_tax_sale_order_line_rel_pkey PRIMARY KEY (sale_order_line_id, account_tax_id);
ALTER TABLE account_tax_sale_order_line_rel ADD CONSTRAINT account_tax_sale_order_line_rel_sale_order_line_id_fkey FOREIGN KEY (sale_order_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
ALTER TABLE account_tax_sale_order_line_rel ADD CONSTRAINT account_tax_sale_order_line_rel_account_tax_id_fkey FOREIGN KEY (account_tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE account_transfer_model (id integer NOT NULL, journal_id integer NOT NULL, create_uid integer, write_uid integer, date_start date NOT NULL, date_stop date, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE account_transfer_model ADD CONSTRAINT account_transfer_model_pkey PRIMARY KEY (id);
ALTER TABLE account_transfer_model ADD CONSTRAINT account_transfer_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_transfer_model ADD CONSTRAINT account_transfer_model_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE RESTRICT;
ALTER TABLE account_transfer_model ADD CONSTRAINT account_transfer_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_transfer_model_line (id integer NOT NULL, transfer_model_id integer NOT NULL, account_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, percent double precision NOT NULL);
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_pkey PRIMARY KEY (id);
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_unique_account_by_transfer_model UNIQUE (transfer_model_id, account_id);
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_transfer_model_id_fkey FOREIGN KEY (transfer_model_id) REFERENCES account_transfer_model (id) ON DELETE CASCADE;
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE RESTRICT;
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE account_transfer_model_line ADD CONSTRAINT account_transfer_model_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE account_transfer_model_line_res_partner_rel (account_transfer_model_line_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE account_transfer_model_line_res_partner_rel ADD CONSTRAINT account_transfer_model_line_res_partner_rel_pkey PRIMARY KEY (account_transfer_model_line_id, res_partner_id);
ALTER TABLE account_transfer_model_line_res_partner_rel ADD CONSTRAINT account_transfer_model_line_r_account_transfer_model_line__fkey FOREIGN KEY (account_transfer_model_line_id) REFERENCES account_transfer_model_line (id) ON DELETE CASCADE;
ALTER TABLE account_transfer_model_line_res_partner_rel ADD CONSTRAINT account_transfer_model_line_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE activity_attachment_rel (activity_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE activity_attachment_rel ADD CONSTRAINT activity_attachment_rel_pkey PRIMARY KEY (activity_id, attachment_id);
ALTER TABLE activity_attachment_rel ADD CONSTRAINT activity_attachment_rel_activity_id_fkey FOREIGN KEY (activity_id) REFERENCES mail_activity (id) ON DELETE CASCADE;
ALTER TABLE activity_attachment_rel ADD CONSTRAINT activity_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
CREATE TABLE app_config (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE app_config ADD CONSTRAINT app_config_pkey PRIMARY KEY (id);
ALTER TABLE app_config ADD CONSTRAINT app_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE app_config ADD CONSTRAINT app_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE archive_user_line (id integer NOT NULL, user_id integer, cancel_subscription_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE archive_user_line ADD CONSTRAINT archive_user_line_pkey PRIMARY KEY (id);
ALTER TABLE archive_user_line ADD CONSTRAINT archive_user_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE archive_user_line ADD CONSTRAINT archive_user_line_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE archive_user_line ADD CONSTRAINT archive_user_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE archive_user_line ADD CONSTRAINT archive_user_line_cancel_subscription_id_fkey FOREIGN KEY (cancel_subscription_id) REFERENCES cancel_subscription (id) ON DELETE SET NULL;
CREATE TABLE auth_totp_device (id integer NOT NULL, user_id integer NOT NULL, expiration_date timestamp, index varchar(8), create_date timestamp);
ALTER TABLE auth_totp_device ADD CONSTRAINT auth_totp_device_pkey PRIMARY KEY (id);
ALTER TABLE auth_totp_device ADD CONSTRAINT auth_totp_device_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE auth_totp_wizard (id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, code varchar(7), create_date timestamp, write_date timestamp, qrcode bytea);
ALTER TABLE auth_totp_wizard ADD CONSTRAINT auth_totp_wizard_pkey PRIMARY KEY (id);
ALTER TABLE auth_totp_wizard ADD CONSTRAINT auth_totp_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE auth_totp_wizard ADD CONSTRAINT auth_totp_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE auth_totp_wizard ADD CONSTRAINT auth_totp_wizard_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE avatax_connection_test_result (id integer NOT NULL, create_uid integer, write_uid integer, server_response text, create_date timestamp, write_date timestamp);
ALTER TABLE avatax_connection_test_result ADD CONSTRAINT avatax_connection_test_result_pkey PRIMARY KEY (id);
ALTER TABLE avatax_connection_test_result ADD CONSTRAINT avatax_connection_test_result_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE avatax_connection_test_result ADD CONSTRAINT avatax_connection_test_result_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE avatax_exemption (id integer NOT NULL, company_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE avatax_exemption ADD CONSTRAINT avatax_exemption_pkey PRIMARY KEY (id);
ALTER TABLE avatax_exemption ADD CONSTRAINT avatax_exemption_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE avatax_exemption ADD CONSTRAINT avatax_exemption_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE avatax_exemption ADD CONSTRAINT avatax_exemption_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE avatax_exemption_res_country_rel (avatax_exemption_id integer NOT NULL, res_country_id integer NOT NULL);
ALTER TABLE avatax_exemption_res_country_rel ADD CONSTRAINT avatax_exemption_res_country_rel_pkey PRIMARY KEY (avatax_exemption_id, res_country_id);
ALTER TABLE avatax_exemption_res_country_rel ADD CONSTRAINT avatax_exemption_res_country_rel_avatax_exemption_id_fkey FOREIGN KEY (avatax_exemption_id) REFERENCES avatax_exemption (id) ON DELETE CASCADE;
ALTER TABLE avatax_exemption_res_country_rel ADD CONSTRAINT avatax_exemption_res_country_rel_res_country_id_fkey FOREIGN KEY (res_country_id) REFERENCES res_country (id) ON DELETE CASCADE;
CREATE TABLE avatax_validate_address (id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE avatax_validate_address ADD CONSTRAINT avatax_validate_address_pkey PRIMARY KEY (id);
ALTER TABLE avatax_validate_address ADD CONSTRAINT avatax_validate_address_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE avatax_validate_address ADD CONSTRAINT avatax_validate_address_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE avatax_validate_address ADD CONSTRAINT avatax_validate_address_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE base_document_layout (id integer NOT NULL, company_id integer NOT NULL, report_layout_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, from_invoice boolean);
ALTER TABLE base_document_layout ADD CONSTRAINT base_document_layout_pkey PRIMARY KEY (id);
ALTER TABLE base_document_layout ADD CONSTRAINT base_document_layout_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE base_document_layout ADD CONSTRAINT base_document_layout_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_document_layout ADD CONSTRAINT base_document_layout_report_layout_id_fkey FOREIGN KEY (report_layout_id) REFERENCES report_layout (id) ON DELETE SET NULL;
ALTER TABLE base_document_layout ADD CONSTRAINT base_document_layout_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_enable_profiling_wizard (id integer NOT NULL, create_uid integer, write_uid integer, expiration timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE base_enable_profiling_wizard ADD CONSTRAINT base_enable_profiling_wizard_pkey PRIMARY KEY (id);
ALTER TABLE base_enable_profiling_wizard ADD CONSTRAINT base_enable_profiling_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_enable_profiling_wizard ADD CONSTRAINT base_enable_profiling_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_import_import (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, file bytea);
ALTER TABLE base_import_import ADD CONSTRAINT base_import_import_pkey PRIMARY KEY (id);
ALTER TABLE base_import_import ADD CONSTRAINT base_import_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_import_import ADD CONSTRAINT base_import_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_import_mapping (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE base_import_mapping ADD CONSTRAINT base_import_mapping_pkey PRIMARY KEY (id);
ALTER TABLE base_import_mapping ADD CONSTRAINT base_import_mapping_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_import_mapping ADD CONSTRAINT base_import_mapping_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_import_module (id integer NOT NULL, create_uid integer, write_uid integer, import_message text, modules_dependencies text, force boolean, with_demo boolean, create_date timestamp, write_date timestamp, module_file bytea NOT NULL);
ALTER TABLE base_import_module ADD CONSTRAINT base_import_module_pkey PRIMARY KEY (id);
ALTER TABLE base_import_module ADD CONSTRAINT base_import_module_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_import_module ADD CONSTRAINT base_import_module_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_language_export (id integer NOT NULL, model_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, data bytea);
ALTER TABLE base_language_export ADD CONSTRAINT base_language_export_pkey PRIMARY KEY (id);
ALTER TABLE base_language_export ADD CONSTRAINT base_language_export_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_language_export ADD CONSTRAINT base_language_export_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE SET NULL;
ALTER TABLE base_language_export ADD CONSTRAINT base_language_export_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_language_import (id integer NOT NULL, create_uid integer, write_uid integer, overwrite boolean, create_date timestamp, write_date timestamp, data bytea NOT NULL);
ALTER TABLE base_language_import ADD CONSTRAINT base_language_import_pkey PRIMARY KEY (id);
ALTER TABLE base_language_import ADD CONSTRAINT base_language_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_language_import ADD CONSTRAINT base_language_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_language_install (id integer NOT NULL, create_uid integer, write_uid integer, overwrite boolean, create_date timestamp, write_date timestamp);
ALTER TABLE base_language_install ADD CONSTRAINT base_language_install_pkey PRIMARY KEY (id);
ALTER TABLE base_language_install ADD CONSTRAINT base_language_install_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_language_install ADD CONSTRAINT base_language_install_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_module_install_request (id integer NOT NULL, module_id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, body_html text, create_date timestamp, write_date timestamp);
ALTER TABLE base_module_install_request ADD CONSTRAINT base_module_install_request_pkey PRIMARY KEY (id);
ALTER TABLE base_module_install_request ADD CONSTRAINT base_module_install_request_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE base_module_install_request ADD CONSTRAINT base_module_install_request_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE base_module_install_request ADD CONSTRAINT base_module_install_request_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_module_install_request ADD CONSTRAINT base_module_install_request_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_module_install_review (id integer NOT NULL, module_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE base_module_install_review ADD CONSTRAINT base_module_install_review_pkey PRIMARY KEY (id);
ALTER TABLE base_module_install_review ADD CONSTRAINT base_module_install_review_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_module_install_review ADD CONSTRAINT base_module_install_review_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE base_module_install_review ADD CONSTRAINT base_module_install_review_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_module_uninstall (id integer NOT NULL, module_id integer NOT NULL, create_uid integer, write_uid integer, show_all boolean, create_date timestamp, write_date timestamp);
ALTER TABLE base_module_uninstall ADD CONSTRAINT base_module_uninstall_pkey PRIMARY KEY (id);
ALTER TABLE base_module_uninstall ADD CONSTRAINT base_module_uninstall_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE base_module_uninstall ADD CONSTRAINT base_module_uninstall_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_module_uninstall ADD CONSTRAINT base_module_uninstall_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_module_update (id integer NOT NULL, updated integer, added integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE base_module_update ADD CONSTRAINT base_module_update_pkey PRIMARY KEY (id);
ALTER TABLE base_module_update ADD CONSTRAINT base_module_update_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_module_update ADD CONSTRAINT base_module_update_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_module_upgrade (id integer NOT NULL, create_uid integer, write_uid integer, module_info text, create_date timestamp, write_date timestamp);
ALTER TABLE base_module_upgrade ADD CONSTRAINT base_module_upgrade_pkey PRIMARY KEY (id);
ALTER TABLE base_module_upgrade ADD CONSTRAINT base_module_upgrade_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_module_upgrade ADD CONSTRAINT base_module_upgrade_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE base_partner_merge_automatic_wizard (id integer NOT NULL, number_group integer, current_line_id integer, dst_partner_id integer, maximum_group integer, create_uid integer, write_uid integer, group_by_email boolean, group_by_name boolean, group_by_is_company boolean, group_by_vat boolean, group_by_parent_id boolean, exclude_contact boolean, exclude_journal_item boolean, create_date timestamp, write_date timestamp);
ALTER TABLE base_partner_merge_automatic_wizard ADD CONSTRAINT base_partner_merge_automatic_wizard_pkey PRIMARY KEY (id);
ALTER TABLE base_partner_merge_automatic_wizard ADD CONSTRAINT base_partner_merge_automatic_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_partner_merge_automatic_wizard ADD CONSTRAINT base_partner_merge_automatic_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_partner_merge_automatic_wizard ADD CONSTRAINT base_partner_merge_automatic_wizard_dst_partner_id_fkey FOREIGN KEY (dst_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE base_partner_merge_automatic_wizard ADD CONSTRAINT base_partner_merge_automatic_wizard_current_line_id_fkey FOREIGN KEY (current_line_id) REFERENCES base_partner_merge_line (id) ON DELETE SET NULL;
CREATE TABLE base_partner_merge_automatic_wizard_res_partner_rel (base_partner_merge_automatic_wizard_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE base_partner_merge_automatic_wizard_res_partner_rel ADD CONSTRAINT base_partner_merge_automatic_wizard_res_partner_rel_pkey PRIMARY KEY (base_partner_merge_automatic_wizard_id, res_partner_id);
ALTER TABLE base_partner_merge_automatic_wizard_res_partner_rel ADD CONSTRAINT base_partner_merge_automatic__base_partner_merge_automatic_fkey FOREIGN KEY (base_partner_merge_automatic_wizard_id) REFERENCES base_partner_merge_automatic_wizard (id) ON DELETE CASCADE;
ALTER TABLE base_partner_merge_automatic_wizard_res_partner_rel ADD CONSTRAINT base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE base_partner_merge_line (id integer NOT NULL, wizard_id integer, min_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE base_partner_merge_line ADD CONSTRAINT base_partner_merge_line_pkey PRIMARY KEY (id);
ALTER TABLE base_partner_merge_line ADD CONSTRAINT base_partner_merge_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE base_partner_merge_line ADD CONSTRAINT base_partner_merge_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES base_partner_merge_automatic_wizard (id) ON DELETE SET NULL;
ALTER TABLE base_partner_merge_line ADD CONSTRAINT base_partner_merge_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE builder_builder (id integer NOT NULL, partner_id integer NOT NULL, company_id integer, organization_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_pkey PRIMARY KEY (id);
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES organization_organization (id) ON DELETE SET NULL;
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE builder_builder ADD CONSTRAINT builder_builder_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE bus_bus (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE bus_bus ADD CONSTRAINT bus_bus_pkey PRIMARY KEY (id);
ALTER TABLE bus_bus ADD CONSTRAINT bus_bus_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE bus_bus ADD CONSTRAINT bus_bus_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE bus_presence (id integer NOT NULL, user_id integer, last_poll timestamp, last_presence timestamp, guest_id integer);
ALTER TABLE bus_presence ADD CONSTRAINT bus_presence_pkey PRIMARY KEY (id);
ALTER TABLE bus_presence ADD CONSTRAINT bus_presence_guest_id_fkey FOREIGN KEY (guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE;
ALTER TABLE bus_presence ADD CONSTRAINT bus_presence_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE calendar_alarm (id integer NOT NULL, duration integer NOT NULL, duration_minutes integer, mail_template_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, body text, create_date timestamp, write_date timestamp, sms_template_id integer, sms_notify_responsible boolean);
ALTER TABLE calendar_alarm ADD CONSTRAINT calendar_alarm_pkey PRIMARY KEY (id);
ALTER TABLE calendar_alarm ADD CONSTRAINT calendar_alarm_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_alarm ADD CONSTRAINT calendar_alarm_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE calendar_alarm ADD CONSTRAINT calendar_alarm_sms_template_id_fkey FOREIGN KEY (sms_template_id) REFERENCES sms_template (id) ON DELETE SET NULL;
ALTER TABLE calendar_alarm ADD CONSTRAINT calendar_alarm_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_alarm_calendar_event_rel (calendar_event_id integer NOT NULL, calendar_alarm_id integer NOT NULL);
ALTER TABLE calendar_alarm_calendar_event_rel ADD CONSTRAINT calendar_alarm_calendar_event_rel_pkey PRIMARY KEY (calendar_event_id, calendar_alarm_id);
ALTER TABLE calendar_alarm_calendar_event_rel ADD CONSTRAINT calendar_alarm_calendar_event_rel_calendar_alarm_id_fkey FOREIGN KEY (calendar_alarm_id) REFERENCES calendar_alarm (id) ON DELETE RESTRICT;
ALTER TABLE calendar_alarm_calendar_event_rel ADD CONSTRAINT calendar_alarm_calendar_event_rel_calendar_event_id_fkey FOREIGN KEY (calendar_event_id) REFERENCES calendar_event (id) ON DELETE CASCADE;
CREATE TABLE calendar_attendee (id integer NOT NULL, event_id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_attendee ADD CONSTRAINT calendar_attendee_pkey PRIMARY KEY (id);
ALTER TABLE calendar_attendee ADD CONSTRAINT calendar_attendee_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_attendee ADD CONSTRAINT calendar_attendee_event_id_fkey FOREIGN KEY (event_id) REFERENCES calendar_event (id) ON DELETE CASCADE;
ALTER TABLE calendar_attendee ADD CONSTRAINT calendar_attendee_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE calendar_attendee ADD CONSTRAINT calendar_attendee_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_event (id integer NOT NULL, user_id integer, videocall_channel_id integer, res_id integer, res_model_id integer, recurrence_id integer, create_uid integer, write_uid integer, start_date date, stop_date date, description text, active boolean, allday boolean, recurrency boolean, follow_recurrence boolean, start timestamp NOT NULL, stop timestamp NOT NULL, create_date timestamp, write_date timestamp, duration double precision, opportunity_id integer, company_id integer);
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_pkey PRIMARY KEY (id);
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_recurrence_id_fkey FOREIGN KEY (recurrence_id) REFERENCES calendar_recurrence (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_videocall_channel_id_fkey FOREIGN KEY (videocall_channel_id) REFERENCES discuss_channel (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_event ADD CONSTRAINT calendar_event_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE calendar_event_res_partner_rel (res_partner_id integer NOT NULL, calendar_event_id integer NOT NULL);
ALTER TABLE calendar_event_res_partner_rel ADD CONSTRAINT calendar_event_res_partner_rel_pkey PRIMARY KEY (res_partner_id, calendar_event_id);
ALTER TABLE calendar_event_res_partner_rel ADD CONSTRAINT calendar_event_res_partner_rel_calendar_event_id_fkey FOREIGN KEY (calendar_event_id) REFERENCES calendar_event (id) ON DELETE CASCADE;
ALTER TABLE calendar_event_res_partner_rel ADD CONSTRAINT calendar_event_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE calendar_event_type (id integer NOT NULL, color integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_event_type ADD CONSTRAINT calendar_event_type_pkey PRIMARY KEY (id);
ALTER TABLE calendar_event_type ADD CONSTRAINT calendar_event_type_name_uniq UNIQUE (name);
ALTER TABLE calendar_event_type ADD CONSTRAINT calendar_event_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_event_type ADD CONSTRAINT calendar_event_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_filters (id integer NOT NULL, user_id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, active boolean, partner_checked boolean, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_pkey PRIMARY KEY (id);
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_user_id_partner_id_unique UNIQUE (user_id, partner_id);
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE calendar_filters ADD CONSTRAINT calendar_filters_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_popover_delete_wizard (id integer NOT NULL, record integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_popover_delete_wizard ADD CONSTRAINT calendar_popover_delete_wizard_pkey PRIMARY KEY (id);
ALTER TABLE calendar_popover_delete_wizard ADD CONSTRAINT calendar_popover_delete_wizard_record_fkey FOREIGN KEY (record) REFERENCES calendar_event (id) ON DELETE SET NULL;
ALTER TABLE calendar_popover_delete_wizard ADD CONSTRAINT calendar_popover_delete_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_popover_delete_wizard ADD CONSTRAINT calendar_popover_delete_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_provider_config (id integer NOT NULL, create_uid integer, write_uid integer, cal_sync_paused boolean, microsoft_outlook_sync_paused boolean, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_provider_config ADD CONSTRAINT calendar_provider_config_pkey PRIMARY KEY (id);
ALTER TABLE calendar_provider_config ADD CONSTRAINT calendar_provider_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_provider_config ADD CONSTRAINT calendar_provider_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE calendar_recurrence (id integer NOT NULL, base_event_id integer, interval integer, count integer, day integer, trigger_id integer, create_uid integer, write_uid integer, until date, mon boolean, tue boolean, wed boolean, thu boolean, fri boolean, sat boolean, sun boolean, create_date timestamp, write_date timestamp);
ALTER TABLE calendar_recurrence ADD CONSTRAINT calendar_recurrence_pkey PRIMARY KEY (id);
ALTER TABLE calendar_recurrence ADD CONSTRAINT calendar_recurrence_trigger_id_fkey FOREIGN KEY (trigger_id) REFERENCES ir_cron_trigger (id) ON DELETE SET NULL;
ALTER TABLE calendar_recurrence ADD CONSTRAINT calendar_recurrence_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_recurrence ADD CONSTRAINT calendar_recurrence_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE calendar_recurrence ADD CONSTRAINT calendar_recurrence_base_event_id_fkey FOREIGN KEY (base_event_id) REFERENCES calendar_event (id) ON DELETE SET NULL;
CREATE TABLE cancel_subscription (id integer NOT NULL, company_id integer NOT NULL, responsible integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE cancel_subscription ADD CONSTRAINT cancel_subscription_pkey PRIMARY KEY (id);
ALTER TABLE cancel_subscription ADD CONSTRAINT cancel_subscription_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE cancel_subscription ADD CONSTRAINT cancel_subscription_responsible_fkey FOREIGN KEY (responsible) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE cancel_subscription ADD CONSTRAINT cancel_subscription_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE cancel_subscription ADD CONSTRAINT cancel_subscription_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
CREATE TABLE change_password_own (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE change_password_own ADD CONSTRAINT change_password_own_pkey PRIMARY KEY (id);
ALTER TABLE change_password_own ADD CONSTRAINT change_password_own_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE change_password_own ADD CONSTRAINT change_password_own_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE change_password_user (id integer NOT NULL, wizard_id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE change_password_user ADD CONSTRAINT change_password_user_pkey PRIMARY KEY (id);
ALTER TABLE change_password_user ADD CONSTRAINT change_password_user_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE change_password_user ADD CONSTRAINT change_password_user_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE change_password_user ADD CONSTRAINT change_password_user_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE change_password_user ADD CONSTRAINT change_password_user_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES change_password_wizard (id) ON DELETE CASCADE;
CREATE TABLE change_password_wizard (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE change_password_wizard ADD CONSTRAINT change_password_wizard_pkey PRIMARY KEY (id);
ALTER TABLE change_password_wizard ADD CONSTRAINT change_password_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE change_password_wizard ADD CONSTRAINT change_password_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE company_city_serve (id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE company_city_serve ADD CONSTRAINT company_city_serve_pkey PRIMARY KEY (id);
ALTER TABLE company_city_serve ADD CONSTRAINT company_city_serve_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE company_city_serve ADD CONSTRAINT company_city_serve_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE company_city_serve ADD CONSTRAINT company_city_serve_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE company_image_line (id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE company_image_line ADD CONSTRAINT company_image_line_pkey PRIMARY KEY (id);
ALTER TABLE company_image_line ADD CONSTRAINT company_image_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE company_image_line ADD CONSTRAINT company_image_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE company_image_line ADD CONSTRAINT company_image_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_activity_report (id integer, lead_create_date timestamp, date_conversion timestamp, date_deadline date, date_closed timestamp, subtype_id integer, mail_activity_type_id integer, author_id integer, date timestamp, body text, lead_id integer, user_id integer, team_id integer, country_id integer, company_id integer, stage_id integer, partner_id integer, active boolean);
CREATE TABLE crm_convert_lead_mass_lead_rel (crm_lead2opportunity_partner_mass_id integer NOT NULL, crm_lead_id integer NOT NULL);
ALTER TABLE crm_convert_lead_mass_lead_rel ADD CONSTRAINT crm_convert_lead_mass_lead_rel_pkey PRIMARY KEY (crm_lead2opportunity_partner_mass_id, crm_lead_id);
ALTER TABLE crm_convert_lead_mass_lead_rel ADD CONSTRAINT crm_convert_lead_mass_lead_re_crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass (id) ON DELETE CASCADE;
ALTER TABLE crm_convert_lead_mass_lead_rel ADD CONSTRAINT crm_convert_lead_mass_lead_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_helpers (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_iap_lead_helpers ADD CONSTRAINT crm_iap_lead_helpers_pkey PRIMARY KEY (id);
ALTER TABLE crm_iap_lead_helpers ADD CONSTRAINT crm_iap_lead_helpers_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_helpers ADD CONSTRAINT crm_iap_lead_helpers_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_iap_lead_industry (id integer NOT NULL, color integer, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE crm_iap_lead_industry ADD CONSTRAINT crm_iap_lead_industry_pkey PRIMARY KEY (id);
ALTER TABLE crm_iap_lead_industry ADD CONSTRAINT crm_iap_lead_industry_name_uniq UNIQUE (name);
ALTER TABLE crm_iap_lead_industry ADD CONSTRAINT crm_iap_lead_industry_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_industry ADD CONSTRAINT crm_iap_lead_industry_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_iap_lead_industry_crm_iap_lead_mining_request_rel (crm_iap_lead_mining_request_id integer NOT NULL, crm_iap_lead_industry_id integer NOT NULL);
ALTER TABLE crm_iap_lead_industry_crm_iap_lead_mining_request_rel ADD CONSTRAINT crm_iap_lead_industry_crm_iap_lead_mining_request_rel_pkey PRIMARY KEY (crm_iap_lead_mining_request_id, crm_iap_lead_industry_id);
ALTER TABLE crm_iap_lead_industry_crm_iap_lead_mining_request_rel ADD CONSTRAINT crm_iap_lead_industry_crm_iap_crm_iap_lead_mining_request__fkey FOREIGN KEY (crm_iap_lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE CASCADE;
ALTER TABLE crm_iap_lead_industry_crm_iap_lead_mining_request_rel ADD CONSTRAINT crm_iap_lead_industry_crm_iap_lea_crm_iap_lead_industry_id_fkey FOREIGN KEY (crm_iap_lead_industry_id) REFERENCES crm_iap_lead_industry (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_mining_request (id integer NOT NULL, lead_number integer NOT NULL, team_id integer, user_id integer, company_size_min integer, company_size_max integer, contact_number integer, preferred_role_id integer, seniority_id integer, create_uid integer, write_uid integer, filter_on_size boolean, create_date timestamp, write_date timestamp);
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_pkey PRIMARY KEY (id);
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_seniority_id_fkey FOREIGN KEY (seniority_id) REFERENCES crm_iap_lead_seniority (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_mining_request ADD CONSTRAINT crm_iap_lead_mining_request_preferred_role_id_fkey FOREIGN KEY (preferred_role_id) REFERENCES crm_iap_lead_role (id) ON DELETE SET NULL;
CREATE TABLE crm_iap_lead_mining_request_crm_iap_lead_role_rel (crm_iap_lead_mining_request_id integer NOT NULL, crm_iap_lead_role_id integer NOT NULL);
ALTER TABLE crm_iap_lead_mining_request_crm_iap_lead_role_rel ADD CONSTRAINT crm_iap_lead_mining_request_crm_iap_lead_role_rel_pkey PRIMARY KEY (crm_iap_lead_mining_request_id, crm_iap_lead_role_id);
ALTER TABLE crm_iap_lead_mining_request_crm_iap_lead_role_rel ADD CONSTRAINT crm_iap_lead_mining_request__crm_iap_lead_mining_request__fkey2 FOREIGN KEY (crm_iap_lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE CASCADE;
ALTER TABLE crm_iap_lead_mining_request_crm_iap_lead_role_rel ADD CONSTRAINT crm_iap_lead_mining_request_crm_iap_l_crm_iap_lead_role_id_fkey FOREIGN KEY (crm_iap_lead_role_id) REFERENCES crm_iap_lead_role (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_mining_request_crm_tag_rel (crm_iap_lead_mining_request_id integer NOT NULL, crm_tag_id integer NOT NULL);
ALTER TABLE crm_iap_lead_mining_request_crm_tag_rel ADD CONSTRAINT crm_iap_lead_mining_request_crm_tag_rel_pkey PRIMARY KEY (crm_iap_lead_mining_request_id, crm_tag_id);
ALTER TABLE crm_iap_lead_mining_request_crm_tag_rel ADD CONSTRAINT crm_iap_lead_mining_request_c_crm_iap_lead_mining_request__fkey FOREIGN KEY (crm_iap_lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE CASCADE;
ALTER TABLE crm_iap_lead_mining_request_crm_tag_rel ADD CONSTRAINT crm_iap_lead_mining_request_crm_tag_rel_crm_tag_id_fkey FOREIGN KEY (crm_tag_id) REFERENCES crm_tag (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_mining_request_res_country_rel (crm_iap_lead_mining_request_id integer NOT NULL, res_country_id integer NOT NULL);
ALTER TABLE crm_iap_lead_mining_request_res_country_rel ADD CONSTRAINT crm_iap_lead_mining_request_res_country_rel_pkey PRIMARY KEY (crm_iap_lead_mining_request_id, res_country_id);
ALTER TABLE crm_iap_lead_mining_request_res_country_rel ADD CONSTRAINT crm_iap_lead_mining_request_r_crm_iap_lead_mining_request__fkey FOREIGN KEY (crm_iap_lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE CASCADE;
ALTER TABLE crm_iap_lead_mining_request_res_country_rel ADD CONSTRAINT crm_iap_lead_mining_request_res_country_rel_res_country_id_fkey FOREIGN KEY (res_country_id) REFERENCES res_country (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_mining_request_res_country_state_rel (crm_iap_lead_mining_request_id integer NOT NULL, res_country_state_id integer NOT NULL);
ALTER TABLE crm_iap_lead_mining_request_res_country_state_rel ADD CONSTRAINT crm_iap_lead_mining_request_res_country_state_rel_pkey PRIMARY KEY (crm_iap_lead_mining_request_id, res_country_state_id);
ALTER TABLE crm_iap_lead_mining_request_res_country_state_rel ADD CONSTRAINT crm_iap_lead_mining_request_res_count_res_country_state_id_fkey FOREIGN KEY (res_country_state_id) REFERENCES res_country_state (id) ON DELETE CASCADE;
ALTER TABLE crm_iap_lead_mining_request_res_country_state_rel ADD CONSTRAINT crm_iap_lead_mining_request__crm_iap_lead_mining_request__fkey1 FOREIGN KEY (crm_iap_lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE CASCADE;
CREATE TABLE crm_iap_lead_role (id integer NOT NULL, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE crm_iap_lead_role ADD CONSTRAINT crm_iap_lead_role_pkey PRIMARY KEY (id);
ALTER TABLE crm_iap_lead_role ADD CONSTRAINT crm_iap_lead_role_name_uniq UNIQUE (name);
ALTER TABLE crm_iap_lead_role ADD CONSTRAINT crm_iap_lead_role_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_role ADD CONSTRAINT crm_iap_lead_role_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_iap_lead_seniority (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE crm_iap_lead_seniority ADD CONSTRAINT crm_iap_lead_seniority_pkey PRIMARY KEY (id);
ALTER TABLE crm_iap_lead_seniority ADD CONSTRAINT crm_iap_lead_seniority_name_uniq UNIQUE (name);
ALTER TABLE crm_iap_lead_seniority ADD CONSTRAINT crm_iap_lead_seniority_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_iap_lead_seniority ADD CONSTRAINT crm_iap_lead_seniority_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead (id integer NOT NULL, campaign_id integer, source_id integer, medium_id integer, message_bounce integer, user_id integer, team_id integer, company_id integer, stage_id integer, color integer, recurring_plan integer, partner_id integer, title integer, lang_id integer, state_id integer, country_id integer, lost_reason_id integer, create_uid integer, write_uid integer, date_deadline date, lead_properties jsonb, description text, active boolean, date_closed timestamp, date_automation_last timestamp, date_open timestamp, date_last_stage_update timestamp, date_conversion timestamp, create_date timestamp, write_date timestamp, day_open double precision, day_close double precision, probability double precision, automated_probability double precision, days_to_convert double precision, days_exceeding_closing double precision, lead_id integer, province_id integer, lead_project_id integer, project_class_id integer, project_status_id integer, builder_id integer, project_type_id integer, region_id integer, county_id integer, city_id integer, applicant_id integer, owner_id integer, builder_partner_id integer, permit_issue_date date, flagged jsonb, starred jsonb, not_interested jsonb, project_description text, additional_info text, iap_enrich_done boolean, lead_mining_request_id integer, project_year integer, is_featured boolean, dont_show_in_profile boolean, is_lead_lost boolean, lost_feedback text);
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_lead_mining_request_id_fkey FOREIGN KEY (lead_mining_request_id) REFERENCES crm_iap_lead_mining_request (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_lead_project_id_fkey FOREIGN KEY (lead_project_id) REFERENCES lead_project (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_lost_reason_id_fkey FOREIGN KEY (lost_reason_id) REFERENCES crm_lost_reason (id) ON DELETE RESTRICT;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES utm_medium (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_project_class_id_fkey FOREIGN KEY (project_class_id) REFERENCES lead_project_class (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_project_status_id_fkey FOREIGN KEY (project_status_id) REFERENCES lead_project_status (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_project_type_id_fkey FOREIGN KEY (project_type_id) REFERENCES lead_project_type (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_province_id_fkey FOREIGN KEY (province_id) REFERENCES res_country_state (id) ON DELETE RESTRICT;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_recurring_plan_fkey FOREIGN KEY (recurring_plan) REFERENCES crm_recurring_plan (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_region_id_fkey FOREIGN KEY (region_id) REFERENCES res_region (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_source_id_fkey FOREIGN KEY (source_id) REFERENCES utm_source (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES crm_stage (id) ON DELETE RESTRICT;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_builder_id_fkey FOREIGN KEY (builder_id) REFERENCES builder_builder (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_builder_partner_id_fkey FOREIGN KEY (builder_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_city_id_fkey FOREIGN KEY (city_id) REFERENCES res_city (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_county_id_fkey FOREIGN KEY (county_id) REFERENCES res_county (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_lang_id_fkey FOREIGN KEY (lang_id) REFERENCES res_lang (id) ON DELETE SET NULL;
ALTER TABLE crm_lead ADD CONSTRAINT crm_lead_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES lead_publish (id) ON DELETE SET NULL;
CREATE TABLE crm_lead2opportunity_partner (id integer NOT NULL, lead_id integer NOT NULL, partner_id integer, user_id integer, team_id integer, create_uid integer, write_uid integer, force_assignment boolean, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner ADD CONSTRAINT crm_lead2opportunity_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead2opportunity_partner_mass (id integer NOT NULL, lead_id integer, partner_id integer, user_id integer, team_id integer, create_uid integer, write_uid integer, force_assignment boolean, deduplicate boolean, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead2opportunity_partner_mass ADD CONSTRAINT crm_lead2opportunity_partner_mass_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead2opportunity_partner_mass_res_users_rel (crm_lead2opportunity_partner_mass_id integer NOT NULL, res_users_id integer NOT NULL);
ALTER TABLE crm_lead2opportunity_partner_mass_res_users_rel ADD CONSTRAINT crm_lead2opportunity_partner_mass_res_users_rel_pkey PRIMARY KEY (crm_lead2opportunity_partner_mass_id, res_users_id);
ALTER TABLE crm_lead2opportunity_partner_mass_res_users_rel ADD CONSTRAINT crm_lead2opportunity_partner__crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass (id) ON DELETE CASCADE;
ALTER TABLE crm_lead2opportunity_partner_mass_res_users_rel ADD CONSTRAINT crm_lead2opportunity_partner_mass_res_users_r_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_crm_lead2opportunity_partner_mass_rel (crm_lead2opportunity_partner_mass_id integer NOT NULL, crm_lead_id integer NOT NULL);
ALTER TABLE crm_lead_crm_lead2opportunity_partner_mass_rel ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_mass_rel_pkey PRIMARY KEY (crm_lead2opportunity_partner_mass_id, crm_lead_id);
ALTER TABLE crm_lead_crm_lead2opportunity_partner_mass_rel ADD CONSTRAINT crm_lead_crm_lead2opportunit_crm_lead2opportunity_partner_fkey1 FOREIGN KEY (crm_lead2opportunity_partner_mass_id) REFERENCES crm_lead2opportunity_partner_mass (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_crm_lead2opportunity_partner_mass_rel ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_mass_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_crm_lead2opportunity_partner_rel (crm_lead2opportunity_partner_id integer NOT NULL, crm_lead_id integer NOT NULL);
ALTER TABLE crm_lead_crm_lead2opportunity_partner_rel ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_rel_pkey PRIMARY KEY (crm_lead2opportunity_partner_id, crm_lead_id);
ALTER TABLE crm_lead_crm_lead2opportunity_partner_rel ADD CONSTRAINT crm_lead_crm_lead2opportunity_crm_lead2opportunity_partner_fkey FOREIGN KEY (crm_lead2opportunity_partner_id) REFERENCES crm_lead2opportunity_partner (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_crm_lead2opportunity_partner_rel ADD CONSTRAINT crm_lead_crm_lead2opportunity_partner_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_crm_lead_lost_rel (crm_lead_lost_id integer NOT NULL, crm_lead_id integer NOT NULL);
ALTER TABLE crm_lead_crm_lead_lost_rel ADD CONSTRAINT crm_lead_crm_lead_lost_rel_pkey PRIMARY KEY (crm_lead_lost_id, crm_lead_id);
ALTER TABLE crm_lead_crm_lead_lost_rel ADD CONSTRAINT crm_lead_crm_lead_lost_rel_crm_lead_id_fkey FOREIGN KEY (crm_lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_crm_lead_lost_rel ADD CONSTRAINT crm_lead_crm_lead_lost_rel_crm_lead_lost_id_fkey FOREIGN KEY (crm_lead_lost_id) REFERENCES crm_lead_lost (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_lost (id integer NOT NULL, lost_reason_id integer, create_uid integer, write_uid integer, lost_feedback text, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead_lost ADD CONSTRAINT crm_lead_lost_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead_lost ADD CONSTRAINT crm_lead_lost_lost_reason_id_fkey FOREIGN KEY (lost_reason_id) REFERENCES crm_lost_reason (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_lost ADD CONSTRAINT crm_lead_lost_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_lost ADD CONSTRAINT crm_lead_lost_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead_manager_user_ref (lead_id integer NOT NULL, user_id integer NOT NULL);
ALTER TABLE crm_lead_manager_user_ref ADD CONSTRAINT crm_lead_manager_user_ref_pkey PRIMARY KEY (lead_id, user_id);
ALTER TABLE crm_lead_manager_user_ref ADD CONSTRAINT crm_lead_manager_user_ref_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_manager_user_ref ADD CONSTRAINT crm_lead_manager_user_ref_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_pls_update (id integer NOT NULL, create_uid integer, write_uid integer, pls_start_date date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead_pls_update ADD CONSTRAINT crm_lead_pls_update_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead_pls_update ADD CONSTRAINT crm_lead_pls_update_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_pls_update ADD CONSTRAINT crm_lead_pls_update_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead_pls_update_crm_lead_scoring_frequency_field_rel (crm_lead_pls_update_id integer NOT NULL, crm_lead_scoring_frequency_field_id integer NOT NULL);
ALTER TABLE crm_lead_pls_update_crm_lead_scoring_frequency_field_rel ADD CONSTRAINT crm_lead_pls_update_crm_lead_scoring_frequency_field_rel_pkey PRIMARY KEY (crm_lead_pls_update_id, crm_lead_scoring_frequency_field_id);
ALTER TABLE crm_lead_pls_update_crm_lead_scoring_frequency_field_rel ADD CONSTRAINT crm_lead_pls_update_crm_lead_scorin_crm_lead_pls_update_id_fkey FOREIGN KEY (crm_lead_pls_update_id) REFERENCES crm_lead_pls_update (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_pls_update_crm_lead_scoring_frequency_field_rel ADD CONSTRAINT crm_lead_pls_update_crm_lead__crm_lead_scoring_frequency_f_fkey FOREIGN KEY (crm_lead_scoring_frequency_field_id) REFERENCES crm_lead_scoring_frequency_field (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_project_image_line (id integer NOT NULL, lead_project_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead_project_image_line ADD CONSTRAINT crm_lead_project_image_line_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead_project_image_line ADD CONSTRAINT crm_lead_project_image_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_project_image_line ADD CONSTRAINT crm_lead_project_image_line_lead_project_id_fkey FOREIGN KEY (lead_project_id) REFERENCES crm_lead (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_project_image_line ADD CONSTRAINT crm_lead_project_image_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead_scoring_frequency (id integer NOT NULL, team_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead_scoring_frequency ADD CONSTRAINT crm_lead_scoring_frequency_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead_scoring_frequency ADD CONSTRAINT crm_lead_scoring_frequency_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_scoring_frequency ADD CONSTRAINT crm_lead_scoring_frequency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_scoring_frequency ADD CONSTRAINT crm_lead_scoring_frequency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead_scoring_frequency_field (id integer NOT NULL, field_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lead_scoring_frequency_field ADD CONSTRAINT crm_lead_scoring_frequency_field_pkey PRIMARY KEY (id);
ALTER TABLE crm_lead_scoring_frequency_field ADD CONSTRAINT crm_lead_scoring_frequency_field_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lead_scoring_frequency_field ADD CONSTRAINT crm_lead_scoring_frequency_field_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_scoring_frequency_field ADD CONSTRAINT crm_lead_scoring_frequency_field_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_lead_service_type_ref (lead_id integer NOT NULL, service_type_id integer NOT NULL);
ALTER TABLE crm_lead_service_type_ref ADD CONSTRAINT crm_lead_service_type_ref_pkey PRIMARY KEY (lead_id, service_type_id);
ALTER TABLE crm_lead_service_type_ref ADD CONSTRAINT crm_lead_service_type_ref_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_service_type_ref ADD CONSTRAINT crm_lead_service_type_ref_service_type_id_fkey FOREIGN KEY (service_type_id) REFERENCES service_type (id) ON DELETE CASCADE;
CREATE TABLE crm_lead_share_user_ref (lead_id integer NOT NULL, user_id integer NOT NULL);
ALTER TABLE crm_lead_share_user_ref ADD CONSTRAINT crm_lead_share_user_ref_pkey PRIMARY KEY (lead_id, user_id);
ALTER TABLE crm_lead_share_user_ref ADD CONSTRAINT crm_lead_share_user_ref_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_lead_share_user_ref ADD CONSTRAINT crm_lead_share_user_ref_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE crm_lost_reason (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE crm_lost_reason ADD CONSTRAINT crm_lost_reason_pkey PRIMARY KEY (id);
ALTER TABLE crm_lost_reason ADD CONSTRAINT crm_lost_reason_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_lost_reason ADD CONSTRAINT crm_lost_reason_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_merge_opportunity (id integer NOT NULL, user_id integer, team_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_merge_opportunity ADD CONSTRAINT crm_merge_opportunity_pkey PRIMARY KEY (id);
ALTER TABLE crm_merge_opportunity ADD CONSTRAINT crm_merge_opportunity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_merge_opportunity ADD CONSTRAINT crm_merge_opportunity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_merge_opportunity ADD CONSTRAINT crm_merge_opportunity_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_merge_opportunity ADD CONSTRAINT crm_merge_opportunity_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_quotation_partner (id integer NOT NULL, lead_id integer NOT NULL, partner_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE crm_quotation_partner ADD CONSTRAINT crm_quotation_partner_pkey PRIMARY KEY (id);
ALTER TABLE crm_quotation_partner ADD CONSTRAINT crm_quotation_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_quotation_partner ADD CONSTRAINT crm_quotation_partner_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE crm_quotation_partner ADD CONSTRAINT crm_quotation_partner_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE crm_quotation_partner ADD CONSTRAINT crm_quotation_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_recurring_plan (id integer NOT NULL, number_of_months integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE crm_recurring_plan ADD CONSTRAINT crm_recurring_plan_pkey PRIMARY KEY (id);
ALTER TABLE crm_recurring_plan ADD CONSTRAINT crm_recurring_plan_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_recurring_plan ADD CONSTRAINT crm_recurring_plan_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_stage (id integer NOT NULL, sequence integer, team_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, requirements text, is_won boolean, fold boolean, create_date timestamp, write_date timestamp, company_id integer, is_stage_lock boolean, is_lost boolean, user_id integer, active boolean, is_archive_lead boolean, has_leads boolean);
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_pkey PRIMARY KEY (id);
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_stage ADD CONSTRAINT crm_stage_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE crm_tag (id integer NOT NULL, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE crm_tag ADD CONSTRAINT crm_tag_pkey PRIMARY KEY (id);
ALTER TABLE crm_tag ADD CONSTRAINT crm_tag_name_uniq UNIQUE (name);
ALTER TABLE crm_tag ADD CONSTRAINT crm_tag_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_tag ADD CONSTRAINT crm_tag_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_tag_rel (lead_id integer NOT NULL, tag_id integer NOT NULL);
ALTER TABLE crm_tag_rel ADD CONSTRAINT crm_tag_rel_pkey PRIMARY KEY (lead_id, tag_id);
ALTER TABLE crm_tag_rel ADD CONSTRAINT crm_tag_rel_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES crm_tag (id) ON DELETE CASCADE;
ALTER TABLE crm_tag_rel ADD CONSTRAINT crm_tag_rel_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
CREATE TABLE crm_team (id integer NOT NULL, sequence integer, company_id integer, user_id integer, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp, alias_id integer NOT NULL, lead_properties_definition jsonb, use_leads boolean, use_opportunities boolean, assignment_optout boolean, invoiced_target double precision);
ALTER TABLE crm_team ADD CONSTRAINT crm_team_pkey PRIMARY KEY (id);
ALTER TABLE crm_team ADD CONSTRAINT crm_team_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_team ADD CONSTRAINT crm_team_alias_id_fkey FOREIGN KEY (alias_id) REFERENCES mail_alias (id) ON DELETE RESTRICT;
ALTER TABLE crm_team ADD CONSTRAINT crm_team_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_team ADD CONSTRAINT crm_team_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_team ADD CONSTRAINT crm_team_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE crm_team_member (id integer NOT NULL, crm_team_id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp, assignment_max integer, assignment_optout boolean);
ALTER TABLE crm_team_member ADD CONSTRAINT crm_team_member_pkey PRIMARY KEY (id);
ALTER TABLE crm_team_member ADD CONSTRAINT crm_team_member_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE crm_team_member ADD CONSTRAINT crm_team_member_crm_team_id_fkey FOREIGN KEY (crm_team_id) REFERENCES crm_team (id) ON DELETE CASCADE;
ALTER TABLE crm_team_member ADD CONSTRAINT crm_team_member_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE crm_team_member ADD CONSTRAINT crm_team_member_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE crm_team_res_company_rel (crm_team_id integer NOT NULL, res_company_id integer NOT NULL);
ALTER TABLE crm_team_res_company_rel ADD CONSTRAINT crm_team_res_company_rel_pkey PRIMARY KEY (crm_team_id, res_company_id);
ALTER TABLE crm_team_res_company_rel ADD CONSTRAINT crm_team_res_company_rel_res_company_id_fkey FOREIGN KEY (res_company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE crm_team_res_company_rel ADD CONSTRAINT crm_team_res_company_rel_crm_team_id_fkey FOREIGN KEY (crm_team_id) REFERENCES crm_team (id) ON DELETE CASCADE;
CREATE TABLE data_import (id integer NOT NULL, user_id integer, last_processed_row integer, total_rows integer, success_count integer, error_count integer, batch_size integer, company_id integer, create_uid integer, write_uid integer, result_message text, error_details text, start_time timestamp, end_time timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE data_import ADD CONSTRAINT data_import_pkey PRIMARY KEY (id);
ALTER TABLE data_import ADD CONSTRAINT data_import_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE data_import ADD CONSTRAINT data_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE data_import ADD CONSTRAINT data_import_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE data_import ADD CONSTRAINT data_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE decimal_precision (id integer NOT NULL, digits integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE decimal_precision ADD CONSTRAINT decimal_precision_pkey PRIMARY KEY (id);
ALTER TABLE decimal_precision ADD CONSTRAINT decimal_precision_name_uniq UNIQUE (name);
ALTER TABLE decimal_precision ADD CONSTRAINT decimal_precision_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE decimal_precision ADD CONSTRAINT decimal_precision_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE default_stage_create_wizard (id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE default_stage_create_wizard ADD CONSTRAINT default_stage_create_wizard_pkey PRIMARY KEY (id);
ALTER TABLE default_stage_create_wizard ADD CONSTRAINT default_stage_create_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE default_stage_create_wizard ADD CONSTRAINT default_stage_create_wizard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE default_stage_create_wizard ADD CONSTRAINT default_stage_create_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE digest_digest (id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, next_run_date date, name jsonb NOT NULL, kpi_res_users_connected boolean, kpi_mail_message_total boolean, create_date timestamp, write_date timestamp, kpi_crm_lead_created boolean, kpi_crm_opportunities_won boolean, kpi_account_total_revenue boolean, kpi_account_bank_cash boolean, kpi_all_sale_total boolean);
ALTER TABLE digest_digest ADD CONSTRAINT digest_digest_pkey PRIMARY KEY (id);
ALTER TABLE digest_digest ADD CONSTRAINT digest_digest_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE digest_digest ADD CONSTRAINT digest_digest_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE digest_digest ADD CONSTRAINT digest_digest_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE digest_digest_res_users_rel (digest_digest_id integer NOT NULL, res_users_id integer NOT NULL);
ALTER TABLE digest_digest_res_users_rel ADD CONSTRAINT digest_digest_res_users_rel_pkey PRIMARY KEY (digest_digest_id, res_users_id);
ALTER TABLE digest_digest_res_users_rel ADD CONSTRAINT digest_digest_res_users_rel_digest_digest_id_fkey FOREIGN KEY (digest_digest_id) REFERENCES digest_digest (id) ON DELETE CASCADE;
ALTER TABLE digest_digest_res_users_rel ADD CONSTRAINT digest_digest_res_users_rel_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE digest_tip (id integer NOT NULL, sequence integer, group_id integer, create_uid integer, write_uid integer, name jsonb, tip_description jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE digest_tip ADD CONSTRAINT digest_tip_pkey PRIMARY KEY (id);
ALTER TABLE digest_tip ADD CONSTRAINT digest_tip_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE SET NULL;
ALTER TABLE digest_tip ADD CONSTRAINT digest_tip_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE digest_tip ADD CONSTRAINT digest_tip_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE digest_tip_res_users_rel (digest_tip_id integer NOT NULL, res_users_id integer NOT NULL);
ALTER TABLE digest_tip_res_users_rel ADD CONSTRAINT digest_tip_res_users_rel_pkey PRIMARY KEY (digest_tip_id, res_users_id);
ALTER TABLE digest_tip_res_users_rel ADD CONSTRAINT digest_tip_res_users_rel_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE digest_tip_res_users_rel ADD CONSTRAINT digest_tip_res_users_rel_digest_tip_id_fkey FOREIGN KEY (digest_tip_id) REFERENCES digest_tip (id) ON DELETE CASCADE;
CREATE TABLE discuss_channel (id integer NOT NULL, parent_channel_id integer, from_message_id integer, group_public_id integer, create_uid integer, write_uid integer, uuid varchar(50), description text, active boolean, allow_public_upload boolean, last_interest_dt timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_pkey PRIMARY KEY (id);
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_from_message_id_unique UNIQUE (from_message_id);
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_uuid_unique UNIQUE (uuid);
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_from_message_id_fkey FOREIGN KEY (from_message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_group_public_id_fkey FOREIGN KEY (group_public_id) REFERENCES res_groups (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel ADD CONSTRAINT discuss_channel_parent_channel_id_fkey FOREIGN KEY (parent_channel_id) REFERENCES discuss_channel (id) ON DELETE CASCADE;
CREATE TABLE discuss_channel_member (id integer NOT NULL, partner_id integer, guest_id integer, channel_id integer NOT NULL, fetched_message_id integer, seen_message_id integer, new_message_separator integer NOT NULL, rtc_inviting_session_id integer, create_uid integer, write_uid integer, mute_until_dt timestamp, unpin_dt timestamp, last_interest_dt timestamp, last_seen_dt timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_pkey PRIMARY KEY (id);
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES discuss_channel (id) ON DELETE CASCADE;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_fetched_message_id_fkey FOREIGN KEY (fetched_message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_guest_id_fkey FOREIGN KEY (guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_rtc_inviting_session_id_fkey FOREIGN KEY (rtc_inviting_session_id) REFERENCES discuss_channel_rtc_session (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_seen_message_id_fkey FOREIGN KEY (seen_message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_member ADD CONSTRAINT discuss_channel_member_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE discuss_channel_res_groups_rel (discuss_channel_id integer NOT NULL, res_groups_id integer NOT NULL);
ALTER TABLE discuss_channel_res_groups_rel ADD CONSTRAINT discuss_channel_res_groups_rel_pkey PRIMARY KEY (discuss_channel_id, res_groups_id);
ALTER TABLE discuss_channel_res_groups_rel ADD CONSTRAINT discuss_channel_res_groups_rel_discuss_channel_id_fkey FOREIGN KEY (discuss_channel_id) REFERENCES discuss_channel (id) ON DELETE CASCADE;
ALTER TABLE discuss_channel_res_groups_rel ADD CONSTRAINT discuss_channel_res_groups_rel_res_groups_id_fkey FOREIGN KEY (res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE discuss_channel_rtc_session (id integer NOT NULL, channel_member_id integer NOT NULL, channel_id integer, create_uid integer, write_uid integer, is_screen_sharing_on boolean, is_camera_on boolean, is_muted boolean, is_deaf boolean, write_date timestamp, create_date timestamp);
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_pkey PRIMARY KEY (id);
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_channel_member_unique UNIQUE (channel_member_id);
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_channel_member_id_fkey FOREIGN KEY (channel_member_id) REFERENCES discuss_channel_member (id) ON DELETE CASCADE;
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES discuss_channel (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_channel_rtc_session ADD CONSTRAINT discuss_channel_rtc_session_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE discuss_gif_favorite (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE discuss_gif_favorite ADD CONSTRAINT discuss_gif_favorite_pkey PRIMARY KEY (id);
ALTER TABLE discuss_gif_favorite ADD CONSTRAINT discuss_gif_favorite_user_gif_favorite UNIQUE (create_uid, tenor_gif_id);
ALTER TABLE discuss_gif_favorite ADD CONSTRAINT discuss_gif_favorite_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_gif_favorite ADD CONSTRAINT discuss_gif_favorite_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE discuss_voice_metadata (id integer NOT NULL, attachment_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE discuss_voice_metadata ADD CONSTRAINT discuss_voice_metadata_pkey PRIMARY KEY (id);
ALTER TABLE discuss_voice_metadata ADD CONSTRAINT discuss_voice_metadata_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE discuss_voice_metadata ADD CONSTRAINT discuss_voice_metadata_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE discuss_voice_metadata ADD CONSTRAINT discuss_voice_metadata_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE email_template_attachment_rel (email_template_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE email_template_attachment_rel ADD CONSTRAINT email_template_attachment_rel_pkey PRIMARY KEY (email_template_id, attachment_id);
ALTER TABLE email_template_attachment_rel ADD CONSTRAINT email_template_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE email_template_attachment_rel ADD CONSTRAINT email_template_attachment_rel_email_template_id_fkey FOREIGN KEY (email_template_id) REFERENCES mail_template (id) ON DELETE CASCADE;
CREATE TABLE exclude_model (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, model_id integer NOT NULL);
ALTER TABLE exclude_model ADD CONSTRAINT exclude_model_pkey PRIMARY KEY (id);
ALTER TABLE exclude_model ADD CONSTRAINT exclude_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE exclude_model ADD CONSTRAINT exclude_model_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE exclude_model ADD CONSTRAINT exclude_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE fetchmail_server (id integer NOT NULL, port integer, object_id integer, priority integer, create_uid integer, write_uid integer, configuration text, active boolean, is_ssl boolean, attach boolean, original boolean, date timestamp, create_date timestamp, write_date timestamp, google_gmail_access_token_expiration integer);
ALTER TABLE fetchmail_server ADD CONSTRAINT fetchmail_server_pkey PRIMARY KEY (id);
ALTER TABLE fetchmail_server ADD CONSTRAINT fetchmail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE fetchmail_server ADD CONSTRAINT fetchmail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE fetchmail_server ADD CONSTRAINT fetchmail_server_object_id_fkey FOREIGN KEY (object_id) REFERENCES ir_model (id) ON DELETE SET NULL;
CREATE TABLE header_footer_quotation_template_rel (quotation_document_id integer NOT NULL, sale_order_template_id integer NOT NULL);
ALTER TABLE header_footer_quotation_template_rel ADD CONSTRAINT header_footer_quotation_template_rel_pkey PRIMARY KEY (quotation_document_id, sale_order_template_id);
ALTER TABLE header_footer_quotation_template_rel ADD CONSTRAINT header_footer_quotation_template_re_sale_order_template_id_fkey FOREIGN KEY (sale_order_template_id) REFERENCES sale_order_template (id) ON DELETE CASCADE;
ALTER TABLE header_footer_quotation_template_rel ADD CONSTRAINT header_footer_quotation_template_rel_quotation_document_id_fkey FOREIGN KEY (quotation_document_id) REFERENCES quotation_document (id) ON DELETE CASCADE;
CREATE TABLE iap_account (id integer NOT NULL, service_id integer NOT NULL, create_uid integer, write_uid integer, account_token varchar(43), service_locked boolean, create_date timestamp, write_date timestamp, warning_threshold double precision);
ALTER TABLE iap_account ADD CONSTRAINT iap_account_pkey PRIMARY KEY (id);
ALTER TABLE iap_account ADD CONSTRAINT iap_account_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE iap_account ADD CONSTRAINT iap_account_service_id_fkey FOREIGN KEY (service_id) REFERENCES iap_service (id) ON DELETE RESTRICT;
ALTER TABLE iap_account ADD CONSTRAINT iap_account_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE iap_account_res_company_rel (iap_account_id integer NOT NULL, res_company_id integer NOT NULL);
ALTER TABLE iap_account_res_company_rel ADD CONSTRAINT iap_account_res_company_rel_pkey PRIMARY KEY (iap_account_id, res_company_id);
ALTER TABLE iap_account_res_company_rel ADD CONSTRAINT iap_account_res_company_rel_iap_account_id_fkey FOREIGN KEY (iap_account_id) REFERENCES iap_account (id) ON DELETE CASCADE;
ALTER TABLE iap_account_res_company_rel ADD CONSTRAINT iap_account_res_company_rel_res_company_id_fkey FOREIGN KEY (res_company_id) REFERENCES res_company (id) ON DELETE CASCADE;
CREATE TABLE iap_account_res_users_rel (iap_account_id integer NOT NULL, res_users_id integer NOT NULL);
ALTER TABLE iap_account_res_users_rel ADD CONSTRAINT iap_account_res_users_rel_pkey PRIMARY KEY (iap_account_id, res_users_id);
ALTER TABLE iap_account_res_users_rel ADD CONSTRAINT iap_account_res_users_rel_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE iap_account_res_users_rel ADD CONSTRAINT iap_account_res_users_rel_iap_account_id_fkey FOREIGN KEY (iap_account_id) REFERENCES iap_account (id) ON DELETE CASCADE;
CREATE TABLE iap_service (id integer NOT NULL, create_uid integer, write_uid integer, description jsonb NOT NULL, unit_name jsonb NOT NULL, integer_balance boolean NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE iap_service ADD CONSTRAINT iap_service_pkey PRIMARY KEY (id);
ALTER TABLE iap_service ADD CONSTRAINT iap_service_unique_technical_name UNIQUE (technical_name);
ALTER TABLE iap_service ADD CONSTRAINT iap_service_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE iap_service ADD CONSTRAINT iap_service_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE import_leads_wizard (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, country_id integer);
ALTER TABLE import_leads_wizard ADD CONSTRAINT import_leads_wizard_pkey PRIMARY KEY (id);
ALTER TABLE import_leads_wizard ADD CONSTRAINT import_leads_wizard_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE import_leads_wizard ADD CONSTRAINT import_leads_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE import_leads_wizard ADD CONSTRAINT import_leads_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE industry_config (id integer NOT NULL, parent_id integer, color integer, create_uid integer, write_uid integer, description text, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE industry_config ADD CONSTRAINT industry_config_pkey PRIMARY KEY (id);
ALTER TABLE industry_config ADD CONSTRAINT industry_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE industry_config ADD CONSTRAINT industry_config_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES industry_config (id) ON DELETE SET NULL;
ALTER TABLE industry_config ADD CONSTRAINT industry_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_client (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp, params_store bytea);
ALTER TABLE ir_act_client ADD CONSTRAINT ir_act_client_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_client ADD CONSTRAINT ir_act_client_path_unique UNIQUE (path);
ALTER TABLE ir_act_client ADD CONSTRAINT ir_act_client_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_client ADD CONSTRAINT ir_act_client_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_client ADD CONSTRAINT ir_act_client_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_report_xml (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp, paperformat_id integer, print_report_name jsonb, multi boolean, attachment_use boolean, is_invoice_report boolean);
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_path_unique UNIQUE (path);
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_paperformat_id_fkey FOREIGN KEY (paperformat_id) REFERENCES report_paperformat (id) ON DELETE SET NULL;
ALTER TABLE ir_act_report_xml ADD CONSTRAINT ir_act_report_xml_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_server (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp, sequence integer, model_id integer NOT NULL, crud_model_id integer, link_field_id integer, update_field_id integer, update_related_model_id integer, selection_value integer, code text, value text, template_id integer, activity_type_id integer, activity_date_deadline_range integer, activity_user_id integer, activity_note text, mail_post_autofollow boolean, sms_template_id integer);
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_path_unique UNIQUE (path);
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_activity_type_id_fkey FOREIGN KEY (activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_activity_user_id_fkey FOREIGN KEY (activity_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_crud_model_id_fkey FOREIGN KEY (crud_model_id) REFERENCES ir_model (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_link_field_id_fkey FOREIGN KEY (link_field_id) REFERENCES ir_model_fields (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_selection_value_fkey FOREIGN KEY (selection_value) REFERENCES ir_model_fields_selection (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_sms_template_id_fkey FOREIGN KEY (sms_template_id) REFERENCES sms_template (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_template_id_fkey FOREIGN KEY (template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_update_field_id_fkey FOREIGN KEY (update_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_update_related_model_id_fkey FOREIGN KEY (update_related_model_id) REFERENCES ir_model (id) ON DELETE SET NULL;
ALTER TABLE ir_act_server ADD CONSTRAINT ir_act_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_server_group_rel (act_id integer NOT NULL, gid integer NOT NULL);
ALTER TABLE ir_act_server_group_rel ADD CONSTRAINT ir_act_server_group_rel_pkey PRIMARY KEY (act_id, gid);
ALTER TABLE ir_act_server_group_rel ADD CONSTRAINT ir_act_server_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server_group_rel ADD CONSTRAINT ir_act_server_group_rel_act_id_fkey FOREIGN KEY (act_id) REFERENCES ir_act_server (id) ON DELETE CASCADE;
CREATE TABLE ir_act_server_res_partner_rel (ir_act_server_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE ir_act_server_res_partner_rel ADD CONSTRAINT ir_act_server_res_partner_rel_pkey PRIMARY KEY (ir_act_server_id, res_partner_id);
ALTER TABLE ir_act_server_res_partner_rel ADD CONSTRAINT ir_act_server_res_partner_rel_ir_act_server_id_fkey FOREIGN KEY (ir_act_server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server_res_partner_rel ADD CONSTRAINT ir_act_server_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE ir_act_server_webhook_field_rel (server_id integer NOT NULL, field_id integer NOT NULL);
ALTER TABLE ir_act_server_webhook_field_rel ADD CONSTRAINT ir_act_server_webhook_field_rel_pkey PRIMARY KEY (server_id, field_id);
ALTER TABLE ir_act_server_webhook_field_rel ADD CONSTRAINT ir_act_server_webhook_field_rel_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE;
ALTER TABLE ir_act_server_webhook_field_rel ADD CONSTRAINT ir_act_server_webhook_field_rel_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
CREATE TABLE ir_act_url (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp, url text NOT NULL);
ALTER TABLE ir_act_url ADD CONSTRAINT ir_act_url_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_url ADD CONSTRAINT ir_act_url_path_unique UNIQUE (path);
ALTER TABLE ir_act_url ADD CONSTRAINT ir_act_url_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_url ADD CONSTRAINT ir_act_url_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_url ADD CONSTRAINT ir_act_url_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_window (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp, view_id integer, res_id integer, limit integer, search_view_id integer, filter boolean);
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_path_unique UNIQUE (path);
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_search_view_id_fkey FOREIGN KEY (search_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window ADD CONSTRAINT ir_act_window_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_act_window_group_rel (act_id integer NOT NULL, gid integer NOT NULL);
ALTER TABLE ir_act_window_group_rel ADD CONSTRAINT ir_act_window_group_rel_pkey PRIMARY KEY (act_id, gid);
ALTER TABLE ir_act_window_group_rel ADD CONSTRAINT ir_act_window_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE ir_act_window_group_rel ADD CONSTRAINT ir_act_window_group_rel_act_id_fkey FOREIGN KEY (act_id) REFERENCES ir_act_window (id) ON DELETE CASCADE;
CREATE TABLE ir_act_window_view (id integer NOT NULL, sequence integer, view_id integer, act_window_id integer, create_uid integer, write_uid integer, multi boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_act_window_view ADD CONSTRAINT ir_act_window_view_pkey PRIMARY KEY (id);
ALTER TABLE ir_act_window_view ADD CONSTRAINT ir_act_window_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window_view ADD CONSTRAINT ir_act_window_view_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window_view ADD CONSTRAINT ir_act_window_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_act_window_view ADD CONSTRAINT ir_act_window_view_act_window_id_fkey FOREIGN KEY (act_window_id) REFERENCES ir_act_window (id) ON DELETE CASCADE;
CREATE TABLE ir_actions (id integer NOT NULL, binding_model_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, help jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE ir_actions ADD CONSTRAINT ir_actions_pkey PRIMARY KEY (id);
ALTER TABLE ir_actions ADD CONSTRAINT ir_actions_path_unique UNIQUE (path);
ALTER TABLE ir_actions ADD CONSTRAINT ir_actions_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_actions ADD CONSTRAINT ir_actions_binding_model_id_fkey FOREIGN KEY (binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_actions ADD CONSTRAINT ir_actions_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_actions_todo (id integer NOT NULL, action_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_actions_todo ADD CONSTRAINT ir_actions_todo_pkey PRIMARY KEY (id);
ALTER TABLE ir_actions_todo ADD CONSTRAINT ir_actions_todo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_actions_todo ADD CONSTRAINT ir_actions_todo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_asset (id integer NOT NULL, sequence integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_asset ADD CONSTRAINT ir_asset_pkey PRIMARY KEY (id);
ALTER TABLE ir_asset ADD CONSTRAINT ir_asset_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_asset ADD CONSTRAINT ir_asset_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_attachment (id integer NOT NULL, res_id integer, company_id integer, file_size integer, create_uid integer, write_uid integer, url varchar(1024), checksum varchar(40), description text, index_content text, public boolean, create_date timestamp, write_date timestamp, db_datas bytea, original_id integer);
ALTER TABLE ir_attachment ADD CONSTRAINT ir_attachment_pkey PRIMARY KEY (id);
ALTER TABLE ir_attachment ADD CONSTRAINT ir_attachment_original_id_fkey FOREIGN KEY (original_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE ir_attachment ADD CONSTRAINT ir_attachment_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_attachment ADD CONSTRAINT ir_attachment_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE ir_attachment ADD CONSTRAINT ir_attachment_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_config_parameter (id integer NOT NULL, create_uid integer, write_uid integer, value text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE ir_config_parameter ADD CONSTRAINT ir_config_parameter_pkey PRIMARY KEY (id);
ALTER TABLE ir_config_parameter ADD CONSTRAINT ir_config_parameter_key_uniq UNIQUE (key);
ALTER TABLE ir_config_parameter ADD CONSTRAINT ir_config_parameter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_config_parameter ADD CONSTRAINT ir_config_parameter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_cron (id integer NOT NULL, ir_actions_server_id integer NOT NULL, user_id integer NOT NULL, interval_number integer NOT NULL, priority integer, failure_count integer, create_uid integer, write_uid integer, active boolean, nextcall timestamp NOT NULL, lastcall timestamp, first_failure_date timestamp, create_date timestamp, write_date timestamp, queue_job_runner boolean);
ALTER TABLE ir_cron ADD CONSTRAINT ir_cron_pkey PRIMARY KEY (id);
ALTER TABLE ir_cron ADD CONSTRAINT ir_cron_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_cron ADD CONSTRAINT ir_cron_ir_actions_server_id_fkey FOREIGN KEY (ir_actions_server_id) REFERENCES ir_act_server (id) ON DELETE RESTRICT;
ALTER TABLE ir_cron ADD CONSTRAINT ir_cron_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE RESTRICT;
ALTER TABLE ir_cron ADD CONSTRAINT ir_cron_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_cron_progress (id integer NOT NULL, cron_id integer NOT NULL, remaining integer, done integer, timed_out_counter integer, create_uid integer, write_uid integer, deactivate boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_cron_progress ADD CONSTRAINT ir_cron_progress_pkey PRIMARY KEY (id);
ALTER TABLE ir_cron_progress ADD CONSTRAINT ir_cron_progress_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_cron_progress ADD CONSTRAINT ir_cron_progress_cron_id_fkey FOREIGN KEY (cron_id) REFERENCES ir_cron (id) ON DELETE CASCADE;
ALTER TABLE ir_cron_progress ADD CONSTRAINT ir_cron_progress_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_cron_trigger (id integer NOT NULL, cron_id integer, create_uid integer, write_uid integer, call_at timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE ir_cron_trigger ADD CONSTRAINT ir_cron_trigger_pkey PRIMARY KEY (id);
ALTER TABLE ir_cron_trigger ADD CONSTRAINT ir_cron_trigger_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_cron_trigger ADD CONSTRAINT ir_cron_trigger_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_cron_trigger ADD CONSTRAINT ir_cron_trigger_cron_id_fkey FOREIGN KEY (cron_id) REFERENCES ir_cron (id) ON DELETE SET NULL;
CREATE TABLE ir_default (id integer NOT NULL, field_id integer NOT NULL, user_id integer, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_default ADD CONSTRAINT ir_default_pkey PRIMARY KEY (id);
ALTER TABLE ir_default ADD CONSTRAINT ir_default_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_default ADD CONSTRAINT ir_default_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE ir_default ADD CONSTRAINT ir_default_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_default ADD CONSTRAINT ir_default_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE ir_default ADD CONSTRAINT ir_default_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_demo (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_demo ADD CONSTRAINT ir_demo_pkey PRIMARY KEY (id);
ALTER TABLE ir_demo ADD CONSTRAINT ir_demo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_demo ADD CONSTRAINT ir_demo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_demo_failure (id integer NOT NULL, module_id integer NOT NULL, wizard_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_demo_failure ADD CONSTRAINT ir_demo_failure_pkey PRIMARY KEY (id);
ALTER TABLE ir_demo_failure ADD CONSTRAINT ir_demo_failure_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES ir_demo_failure_wizard (id) ON DELETE SET NULL;
ALTER TABLE ir_demo_failure ADD CONSTRAINT ir_demo_failure_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE ir_demo_failure ADD CONSTRAINT ir_demo_failure_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_demo_failure ADD CONSTRAINT ir_demo_failure_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_demo_failure_wizard (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_demo_failure_wizard ADD CONSTRAINT ir_demo_failure_wizard_pkey PRIMARY KEY (id);
ALTER TABLE ir_demo_failure_wizard ADD CONSTRAINT ir_demo_failure_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_demo_failure_wizard ADD CONSTRAINT ir_demo_failure_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_embedded_actions (id integer NOT NULL, sequence integer, parent_action_id integer NOT NULL, parent_res_id integer, action_id integer, user_id integer, create_uid integer, write_uid integer, name jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE ir_embedded_actions ADD CONSTRAINT ir_embedded_actions_pkey PRIMARY KEY (id);
ALTER TABLE ir_embedded_actions ADD CONSTRAINT ir_embedded_actions_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_embedded_actions ADD CONSTRAINT ir_embedded_actions_parent_action_id_fkey FOREIGN KEY (parent_action_id) REFERENCES ir_act_window (id) ON DELETE CASCADE;
ALTER TABLE ir_embedded_actions ADD CONSTRAINT ir_embedded_actions_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE ir_embedded_actions ADD CONSTRAINT ir_embedded_actions_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_embedded_actions_res_groups_rel (ir_embedded_actions_id integer NOT NULL, res_groups_id integer NOT NULL);
ALTER TABLE ir_embedded_actions_res_groups_rel ADD CONSTRAINT ir_embedded_actions_res_groups_rel_pkey PRIMARY KEY (ir_embedded_actions_id, res_groups_id);
ALTER TABLE ir_embedded_actions_res_groups_rel ADD CONSTRAINT ir_embedded_actions_res_groups_rel_ir_embedded_actions_id_fkey FOREIGN KEY (ir_embedded_actions_id) REFERENCES ir_embedded_actions (id) ON DELETE CASCADE;
ALTER TABLE ir_embedded_actions_res_groups_rel ADD CONSTRAINT ir_embedded_actions_res_groups_rel_res_groups_id_fkey FOREIGN KEY (res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE ir_exports (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_exports ADD CONSTRAINT ir_exports_pkey PRIMARY KEY (id);
ALTER TABLE ir_exports ADD CONSTRAINT ir_exports_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_exports ADD CONSTRAINT ir_exports_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_exports_line (id integer NOT NULL, export_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_exports_line ADD CONSTRAINT ir_exports_line_pkey PRIMARY KEY (id);
ALTER TABLE ir_exports_line ADD CONSTRAINT ir_exports_line_export_id_fkey FOREIGN KEY (export_id) REFERENCES ir_exports (id) ON DELETE CASCADE;
ALTER TABLE ir_exports_line ADD CONSTRAINT ir_exports_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_exports_line ADD CONSTRAINT ir_exports_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_filters (id integer NOT NULL, user_id integer, action_id integer, embedded_action_id integer, embedded_parent_res_id integer, create_uid integer, write_uid integer, domain text NOT NULL, context text NOT NULL, is_default boolean, active boolean, create_date timestamp, write_date timestamp, raw_filter text);
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_pkey PRIMARY KEY (id);
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_name_model_uid_unique UNIQUE (model_id, user_id, action_id, embedded_action_id, embedded_parent_res_id, name);
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_embedded_action_id_fkey FOREIGN KEY (embedded_action_id) REFERENCES ir_embedded_actions (id) ON DELETE CASCADE;
ALTER TABLE ir_filters ADD CONSTRAINT ir_filters_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_logging (id integer NOT NULL, create_uid integer, write_uid integer, message text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE ir_logging ADD CONSTRAINT ir_logging_pkey PRIMARY KEY (id);
CREATE TABLE ir_mail_server (id integer NOT NULL, smtp_port integer, sequence integer, create_uid integer, write_uid integer, smtp_debug boolean, active boolean, create_date timestamp, write_date timestamp, max_email_size double precision, smtp_ssl_certificate bytea, smtp_ssl_private_key bytea, google_gmail_access_token_expiration integer);
ALTER TABLE ir_mail_server ADD CONSTRAINT ir_mail_server_pkey PRIMARY KEY (id);
ALTER TABLE ir_mail_server ADD CONSTRAINT ir_mail_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_mail_server ADD CONSTRAINT ir_mail_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, info text, transient boolean, create_date timestamp, write_date timestamp, is_mail_thread boolean, is_mail_activity boolean, is_mail_blacklist boolean);
ALTER TABLE ir_model ADD CONSTRAINT ir_model_pkey PRIMARY KEY (id);
ALTER TABLE ir_model ADD CONSTRAINT ir_model_obj_name_uniq UNIQUE (model);
ALTER TABLE ir_model ADD CONSTRAINT ir_model_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model ADD CONSTRAINT ir_model_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_access (id integer NOT NULL, model_id integer NOT NULL, group_id integer, create_uid integer, write_uid integer, active boolean, perm_read boolean, perm_write boolean, perm_create boolean, perm_unlink boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_model_access ADD CONSTRAINT ir_model_access_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_access ADD CONSTRAINT ir_model_access_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_access ADD CONSTRAINT ir_model_access_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE RESTRICT;
ALTER TABLE ir_model_access ADD CONSTRAINT ir_model_access_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_access ADD CONSTRAINT ir_model_access_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_constraint (id integer NOT NULL, model integer NOT NULL, module integer NOT NULL, create_uid integer, write_uid integer, type varchar(1) NOT NULL, message jsonb, write_date timestamp, create_date timestamp);
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_module_name_uniq UNIQUE (name, module);
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_module_fkey FOREIGN KEY (module) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_model_fkey FOREIGN KEY (model) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_constraint ADD CONSTRAINT ir_model_constraint_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_data (id integer NOT NULL, create_uid integer, create_date timestamp, write_date timestamp, write_uid integer, res_id integer, noupdate boolean);
ALTER TABLE ir_model_data ADD CONSTRAINT ir_model_data_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_data ADD CONSTRAINT ir_model_data_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_data ADD CONSTRAINT ir_model_data_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_fields (id integer NOT NULL, relation_field_id integer, model_id integer NOT NULL, related_field_id integer, size integer, create_uid integer, write_uid integer, field_description jsonb NOT NULL, help jsonb, compute text, copied boolean, required boolean, readonly boolean, index boolean, translate boolean, company_dependent boolean, group_expand boolean, selectable boolean, store boolean, sanitize boolean, sanitize_overridable boolean, sanitize_tags boolean, sanitize_attributes boolean, sanitize_style boolean, sanitize_form boolean, strip_style boolean, strip_classes boolean, create_date timestamp, write_date timestamp, tracking integer, serialization_field_id integer);
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_name_unique UNIQUE (model, name);
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_related_field_id_fkey FOREIGN KEY (related_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_relation_field_id_fkey FOREIGN KEY (relation_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_model_fields ADD CONSTRAINT ir_model_fields_serialization_field_id_fkey FOREIGN KEY (serialization_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
CREATE TABLE ir_model_fields_group_rel (field_id integer NOT NULL, group_id integer NOT NULL);
ALTER TABLE ir_model_fields_group_rel ADD CONSTRAINT ir_model_fields_group_rel_pkey PRIMARY KEY (field_id, group_id);
ALTER TABLE ir_model_fields_group_rel ADD CONSTRAINT ir_model_fields_group_rel_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_model_fields_group_rel ADD CONSTRAINT ir_model_fields_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE ir_model_fields_selection (id integer NOT NULL, field_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE ir_model_fields_selection ADD CONSTRAINT ir_model_fields_selection_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_fields_selection ADD CONSTRAINT ir_model_fields_selection_selection_field_uniq UNIQUE (field_id, value);
ALTER TABLE ir_model_fields_selection ADD CONSTRAINT ir_model_fields_selection_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_fields_selection ADD CONSTRAINT ir_model_fields_selection_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_model_fields_selection ADD CONSTRAINT ir_model_fields_selection_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_inherit (id integer NOT NULL, model_id integer NOT NULL, parent_id integer NOT NULL, parent_field_id integer);
ALTER TABLE ir_model_inherit ADD CONSTRAINT ir_model_inherit_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_inherit ADD CONSTRAINT ir_model_inherit_uniq UNIQUE (model_id, parent_id);
ALTER TABLE ir_model_inherit ADD CONSTRAINT ir_model_inherit_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_inherit ADD CONSTRAINT ir_model_inherit_parent_field_id_fkey FOREIGN KEY (parent_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE;
ALTER TABLE ir_model_inherit ADD CONSTRAINT ir_model_inherit_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_model (id) ON DELETE CASCADE;
CREATE TABLE ir_model_relation (id integer NOT NULL, model integer NOT NULL, module integer NOT NULL, create_uid integer, write_uid integer, write_date timestamp, create_date timestamp);
ALTER TABLE ir_model_relation ADD CONSTRAINT ir_model_relation_pkey PRIMARY KEY (id);
ALTER TABLE ir_model_relation ADD CONSTRAINT ir_model_relation_module_fkey FOREIGN KEY (module) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE ir_model_relation ADD CONSTRAINT ir_model_relation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_model_relation ADD CONSTRAINT ir_model_relation_model_fkey FOREIGN KEY (model) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_relation ADD CONSTRAINT ir_model_relation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_model_spreadsheet_dashboard_rel (spreadsheet_dashboard_id integer NOT NULL, ir_model_id integer NOT NULL);
ALTER TABLE ir_model_spreadsheet_dashboard_rel ADD CONSTRAINT ir_model_spreadsheet_dashboard_rel_pkey PRIMARY KEY (spreadsheet_dashboard_id, ir_model_id);
ALTER TABLE ir_model_spreadsheet_dashboard_rel ADD CONSTRAINT ir_model_spreadsheet_dashboard_rel_ir_model_id_fkey FOREIGN KEY (ir_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_model_spreadsheet_dashboard_rel ADD CONSTRAINT ir_model_spreadsheet_dashboard_re_spreadsheet_dashboard_id_fkey FOREIGN KEY (spreadsheet_dashboard_id) REFERENCES spreadsheet_dashboard (id) ON DELETE CASCADE;
CREATE TABLE ir_module_category (id integer NOT NULL, create_uid integer, create_date timestamp, write_date timestamp, write_uid integer, parent_id integer, name jsonb NOT NULL, sequence integer, description jsonb, visible boolean, exclusive boolean);
ALTER TABLE ir_module_category ADD CONSTRAINT ir_module_category_pkey PRIMARY KEY (id);
ALTER TABLE ir_module_category ADD CONSTRAINT ir_module_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_module_category ADD CONSTRAINT ir_module_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_module_category ADD CONSTRAINT ir_module_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_module_category (id) ON DELETE SET NULL;
CREATE TABLE ir_module_module (id integer NOT NULL, create_uid integer, create_date timestamp, write_date timestamp, write_uid integer, summary jsonb, state varchar(16), shortdesc jsonb, category_id integer, description jsonb, application boolean, demo boolean, web boolean, license varchar(32), sequence integer, auto_install boolean, to_buy boolean, contributors text, menus_by_module text, reports_by_module text, views_by_module text, imported boolean);
ALTER TABLE ir_module_module ADD CONSTRAINT ir_module_module_pkey PRIMARY KEY (id);
ALTER TABLE ir_module_module ADD CONSTRAINT ir_module_module_name_uniq UNIQUE (name);
ALTER TABLE ir_module_module ADD CONSTRAINT ir_module_module_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category (id) ON DELETE SET NULL;
ALTER TABLE ir_module_module ADD CONSTRAINT ir_module_module_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_module_module ADD CONSTRAINT ir_module_module_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_module_module_dependency (id integer NOT NULL, module_id integer, auto_install_required boolean);
ALTER TABLE ir_module_module_dependency ADD CONSTRAINT ir_module_module_dependency_pkey PRIMARY KEY (id);
ALTER TABLE ir_module_module_dependency ADD CONSTRAINT ir_module_module_dependency_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
CREATE TABLE ir_module_module_exclusion (id integer NOT NULL, module_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE ir_module_module_exclusion ADD CONSTRAINT ir_module_module_exclusion_pkey PRIMARY KEY (id);
ALTER TABLE ir_module_module_exclusion ADD CONSTRAINT ir_module_module_exclusion_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_module_module_exclusion ADD CONSTRAINT ir_module_module_exclusion_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_module_module_exclusion ADD CONSTRAINT ir_module_module_exclusion_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
CREATE TABLE ir_profile (id integer NOT NULL, sql_count integer, entry_count integer, init_stack_trace text, sql text, traces_async text, traces_sync text, qweb text, create_date timestamp, duration double precision);
ALTER TABLE ir_profile ADD CONSTRAINT ir_profile_pkey PRIMARY KEY (id);
CREATE TABLE ir_rule (id integer NOT NULL, model_id integer NOT NULL, create_uid integer, write_uid integer, domain_force text, active boolean, perm_read boolean, perm_write boolean, perm_create boolean, perm_unlink boolean, global boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_rule ADD CONSTRAINT ir_rule_pkey PRIMARY KEY (id);
ALTER TABLE ir_rule ADD CONSTRAINT ir_rule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_rule ADD CONSTRAINT ir_rule_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE ir_rule ADD CONSTRAINT ir_rule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_sequence (id integer NOT NULL, number_next integer NOT NULL, number_increment integer NOT NULL, padding integer NOT NULL, company_id integer, create_uid integer, write_uid integer, active boolean, use_date_range boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_sequence ADD CONSTRAINT ir_sequence_pkey PRIMARY KEY (id);
ALTER TABLE ir_sequence ADD CONSTRAINT ir_sequence_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_sequence ADD CONSTRAINT ir_sequence_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_sequence ADD CONSTRAINT ir_sequence_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE ir_sequence_date_range (id integer NOT NULL, sequence_id integer NOT NULL, number_next integer NOT NULL, create_uid integer, write_uid integer, date_from date NOT NULL, date_to date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE ir_sequence_date_range ADD CONSTRAINT ir_sequence_date_range_pkey PRIMARY KEY (id);
ALTER TABLE ir_sequence_date_range ADD CONSTRAINT ir_sequence_date_range_sequence_id_fkey FOREIGN KEY (sequence_id) REFERENCES ir_sequence (id) ON DELETE CASCADE;
ALTER TABLE ir_sequence_date_range ADD CONSTRAINT ir_sequence_date_range_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_sequence_date_range ADD CONSTRAINT ir_sequence_date_range_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_ui_menu (id integer NOT NULL, sequence integer, parent_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE ir_ui_menu ADD CONSTRAINT ir_ui_menu_pkey PRIMARY KEY (id);
ALTER TABLE ir_ui_menu ADD CONSTRAINT ir_ui_menu_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_ui_menu ADD CONSTRAINT ir_ui_menu_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_ui_menu ADD CONSTRAINT ir_ui_menu_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES ir_ui_menu (id) ON DELETE RESTRICT;
CREATE TABLE ir_ui_menu_group_rel (menu_id integer NOT NULL, gid integer NOT NULL);
ALTER TABLE ir_ui_menu_group_rel ADD CONSTRAINT ir_ui_menu_group_rel_pkey PRIMARY KEY (menu_id, gid);
ALTER TABLE ir_ui_menu_group_rel ADD CONSTRAINT ir_ui_menu_group_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE ir_ui_menu_group_rel ADD CONSTRAINT ir_ui_menu_group_rel_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu (id) ON DELETE CASCADE;
CREATE TABLE ir_ui_view (id integer NOT NULL, priority integer NOT NULL, inherit_id integer, create_uid integer, write_uid integer, arch_db jsonb, arch_prev text, arch_updated boolean, active boolean, create_date timestamp, write_date timestamp, customize_show boolean);
ALTER TABLE ir_ui_view ADD CONSTRAINT ir_ui_view_pkey PRIMARY KEY (id);
ALTER TABLE ir_ui_view ADD CONSTRAINT ir_ui_view_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_ui_view ADD CONSTRAINT ir_ui_view_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_ui_view ADD CONSTRAINT ir_ui_view_inherit_id_fkey FOREIGN KEY (inherit_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
CREATE TABLE ir_ui_view_custom (id integer NOT NULL, ref_id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, arch text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE ir_ui_view_custom ADD CONSTRAINT ir_ui_view_custom_pkey PRIMARY KEY (id);
ALTER TABLE ir_ui_view_custom ADD CONSTRAINT ir_ui_view_custom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE ir_ui_view_custom ADD CONSTRAINT ir_ui_view_custom_ref_id_fkey FOREIGN KEY (ref_id) REFERENCES ir_ui_view (id) ON DELETE CASCADE;
ALTER TABLE ir_ui_view_custom ADD CONSTRAINT ir_ui_view_custom_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE ir_ui_view_custom ADD CONSTRAINT ir_ui_view_custom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE ir_ui_view_group_rel (view_id integer NOT NULL, group_id integer NOT NULL);
ALTER TABLE ir_ui_view_group_rel ADD CONSTRAINT ir_ui_view_group_rel_pkey PRIMARY KEY (view_id, group_id);
ALTER TABLE ir_ui_view_group_rel ADD CONSTRAINT ir_ui_view_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE ir_ui_view_group_rel ADD CONSTRAINT ir_ui_view_group_rel_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view (id) ON DELETE CASCADE;
CREATE TABLE journal_account_control_rel (journal_id integer NOT NULL, account_id integer NOT NULL);
ALTER TABLE journal_account_control_rel ADD CONSTRAINT journal_account_control_rel_pkey PRIMARY KEY (journal_id, account_id);
ALTER TABLE journal_account_control_rel ADD CONSTRAINT journal_account_control_rel_account_id_fkey FOREIGN KEY (account_id) REFERENCES account_account (id) ON DELETE CASCADE;
ALTER TABLE journal_account_control_rel ADD CONSTRAINT journal_account_control_rel_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE CASCADE;
CREATE TABLE lead_category (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, description text, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE lead_category ADD CONSTRAINT lead_category_pkey PRIMARY KEY (id);
ALTER TABLE lead_category ADD CONSTRAINT lead_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_category ADD CONSTRAINT lead_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_project (id integer NOT NULL, responsible integer, project_status_id integer, project_class_id integer, project_type_id integer, builder_id integer, company_id integer, country_id integer, province_id integer, region_id integer, county_id integer, city_id integer, applicant_id integer, owner_id integer, builder_partner_id integer, create_uid integer, write_uid integer, start_date date, end_date date, permit_issue_date date, description text, create_date timestamp, write_date timestamp);
ALTER TABLE lead_project ADD CONSTRAINT lead_project_pkey PRIMARY KEY (id);
ALTER TABLE lead_project ADD CONSTRAINT lead_project_project_status_id_fkey FOREIGN KEY (project_status_id) REFERENCES lead_project_status (id) ON DELETE CASCADE;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_project_type_id_fkey FOREIGN KEY (project_type_id) REFERENCES lead_project_type (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_province_id_fkey FOREIGN KEY (province_id) REFERENCES res_country_state (id) ON DELETE RESTRICT;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_region_id_fkey FOREIGN KEY (region_id) REFERENCES res_region (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_responsible_fkey FOREIGN KEY (responsible) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_county_id_fkey FOREIGN KEY (county_id) REFERENCES res_county (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_builder_id_fkey FOREIGN KEY (builder_id) REFERENCES builder_builder (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_builder_partner_id_fkey FOREIGN KEY (builder_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_city_id_fkey FOREIGN KEY (city_id) REFERENCES res_city (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_project ADD CONSTRAINT lead_project_project_class_id_fkey FOREIGN KEY (project_class_id) REFERENCES lead_project_class (id) ON DELETE SET NULL;
CREATE TABLE lead_project_class (id integer NOT NULL, parent_id integer, sequence integer, company_id integer, create_uid integer, write_uid integer, description text, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE lead_project_class ADD CONSTRAINT lead_project_class_pkey PRIMARY KEY (id);
ALTER TABLE lead_project_class ADD CONSTRAINT lead_project_class_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE lead_project_class ADD CONSTRAINT lead_project_class_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_class ADD CONSTRAINT lead_project_class_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES lead_project_class (id) ON DELETE SET NULL;
ALTER TABLE lead_project_class ADD CONSTRAINT lead_project_class_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_project_image_config (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, project_type_id integer);
ALTER TABLE lead_project_image_config ADD CONSTRAINT lead_project_image_config_pkey PRIMARY KEY (id);
ALTER TABLE lead_project_image_config ADD CONSTRAINT lead_project_image_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_image_config ADD CONSTRAINT lead_project_image_config_project_type_id_fkey FOREIGN KEY (project_type_id) REFERENCES lead_project_type (id) ON DELETE SET NULL;
ALTER TABLE lead_project_image_config ADD CONSTRAINT lead_project_image_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_project_image_line (id integer NOT NULL, lead_project_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE lead_project_image_line ADD CONSTRAINT lead_project_image_line_pkey PRIMARY KEY (id);
ALTER TABLE lead_project_image_line ADD CONSTRAINT lead_project_image_line_lead_project_id_fkey FOREIGN KEY (lead_project_id) REFERENCES lead_project (id) ON DELETE SET NULL;
ALTER TABLE lead_project_image_line ADD CONSTRAINT lead_project_image_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_image_line ADD CONSTRAINT lead_project_image_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_project_status (id integer NOT NULL, sequence integer, company_id integer, create_uid integer, write_uid integer, description text, create_date timestamp, write_date timestamp);
ALTER TABLE lead_project_status ADD CONSTRAINT lead_project_status_pkey PRIMARY KEY (id);
ALTER TABLE lead_project_status ADD CONSTRAINT lead_project_status_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE lead_project_status ADD CONSTRAINT lead_project_status_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_status ADD CONSTRAINT lead_project_status_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_project_type (id integer NOT NULL, sequence integer, company_id integer, project_class_id integer, create_uid integer, write_uid integer, description text, create_date timestamp, write_date timestamp);
ALTER TABLE lead_project_type ADD CONSTRAINT lead_project_type_pkey PRIMARY KEY (id);
ALTER TABLE lead_project_type ADD CONSTRAINT lead_project_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_type ADD CONSTRAINT lead_project_type_project_class_id_fkey FOREIGN KEY (project_class_id) REFERENCES lead_project_class (id) ON DELETE SET NULL;
ALTER TABLE lead_project_type ADD CONSTRAINT lead_project_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_project_type ADD CONSTRAINT lead_project_type_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
CREATE TABLE lead_publish (id integer NOT NULL, color integer, user_id integer, company_id integer, partner_id integer, lost_reason_id integer, country_id integer, province_id integer, lead_project_id integer, project_class_id integer, project_status_id integer, builder_id integer, project_type_id integer, region_id integer, county_id integer, city_id integer, applicant_id integer, owner_id integer, builder_partner_id integer, create_uid integer, write_uid integer, date_deadline date, permit_issue_date date, flagged jsonb, starred jsonb, not_interested jsonb, project_description text, additional_info text, active boolean, is_lead_lost boolean, create_date timestamp, write_date timestamp);
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_pkey PRIMARY KEY (id);
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_applicant_id_fkey FOREIGN KEY (applicant_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_builder_id_fkey FOREIGN KEY (builder_id) REFERENCES builder_builder (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_builder_partner_id_fkey FOREIGN KEY (builder_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_city_id_fkey FOREIGN KEY (city_id) REFERENCES res_city (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_county_id_fkey FOREIGN KEY (county_id) REFERENCES res_county (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_lead_project_id_fkey FOREIGN KEY (lead_project_id) REFERENCES lead_project (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_lost_reason_id_fkey FOREIGN KEY (lost_reason_id) REFERENCES crm_lost_reason (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_owner_id_fkey FOREIGN KEY (owner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_project_class_id_fkey FOREIGN KEY (project_class_id) REFERENCES lead_project_class (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_project_status_id_fkey FOREIGN KEY (project_status_id) REFERENCES lead_project_status (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_project_type_id_fkey FOREIGN KEY (project_type_id) REFERENCES lead_project_type (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_province_id_fkey FOREIGN KEY (province_id) REFERENCES res_country_state (id) ON DELETE RESTRICT;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_region_id_fkey FOREIGN KEY (region_id) REFERENCES res_region (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_publish ADD CONSTRAINT lead_publish_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE lead_publish_image_line (id integer NOT NULL, lead_publish_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE lead_publish_image_line ADD CONSTRAINT lead_publish_image_line_pkey PRIMARY KEY (id);
ALTER TABLE lead_publish_image_line ADD CONSTRAINT lead_publish_image_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_publish_image_line ADD CONSTRAINT lead_publish_image_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE lead_publish_image_line ADD CONSTRAINT lead_publish_image_line_lead_publish_id_fkey FOREIGN KEY (lead_publish_id) REFERENCES lead_publish (id) ON DELETE SET NULL;
CREATE TABLE link_tracker (id integer NOT NULL, campaign_id integer, source_id integer, medium_id integer, count integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, mass_mailing_id integer);
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_pkey PRIMARY KEY (id);
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE SET NULL;
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_source_id_fkey FOREIGN KEY (source_id) REFERENCES utm_source (id) ON DELETE SET NULL;
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES utm_medium (id) ON DELETE SET NULL;
ALTER TABLE link_tracker ADD CONSTRAINT link_tracker_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
CREATE TABLE link_tracker_click (id integer NOT NULL, campaign_id integer, link_id integer NOT NULL, country_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, mailing_trace_id integer, mass_mailing_id integer);
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_pkey PRIMARY KEY (id);
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_link_id_fkey FOREIGN KEY (link_id) REFERENCES link_tracker (id) ON DELETE CASCADE;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_mailing_trace_id_fkey FOREIGN KEY (mailing_trace_id) REFERENCES mailing_trace (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_click ADD CONSTRAINT link_tracker_click_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE SET NULL;
CREATE TABLE link_tracker_code (id integer NOT NULL, link_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE link_tracker_code ADD CONSTRAINT link_tracker_code_pkey PRIMARY KEY (id);
ALTER TABLE link_tracker_code ADD CONSTRAINT link_tracker_code_code UNIQUE (code);
ALTER TABLE link_tracker_code ADD CONSTRAINT link_tracker_code_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE link_tracker_code ADD CONSTRAINT link_tracker_code_link_id_fkey FOREIGN KEY (link_id) REFERENCES link_tracker (id) ON DELETE CASCADE;
ALTER TABLE link_tracker_code ADD CONSTRAINT link_tracker_code_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_activity (id integer NOT NULL, res_model_id integer NOT NULL, res_id integer, activity_type_id integer, user_id integer NOT NULL, request_partner_id integer, recommended_activity_type_id integer, previous_activity_type_id integer, create_uid integer, write_uid integer, date_deadline date NOT NULL, date_done date, note text, automated boolean, active boolean, create_date timestamp, write_date timestamp, calendar_event_id integer, start timestamp, stop timestamp);
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_pkey PRIMARY KEY (id);
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_activity_type_id_fkey FOREIGN KEY (activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_calendar_event_id_fkey FOREIGN KEY (calendar_event_id) REFERENCES calendar_event (id) ON DELETE CASCADE;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_previous_activity_type_id_fkey FOREIGN KEY (previous_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_recommended_activity_type_id_fkey FOREIGN KEY (recommended_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_request_partner_id_fkey FOREIGN KEY (request_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE mail_activity ADD CONSTRAINT mail_activity_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
CREATE TABLE mail_activity_plan (id integer NOT NULL, company_id integer, res_model_id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_activity_plan ADD CONSTRAINT mail_activity_plan_pkey PRIMARY KEY (id);
ALTER TABLE mail_activity_plan ADD CONSTRAINT mail_activity_plan_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_plan ADD CONSTRAINT mail_activity_plan_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_plan ADD CONSTRAINT mail_activity_plan_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_plan ADD CONSTRAINT mail_activity_plan_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE mail_activity_plan_mail_activity_schedule_rel (mail_activity_schedule_id integer NOT NULL, mail_activity_plan_id integer NOT NULL);
ALTER TABLE mail_activity_plan_mail_activity_schedule_rel ADD CONSTRAINT mail_activity_plan_mail_activity_schedule_rel_pkey PRIMARY KEY (mail_activity_schedule_id, mail_activity_plan_id);
ALTER TABLE mail_activity_plan_mail_activity_schedule_rel ADD CONSTRAINT mail_activity_plan_mail_activity_sch_mail_activity_plan_id_fkey FOREIGN KEY (mail_activity_plan_id) REFERENCES mail_activity_plan (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_plan_mail_activity_schedule_rel ADD CONSTRAINT mail_activity_plan_mail_activity_mail_activity_schedule_id_fkey FOREIGN KEY (mail_activity_schedule_id) REFERENCES mail_activity_schedule (id) ON DELETE CASCADE;
CREATE TABLE mail_activity_plan_template (id integer NOT NULL, plan_id integer NOT NULL, sequence integer, activity_type_id integer NOT NULL, delay_count integer, responsible_id integer, create_uid integer, write_uid integer, note text, create_date timestamp, write_date timestamp);
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_pkey PRIMARY KEY (id);
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_activity_type_id_fkey FOREIGN KEY (activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT;
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES mail_activity_plan (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_plan_template ADD CONSTRAINT mail_activity_plan_template_responsible_id_fkey FOREIGN KEY (responsible_id) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_activity_rel (activity_id integer NOT NULL, recommended_id integer NOT NULL);
ALTER TABLE mail_activity_rel ADD CONSTRAINT mail_activity_rel_pkey PRIMARY KEY (activity_id, recommended_id);
ALTER TABLE mail_activity_rel ADD CONSTRAINT mail_activity_rel_recommended_id_fkey FOREIGN KEY (recommended_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_rel ADD CONSTRAINT mail_activity_rel_activity_id_fkey FOREIGN KEY (activity_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE;
CREATE TABLE mail_activity_schedule (id integer NOT NULL, res_model_id integer NOT NULL, plan_id integer, plan_on_demand_user_id integer, activity_type_id integer, activity_user_id integer, create_uid integer, write_uid integer, plan_date date, date_deadline date, res_ids text, note text, create_date timestamp, write_date timestamp);
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_pkey PRIMARY KEY (id);
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_activity_user_id_fkey FOREIGN KEY (activity_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES mail_activity_plan (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_plan_on_demand_user_id_fkey FOREIGN KEY (plan_on_demand_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_schedule ADD CONSTRAINT mail_activity_schedule_activity_type_id_fkey FOREIGN KEY (activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL;
CREATE TABLE mail_activity_type (id integer NOT NULL, sequence integer, create_uid integer, delay_count integer, triggered_next_type_id integer, default_user_id integer, write_uid integer, name jsonb NOT NULL, summary jsonb, default_note jsonb, active boolean, keep_done boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_activity_type ADD CONSTRAINT mail_activity_type_pkey PRIMARY KEY (id);
ALTER TABLE mail_activity_type ADD CONSTRAINT mail_activity_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_type ADD CONSTRAINT mail_activity_type_default_user_id_fkey FOREIGN KEY (default_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_activity_type ADD CONSTRAINT mail_activity_type_triggered_next_type_id_fkey FOREIGN KEY (triggered_next_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT;
ALTER TABLE mail_activity_type ADD CONSTRAINT mail_activity_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_activity_type_mail_template_rel (mail_activity_type_id integer NOT NULL, mail_template_id integer NOT NULL);
ALTER TABLE mail_activity_type_mail_template_rel ADD CONSTRAINT mail_activity_type_mail_template_rel_pkey PRIMARY KEY (mail_activity_type_id, mail_template_id);
ALTER TABLE mail_activity_type_mail_template_rel ADD CONSTRAINT mail_activity_type_mail_template_rel_mail_activity_type_id_fkey FOREIGN KEY (mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE;
ALTER TABLE mail_activity_type_mail_template_rel ADD CONSTRAINT mail_activity_type_mail_template_rel_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE;
CREATE TABLE mail_alias (id integer NOT NULL, alias_domain_id integer, alias_model_id integer NOT NULL, alias_force_thread_id integer, alias_parent_model_id integer, alias_parent_thread_id integer, create_uid integer, write_uid integer, alias_bounced_content jsonb, alias_defaults text NOT NULL, alias_incoming_local boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_pkey PRIMARY KEY (id);
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_alias_parent_model_id_fkey FOREIGN KEY (alias_parent_model_id) REFERENCES ir_model (id) ON DELETE SET NULL;
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_alias_model_id_fkey FOREIGN KEY (alias_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mail_alias ADD CONSTRAINT mail_alias_alias_domain_id_fkey FOREIGN KEY (alias_domain_id) REFERENCES mail_alias_domain (id) ON DELETE RESTRICT;
CREATE TABLE mail_alias_domain (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_alias_domain ADD CONSTRAINT mail_alias_domain_pkey PRIMARY KEY (id);
ALTER TABLE mail_alias_domain ADD CONSTRAINT mail_alias_domain_bounce_email_uniques UNIQUE (bounce_alias, name);
ALTER TABLE mail_alias_domain ADD CONSTRAINT mail_alias_domain_catchall_email_uniques UNIQUE (catchall_alias, name);
ALTER TABLE mail_alias_domain ADD CONSTRAINT mail_alias_domain_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_alias_domain ADD CONSTRAINT mail_alias_domain_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_blacklist (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp, opt_out_reason_id integer);
ALTER TABLE mail_blacklist ADD CONSTRAINT mail_blacklist_pkey PRIMARY KEY (id);
ALTER TABLE mail_blacklist ADD CONSTRAINT mail_blacklist_unique_email UNIQUE (email);
ALTER TABLE mail_blacklist ADD CONSTRAINT mail_blacklist_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_blacklist ADD CONSTRAINT mail_blacklist_opt_out_reason_id_fkey FOREIGN KEY (opt_out_reason_id) REFERENCES mailing_subscription_optout (id) ON DELETE RESTRICT;
ALTER TABLE mail_blacklist ADD CONSTRAINT mail_blacklist_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_blacklist_remove (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_blacklist_remove ADD CONSTRAINT mail_blacklist_remove_pkey PRIMARY KEY (id);
ALTER TABLE mail_blacklist_remove ADD CONSTRAINT mail_blacklist_remove_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_blacklist_remove ADD CONSTRAINT mail_blacklist_remove_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_canned_response (id integer NOT NULL, create_uid integer, write_uid integer, substitution text NOT NULL, is_shared boolean, last_used timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mail_canned_response ADD CONSTRAINT mail_canned_response_pkey PRIMARY KEY (id);
ALTER TABLE mail_canned_response ADD CONSTRAINT mail_canned_response_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_canned_response ADD CONSTRAINT mail_canned_response_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_canned_response_res_groups_rel (mail_canned_response_id integer NOT NULL, res_groups_id integer NOT NULL);
ALTER TABLE mail_canned_response_res_groups_rel ADD CONSTRAINT mail_canned_response_res_groups_rel_pkey PRIMARY KEY (mail_canned_response_id, res_groups_id);
ALTER TABLE mail_canned_response_res_groups_rel ADD CONSTRAINT mail_canned_response_res_groups_re_mail_canned_response_id_fkey FOREIGN KEY (mail_canned_response_id) REFERENCES mail_canned_response (id) ON DELETE CASCADE;
ALTER TABLE mail_canned_response_res_groups_rel ADD CONSTRAINT mail_canned_response_res_groups_rel_res_groups_id_fkey FOREIGN KEY (res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE mail_compose_message (id integer NOT NULL, template_id integer, parent_id integer, author_id integer, res_domain_user_id integer, record_alias_domain_id integer, record_company_id integer, subtype_id integer, mail_activity_type_id integer, mail_server_id integer, create_uid integer, write_uid integer, body text, res_ids text, res_domain text, email_add_signature boolean, reply_to_force_new boolean, auto_delete boolean, auto_delete_keep_log boolean, force_send boolean, use_exclusion_list boolean, create_date timestamp, write_date timestamp, mass_mailing_id integer, campaign_id integer);
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_pkey PRIMARY KEY (id);
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_mail_activity_type_id_fkey FOREIGN KEY (mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_record_company_id_fkey FOREIGN KEY (record_company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_res_domain_user_id_fkey FOREIGN KEY (res_domain_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_subtype_id_fkey FOREIGN KEY (subtype_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_template_id_fkey FOREIGN KEY (template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_record_alias_domain_id_fkey FOREIGN KEY (record_alias_domain_id) REFERENCES mail_alias_domain (id) ON DELETE SET NULL;
ALTER TABLE mail_compose_message ADD CONSTRAINT mail_compose_message_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner (id) ON DELETE SET NULL;
CREATE TABLE mail_compose_message_ir_attachments_rel (wizard_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE mail_compose_message_ir_attachments_rel ADD CONSTRAINT mail_compose_message_ir_attachments_rel_pkey PRIMARY KEY (wizard_id, attachment_id);
ALTER TABLE mail_compose_message_ir_attachments_rel ADD CONSTRAINT mail_compose_message_ir_attachments_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE mail_compose_message_ir_attachments_rel ADD CONSTRAINT mail_compose_message_ir_attachments_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES mail_compose_message (id) ON DELETE CASCADE;
CREATE TABLE mail_compose_message_mailing_list_rel (mail_compose_message_id integer NOT NULL, mailing_list_id integer NOT NULL);
ALTER TABLE mail_compose_message_mailing_list_rel ADD CONSTRAINT mail_compose_message_mailing_list_rel_pkey PRIMARY KEY (mail_compose_message_id, mailing_list_id);
ALTER TABLE mail_compose_message_mailing_list_rel ADD CONSTRAINT mail_compose_message_mailing_list__mail_compose_message_id_fkey FOREIGN KEY (mail_compose_message_id) REFERENCES mail_compose_message (id) ON DELETE CASCADE;
ALTER TABLE mail_compose_message_mailing_list_rel ADD CONSTRAINT mail_compose_message_mailing_list_rel_mailing_list_id_fkey FOREIGN KEY (mailing_list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
CREATE TABLE mail_compose_message_res_partner_rel (wizard_id integer NOT NULL, partner_id integer NOT NULL);
ALTER TABLE mail_compose_message_res_partner_rel ADD CONSTRAINT mail_compose_message_res_partner_rel_pkey PRIMARY KEY (wizard_id, partner_id);
ALTER TABLE mail_compose_message_res_partner_rel ADD CONSTRAINT mail_compose_message_res_partner_rel_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE mail_compose_message_res_partner_rel ADD CONSTRAINT mail_compose_message_res_partner_rel_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES mail_compose_message (id) ON DELETE CASCADE;
CREATE TABLE mail_followers (id integer NOT NULL, res_id integer, partner_id integer NOT NULL);
ALTER TABLE mail_followers ADD CONSTRAINT mail_followers_pkey PRIMARY KEY (id);
ALTER TABLE mail_followers ADD CONSTRAINT mail_followers_mail_followers_res_partner_res_model_id_uniq UNIQUE (res_model, res_id, partner_id);
ALTER TABLE mail_followers ADD CONSTRAINT mail_followers_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE mail_followers_mail_message_subtype_rel (mail_followers_id integer NOT NULL, mail_message_subtype_id integer NOT NULL);
ALTER TABLE mail_followers_mail_message_subtype_rel ADD CONSTRAINT mail_followers_mail_message_subtype_rel_pkey PRIMARY KEY (mail_followers_id, mail_message_subtype_id);
ALTER TABLE mail_followers_mail_message_subtype_rel ADD CONSTRAINT mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey FOREIGN KEY (mail_message_subtype_id) REFERENCES mail_message_subtype (id) ON DELETE CASCADE;
ALTER TABLE mail_followers_mail_message_subtype_rel ADD CONSTRAINT mail_followers_mail_message_subtype_rel_mail_followers_id_fkey FOREIGN KEY (mail_followers_id) REFERENCES mail_followers (id) ON DELETE CASCADE;
CREATE TABLE mail_gateway_allowed (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_gateway_allowed ADD CONSTRAINT mail_gateway_allowed_pkey PRIMARY KEY (id);
ALTER TABLE mail_gateway_allowed ADD CONSTRAINT mail_gateway_allowed_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_gateway_allowed ADD CONSTRAINT mail_gateway_allowed_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_guest (id integer NOT NULL, country_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_guest ADD CONSTRAINT mail_guest_pkey PRIMARY KEY (id);
ALTER TABLE mail_guest ADD CONSTRAINT mail_guest_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_guest ADD CONSTRAINT mail_guest_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE mail_guest ADD CONSTRAINT mail_guest_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_ice_server (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_ice_server ADD CONSTRAINT mail_ice_server_pkey PRIMARY KEY (id);
ALTER TABLE mail_ice_server ADD CONSTRAINT mail_ice_server_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_ice_server ADD CONSTRAINT mail_ice_server_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_link_preview (id integer NOT NULL, message_id integer, create_uid integer, write_uid integer, og_description text, is_hidden boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_link_preview ADD CONSTRAINT mail_link_preview_pkey PRIMARY KEY (id);
ALTER TABLE mail_link_preview ADD CONSTRAINT mail_link_preview_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_link_preview ADD CONSTRAINT mail_link_preview_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_link_preview ADD CONSTRAINT mail_link_preview_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
CREATE TABLE mail_mail (id integer NOT NULL, mail_message_id integer NOT NULL, fetchmail_server_id integer, create_uid integer, write_uid integer, body_html text, references text, headers text, email_to text, failure_reason text, is_notification boolean, auto_delete boolean, scheduled_date timestamp, create_date timestamp, write_date timestamp, mailing_id integer);
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_pkey PRIMARY KEY (id);
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_mailing_id_fkey FOREIGN KEY (mailing_id) REFERENCES mailing_mailing (id) ON DELETE SET NULL;
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_fetchmail_server_id_fkey FOREIGN KEY (fetchmail_server_id) REFERENCES fetchmail_server (id) ON DELETE SET NULL;
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_mail ADD CONSTRAINT mail_mail_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_mail_res_partner_rel (mail_mail_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE mail_mail_res_partner_rel ADD CONSTRAINT mail_mail_res_partner_rel_pkey PRIMARY KEY (mail_mail_id, res_partner_id);
ALTER TABLE mail_mail_res_partner_rel ADD CONSTRAINT mail_mail_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE mail_mail_res_partner_rel ADD CONSTRAINT mail_mail_res_partner_rel_mail_mail_id_fkey FOREIGN KEY (mail_mail_id) REFERENCES mail_mail (id) ON DELETE CASCADE;
CREATE TABLE mail_mass_mailing_list_rel (mailing_list_id integer NOT NULL, mailing_mailing_id integer NOT NULL);
ALTER TABLE mail_mass_mailing_list_rel ADD CONSTRAINT mail_mass_mailing_list_rel_pkey PRIMARY KEY (mailing_list_id, mailing_mailing_id);
ALTER TABLE mail_mass_mailing_list_rel ADD CONSTRAINT mail_mass_mailing_list_rel_mailing_list_id_fkey FOREIGN KEY (mailing_list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
ALTER TABLE mail_mass_mailing_list_rel ADD CONSTRAINT mail_mass_mailing_list_rel_mailing_mailing_id_fkey FOREIGN KEY (mailing_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
CREATE TABLE mail_message (id integer NOT NULL, parent_id integer, res_id integer, record_alias_domain_id integer, record_company_id integer, subtype_id integer, mail_activity_type_id integer, author_id integer, author_guest_id integer, mail_server_id integer, create_uid integer, write_uid integer, body text, is_internal boolean, reply_to_force_new boolean, email_add_signature boolean, date timestamp, pinned_at timestamp, create_date timestamp, write_date timestamp, is_edited boolean);
ALTER TABLE mail_message ADD CONSTRAINT mail_message_pkey PRIMARY KEY (id);
ALTER TABLE mail_message ADD CONSTRAINT mail_message_mail_activity_type_id_fkey FOREIGN KEY (mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_record_alias_domain_id_fkey FOREIGN KEY (record_alias_domain_id) REFERENCES mail_alias_domain (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_record_company_id_fkey FOREIGN KEY (record_company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_subtype_id_fkey FOREIGN KEY (subtype_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message ADD CONSTRAINT mail_message_author_guest_id_fkey FOREIGN KEY (author_guest_id) REFERENCES mail_guest (id) ON DELETE SET NULL;
CREATE TABLE mail_message_reaction (id integer NOT NULL, message_id integer NOT NULL, partner_id integer, guest_id integer);
ALTER TABLE mail_message_reaction ADD CONSTRAINT mail_message_reaction_pkey PRIMARY KEY (id);
ALTER TABLE mail_message_reaction ADD CONSTRAINT mail_message_reaction_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE mail_message_reaction ADD CONSTRAINT mail_message_reaction_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_message_reaction ADD CONSTRAINT mail_message_reaction_guest_id_fkey FOREIGN KEY (guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE;
CREATE TABLE mail_message_res_partner_rel (mail_message_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE mail_message_res_partner_rel ADD CONSTRAINT mail_message_res_partner_rel_pkey PRIMARY KEY (mail_message_id, res_partner_id);
ALTER TABLE mail_message_res_partner_rel ADD CONSTRAINT mail_message_res_partner_rel_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_message_res_partner_rel ADD CONSTRAINT mail_message_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE mail_message_res_partner_starred_rel (mail_message_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE mail_message_res_partner_starred_rel ADD CONSTRAINT mail_message_res_partner_starred_rel_pkey PRIMARY KEY (mail_message_id, res_partner_id);
ALTER TABLE mail_message_res_partner_starred_rel ADD CONSTRAINT mail_message_res_partner_starred_rel_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_message_res_partner_starred_rel ADD CONSTRAINT mail_message_res_partner_starred_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE mail_message_schedule (id integer NOT NULL, mail_message_id integer NOT NULL, create_uid integer, write_uid integer, notification_parameters text, scheduled_datetime timestamp NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE mail_message_schedule ADD CONSTRAINT mail_message_schedule_pkey PRIMARY KEY (id);
ALTER TABLE mail_message_schedule ADD CONSTRAINT mail_message_schedule_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message_schedule ADD CONSTRAINT mail_message_schedule_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message_schedule ADD CONSTRAINT mail_message_schedule_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
CREATE TABLE mail_message_subtype (id integer NOT NULL, parent_id integer, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, description jsonb, internal boolean, default boolean, hidden boolean, track_recipients boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_message_subtype ADD CONSTRAINT mail_message_subtype_pkey PRIMARY KEY (id);
ALTER TABLE mail_message_subtype ADD CONSTRAINT mail_message_subtype_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message_subtype ADD CONSTRAINT mail_message_subtype_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL;
ALTER TABLE mail_message_subtype ADD CONSTRAINT mail_message_subtype_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_message_translation (id integer NOT NULL, message_id integer NOT NULL, create_uid integer, write_uid integer, body text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE mail_message_translation ADD CONSTRAINT mail_message_translation_pkey PRIMARY KEY (id);
ALTER TABLE mail_message_translation ADD CONSTRAINT mail_message_translation_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message_translation ADD CONSTRAINT mail_message_translation_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_message_translation ADD CONSTRAINT mail_message_translation_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
CREATE TABLE mail_notification (id integer NOT NULL, author_id integer, mail_message_id integer NOT NULL, mail_mail_id integer, res_partner_id integer, failure_reason text, is_read boolean, read_date timestamp, sms_id_int integer, letter_id integer);
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_pkey PRIMARY KEY (id);
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_letter_id_fkey FOREIGN KEY (letter_id) REFERENCES snailmail_letter (id) ON DELETE CASCADE;
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_mail_mail_id_fkey FOREIGN KEY (mail_mail_id) REFERENCES mail_mail (id) ON DELETE SET NULL;
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_notification ADD CONSTRAINT mail_notification_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE mail_notification_mail_resend_message_rel (mail_resend_message_id integer NOT NULL, mail_notification_id integer NOT NULL);
ALTER TABLE mail_notification_mail_resend_message_rel ADD CONSTRAINT mail_notification_mail_resend_message_rel_pkey PRIMARY KEY (mail_resend_message_id, mail_notification_id);
ALTER TABLE mail_notification_mail_resend_message_rel ADD CONSTRAINT mail_notification_mail_resend_messa_mail_resend_message_id_fkey FOREIGN KEY (mail_resend_message_id) REFERENCES mail_resend_message (id) ON DELETE CASCADE;
ALTER TABLE mail_notification_mail_resend_message_rel ADD CONSTRAINT mail_notification_mail_resend_message_mail_notification_id_fkey FOREIGN KEY (mail_notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE;
CREATE TABLE mail_push (id integer NOT NULL, mail_push_device_id integer NOT NULL, create_uid integer, write_uid integer, payload text, create_date timestamp, write_date timestamp);
ALTER TABLE mail_push ADD CONSTRAINT mail_push_pkey PRIMARY KEY (id);
ALTER TABLE mail_push ADD CONSTRAINT mail_push_mail_push_device_id_fkey FOREIGN KEY (mail_push_device_id) REFERENCES mail_push_device (id) ON DELETE CASCADE;
ALTER TABLE mail_push ADD CONSTRAINT mail_push_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_push ADD CONSTRAINT mail_push_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_push_device (id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, expiration_time timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mail_push_device ADD CONSTRAINT mail_push_device_pkey PRIMARY KEY (id);
ALTER TABLE mail_push_device ADD CONSTRAINT mail_push_device_endpoint_unique UNIQUE (endpoint);
ALTER TABLE mail_push_device ADD CONSTRAINT mail_push_device_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_push_device ADD CONSTRAINT mail_push_device_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE mail_push_device ADD CONSTRAINT mail_push_device_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_resend_message (id integer NOT NULL, mail_message_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_resend_message ADD CONSTRAINT mail_resend_message_pkey PRIMARY KEY (id);
ALTER TABLE mail_resend_message ADD CONSTRAINT mail_resend_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_resend_message ADD CONSTRAINT mail_resend_message_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE mail_resend_message ADD CONSTRAINT mail_resend_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_resend_partner (id integer NOT NULL, notification_id integer NOT NULL, resend_wizard_id integer, create_uid integer, write_uid integer, resend boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_resend_partner ADD CONSTRAINT mail_resend_partner_pkey PRIMARY KEY (id);
ALTER TABLE mail_resend_partner ADD CONSTRAINT mail_resend_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_resend_partner ADD CONSTRAINT mail_resend_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_resend_partner ADD CONSTRAINT mail_resend_partner_resend_wizard_id_fkey FOREIGN KEY (resend_wizard_id) REFERENCES mail_resend_message (id) ON DELETE SET NULL;
ALTER TABLE mail_resend_partner ADD CONSTRAINT mail_resend_partner_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE;
CREATE TABLE mail_scheduled_message (id integer NOT NULL, res_id integer NOT NULL, author_id integer NOT NULL, create_uid integer, write_uid integer, body text, notification_parameters text, is_note boolean, scheduled_date timestamp NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE mail_scheduled_message ADD CONSTRAINT mail_scheduled_message_pkey PRIMARY KEY (id);
ALTER TABLE mail_scheduled_message ADD CONSTRAINT mail_scheduled_message_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_scheduled_message ADD CONSTRAINT mail_scheduled_message_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE mail_scheduled_message ADD CONSTRAINT mail_scheduled_message_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_scheduled_message_res_partner_rel (mail_scheduled_message_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE mail_scheduled_message_res_partner_rel ADD CONSTRAINT mail_scheduled_message_res_partner_rel_pkey PRIMARY KEY (mail_scheduled_message_id, res_partner_id);
ALTER TABLE mail_scheduled_message_res_partner_rel ADD CONSTRAINT mail_scheduled_message_res_partn_mail_scheduled_message_id_fkey FOREIGN KEY (mail_scheduled_message_id) REFERENCES mail_scheduled_message (id) ON DELETE CASCADE;
ALTER TABLE mail_scheduled_message_res_partner_rel ADD CONSTRAINT mail_scheduled_message_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE mail_template (id integer NOT NULL, model_id integer, user_id integer, mail_server_id integer, ref_ir_act_window integer, create_uid integer, write_uid integer, name jsonb, description jsonb, subject jsonb, body_html jsonb, active boolean, use_default_to boolean, auto_delete boolean, create_date timestamp, write_date timestamp, company_id integer, raw_body_html jsonb);
ALTER TABLE mail_template ADD CONSTRAINT mail_template_pkey PRIMARY KEY (id);
ALTER TABLE mail_template ADD CONSTRAINT mail_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_ref_ir_act_window_fkey FOREIGN KEY (ref_ir_act_window) REFERENCES ir_act_window (id) ON DELETE SET NULL;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_template ADD CONSTRAINT mail_template_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE mail_template_ir_actions_report_rel (mail_template_id integer NOT NULL, ir_actions_report_id integer NOT NULL);
ALTER TABLE mail_template_ir_actions_report_rel ADD CONSTRAINT mail_template_ir_actions_report_rel_pkey PRIMARY KEY (mail_template_id, ir_actions_report_id);
ALTER TABLE mail_template_ir_actions_report_rel ADD CONSTRAINT mail_template_ir_actions_report_rel_ir_actions_report_id_fkey FOREIGN KEY (ir_actions_report_id) REFERENCES ir_act_report_xml (id) ON DELETE CASCADE;
ALTER TABLE mail_template_ir_actions_report_rel ADD CONSTRAINT mail_template_ir_actions_report_rel_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE;
CREATE TABLE mail_template_mail_template_reset_rel (mail_template_reset_id integer NOT NULL, mail_template_id integer NOT NULL);
ALTER TABLE mail_template_mail_template_reset_rel ADD CONSTRAINT mail_template_mail_template_reset_rel_pkey PRIMARY KEY (mail_template_reset_id, mail_template_id);
ALTER TABLE mail_template_mail_template_reset_rel ADD CONSTRAINT mail_template_mail_template_reset_r_mail_template_reset_id_fkey FOREIGN KEY (mail_template_reset_id) REFERENCES mail_template_reset (id) ON DELETE CASCADE;
ALTER TABLE mail_template_mail_template_reset_rel ADD CONSTRAINT mail_template_mail_template_reset_rel_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE;
CREATE TABLE mail_template_preview (id integer NOT NULL, mail_template_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_template_preview ADD CONSTRAINT mail_template_preview_pkey PRIMARY KEY (id);
ALTER TABLE mail_template_preview ADD CONSTRAINT mail_template_preview_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_template_preview ADD CONSTRAINT mail_template_preview_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE;
ALTER TABLE mail_template_preview ADD CONSTRAINT mail_template_preview_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_template_reset (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mail_template_reset ADD CONSTRAINT mail_template_reset_pkey PRIMARY KEY (id);
ALTER TABLE mail_template_reset ADD CONSTRAINT mail_template_reset_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_template_reset ADD CONSTRAINT mail_template_reset_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_tracking_value (id integer NOT NULL, field_id integer, old_value_integer integer, new_value_integer integer, currency_id integer, mail_message_id integer NOT NULL, create_uid integer, write_uid integer, field_info jsonb, old_value_text text, new_value_text text, old_value_datetime timestamp, new_value_datetime timestamp, create_date timestamp, write_date timestamp, old_value_float double precision, new_value_float double precision);
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_pkey PRIMARY KEY (id);
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_field_id_fkey FOREIGN KEY (field_id) REFERENCES ir_model_fields (id) ON DELETE SET NULL;
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_tracking_value ADD CONSTRAINT mail_tracking_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_wizard_invite (id integer NOT NULL, res_id integer, create_uid integer, write_uid integer, message text, notify boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mail_wizard_invite ADD CONSTRAINT mail_wizard_invite_pkey PRIMARY KEY (id);
ALTER TABLE mail_wizard_invite ADD CONSTRAINT mail_wizard_invite_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mail_wizard_invite ADD CONSTRAINT mail_wizard_invite_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mail_wizard_invite_res_partner_rel (mail_wizard_invite_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE mail_wizard_invite_res_partner_rel ADD CONSTRAINT mail_wizard_invite_res_partner_rel_pkey PRIMARY KEY (mail_wizard_invite_id, res_partner_id);
ALTER TABLE mail_wizard_invite_res_partner_rel ADD CONSTRAINT mail_wizard_invite_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE mail_wizard_invite_res_partner_rel ADD CONSTRAINT mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey FOREIGN KEY (mail_wizard_invite_id) REFERENCES mail_wizard_invite (id) ON DELETE CASCADE;
CREATE TABLE mailing_contact (id integer NOT NULL, message_bounce integer, title_id integer, country_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_contact ADD CONSTRAINT mailing_contact_pkey PRIMARY KEY (id);
ALTER TABLE mailing_contact ADD CONSTRAINT mailing_contact_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE mailing_contact ADD CONSTRAINT mailing_contact_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_contact ADD CONSTRAINT mailing_contact_title_id_fkey FOREIGN KEY (title_id) REFERENCES res_partner_title (id) ON DELETE SET NULL;
ALTER TABLE mailing_contact ADD CONSTRAINT mailing_contact_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_contact_import (id integer NOT NULL, create_uid integer, write_uid integer, contact_list text, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_contact_import ADD CONSTRAINT mailing_contact_import_pkey PRIMARY KEY (id);
ALTER TABLE mailing_contact_import ADD CONSTRAINT mailing_contact_import_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_contact_import ADD CONSTRAINT mailing_contact_import_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_contact_import_mailing_list_rel (mailing_contact_import_id integer NOT NULL, mailing_list_id integer NOT NULL);
ALTER TABLE mailing_contact_import_mailing_list_rel ADD CONSTRAINT mailing_contact_import_mailing_list_rel_pkey PRIMARY KEY (mailing_contact_import_id, mailing_list_id);
ALTER TABLE mailing_contact_import_mailing_list_rel ADD CONSTRAINT mailing_contact_import_mailing_l_mailing_contact_import_id_fkey FOREIGN KEY (mailing_contact_import_id) REFERENCES mailing_contact_import (id) ON DELETE CASCADE;
ALTER TABLE mailing_contact_import_mailing_list_rel ADD CONSTRAINT mailing_contact_import_mailing_list_rel_mailing_list_id_fkey FOREIGN KEY (mailing_list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
CREATE TABLE mailing_contact_mailing_contact_to_list_rel (mailing_contact_to_list_id integer NOT NULL, mailing_contact_id integer NOT NULL);
ALTER TABLE mailing_contact_mailing_contact_to_list_rel ADD CONSTRAINT mailing_contact_mailing_contact_to_list_rel_pkey PRIMARY KEY (mailing_contact_to_list_id, mailing_contact_id);
ALTER TABLE mailing_contact_mailing_contact_to_list_rel ADD CONSTRAINT mailing_contact_mailing_contact_mailing_contact_to_list_id_fkey FOREIGN KEY (mailing_contact_to_list_id) REFERENCES mailing_contact_to_list (id) ON DELETE CASCADE;
ALTER TABLE mailing_contact_mailing_contact_to_list_rel ADD CONSTRAINT mailing_contact_mailing_contact_to_list_mailing_contact_id_fkey FOREIGN KEY (mailing_contact_id) REFERENCES mailing_contact (id) ON DELETE CASCADE;
CREATE TABLE mailing_contact_res_partner_category_rel (mailing_contact_id integer NOT NULL, res_partner_category_id integer NOT NULL);
ALTER TABLE mailing_contact_res_partner_category_rel ADD CONSTRAINT mailing_contact_res_partner_category_rel_pkey PRIMARY KEY (mailing_contact_id, res_partner_category_id);
ALTER TABLE mailing_contact_res_partner_category_rel ADD CONSTRAINT mailing_contact_res_partner_category_re_mailing_contact_id_fkey FOREIGN KEY (mailing_contact_id) REFERENCES mailing_contact (id) ON DELETE CASCADE;
ALTER TABLE mailing_contact_res_partner_category_rel ADD CONSTRAINT mailing_contact_res_partner_catego_res_partner_category_id_fkey FOREIGN KEY (res_partner_category_id) REFERENCES res_partner_category (id) ON DELETE CASCADE;
CREATE TABLE mailing_contact_to_list (id integer NOT NULL, mailing_list_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_contact_to_list ADD CONSTRAINT mailing_contact_to_list_pkey PRIMARY KEY (id);
ALTER TABLE mailing_contact_to_list ADD CONSTRAINT mailing_contact_to_list_mailing_list_id_fkey FOREIGN KEY (mailing_list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
ALTER TABLE mailing_contact_to_list ADD CONSTRAINT mailing_contact_to_list_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_contact_to_list ADD CONSTRAINT mailing_contact_to_list_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_filter (id integer NOT NULL, create_uid integer, mailing_model_id integer NOT NULL, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_filter ADD CONSTRAINT mailing_filter_pkey PRIMARY KEY (id);
ALTER TABLE mailing_filter ADD CONSTRAINT mailing_filter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_filter ADD CONSTRAINT mailing_filter_mailing_model_id_fkey FOREIGN KEY (mailing_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mailing_filter ADD CONSTRAINT mailing_filter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_list (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, is_public boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_list ADD CONSTRAINT mailing_list_pkey PRIMARY KEY (id);
ALTER TABLE mailing_list ADD CONSTRAINT mailing_list_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_list ADD CONSTRAINT mailing_list_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_list_mailing_list_merge_rel (mailing_list_merge_id integer NOT NULL, mailing_list_id integer NOT NULL);
ALTER TABLE mailing_list_mailing_list_merge_rel ADD CONSTRAINT mailing_list_mailing_list_merge_rel_pkey PRIMARY KEY (mailing_list_merge_id, mailing_list_id);
ALTER TABLE mailing_list_mailing_list_merge_rel ADD CONSTRAINT mailing_list_mailing_list_merge_rel_mailing_list_id_fkey FOREIGN KEY (mailing_list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
ALTER TABLE mailing_list_mailing_list_merge_rel ADD CONSTRAINT mailing_list_mailing_list_merge_rel_mailing_list_merge_id_fkey FOREIGN KEY (mailing_list_merge_id) REFERENCES mailing_list_merge (id) ON DELETE CASCADE;
CREATE TABLE mailing_list_merge (id integer NOT NULL, dest_list_id integer, create_uid integer, write_uid integer, archive_src_lists boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_list_merge ADD CONSTRAINT mailing_list_merge_pkey PRIMARY KEY (id);
ALTER TABLE mailing_list_merge ADD CONSTRAINT mailing_list_merge_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_list_merge ADD CONSTRAINT mailing_list_merge_dest_list_id_fkey FOREIGN KEY (dest_list_id) REFERENCES mailing_list (id) ON DELETE SET NULL;
ALTER TABLE mailing_list_merge ADD CONSTRAINT mailing_list_merge_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_mailing (id integer NOT NULL, source_id integer NOT NULL, campaign_id integer, medium_id integer, color integer, user_id integer, mailing_model_id integer NOT NULL, mail_server_id integer, mailing_filter_id integer, ab_testing_pc integer, create_uid integer, write_uid integer, body_arch text, body_html text, active boolean, favorite boolean, keep_archives boolean, ab_testing_enabled boolean, kpi_mail_required boolean, favorite_date timestamp, sent_date timestamp, schedule_date timestamp, calendar_date timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_pkey PRIMARY KEY (id);
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_mail_server_id_fkey FOREIGN KEY (mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_mailing_filter_id_fkey FOREIGN KEY (mailing_filter_id) REFERENCES mailing_filter (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_mailing_model_id_fkey FOREIGN KEY (mailing_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES utm_medium (id) ON DELETE RESTRICT;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_source_id_fkey FOREIGN KEY (source_id) REFERENCES utm_source (id) ON DELETE RESTRICT;
ALTER TABLE mailing_mailing ADD CONSTRAINT mailing_mailing_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
CREATE TABLE mailing_mailing_schedule_date (id integer NOT NULL, mass_mailing_id integer NOT NULL, create_uid integer, write_uid integer, schedule_date timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_mailing_schedule_date ADD CONSTRAINT mailing_mailing_schedule_date_pkey PRIMARY KEY (id);
ALTER TABLE mailing_mailing_schedule_date ADD CONSTRAINT mailing_mailing_schedule_date_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing_schedule_date ADD CONSTRAINT mailing_mailing_schedule_date_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
ALTER TABLE mailing_mailing_schedule_date ADD CONSTRAINT mailing_mailing_schedule_date_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_mailing_test (id integer NOT NULL, mass_mailing_id integer NOT NULL, create_uid integer, write_uid integer, email_to text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_mailing_test ADD CONSTRAINT mailing_mailing_test_pkey PRIMARY KEY (id);
ALTER TABLE mailing_mailing_test ADD CONSTRAINT mailing_mailing_test_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing_test ADD CONSTRAINT mailing_mailing_test_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_mailing_test ADD CONSTRAINT mailing_mailing_test_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
CREATE TABLE mailing_subscription (id integer NOT NULL, contact_id integer NOT NULL, list_id integer NOT NULL, opt_out_reason_id integer, create_uid integer, write_uid integer, opt_out boolean, opt_out_datetime timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_pkey PRIMARY KEY (id);
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_unique_contact_list UNIQUE (contact_id, list_id);
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_contact_id_fkey FOREIGN KEY (contact_id) REFERENCES mailing_contact (id) ON DELETE CASCADE;
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_list_id_fkey FOREIGN KEY (list_id) REFERENCES mailing_list (id) ON DELETE CASCADE;
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_opt_out_reason_id_fkey FOREIGN KEY (opt_out_reason_id) REFERENCES mailing_subscription_optout (id) ON DELETE RESTRICT;
ALTER TABLE mailing_subscription ADD CONSTRAINT mailing_subscription_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_subscription_optout (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb, is_feedback boolean, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_subscription_optout ADD CONSTRAINT mailing_subscription_optout_pkey PRIMARY KEY (id);
ALTER TABLE mailing_subscription_optout ADD CONSTRAINT mailing_subscription_optout_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_subscription_optout ADD CONSTRAINT mailing_subscription_optout_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE mailing_trace (id integer NOT NULL, mail_mail_id integer, mail_mail_id_int integer, res_id integer, mass_mailing_id integer, campaign_id integer, create_uid integer, write_uid integer, failure_reason text, sent_datetime timestamp, open_datetime timestamp, reply_datetime timestamp, links_click_datetime timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_pkey PRIMARY KEY (id);
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_mail_mail_id_fkey FOREIGN KEY (mail_mail_id) REFERENCES mail_mail (id) ON DELETE SET NULL;
ALTER TABLE mailing_trace ADD CONSTRAINT mailing_trace_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
CREATE TABLE mailing_trace_report (id integer, scheduled_date timestamp, scheduled bigint, sent bigint, delivered bigint, processing bigint, pending bigint, error bigint, bounced bigint, canceled bigint, opened bigint, replied bigint, clicked bigint);
CREATE TABLE mass_mailing_ir_attachments_rel (mass_mailing_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE mass_mailing_ir_attachments_rel ADD CONSTRAINT mass_mailing_ir_attachments_rel_pkey PRIMARY KEY (mass_mailing_id, attachment_id);
ALTER TABLE mass_mailing_ir_attachments_rel ADD CONSTRAINT mass_mailing_ir_attachments_rel_mass_mailing_id_fkey FOREIGN KEY (mass_mailing_id) REFERENCES mailing_mailing (id) ON DELETE CASCADE;
ALTER TABLE mass_mailing_ir_attachments_rel ADD CONSTRAINT mass_mailing_ir_attachments_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
CREATE TABLE meeting_category_rel (event_id integer NOT NULL, type_id integer NOT NULL);
ALTER TABLE meeting_category_rel ADD CONSTRAINT meeting_category_rel_pkey PRIMARY KEY (event_id, type_id);
ALTER TABLE meeting_category_rel ADD CONSTRAINT meeting_category_rel_type_id_fkey FOREIGN KEY (type_id) REFERENCES calendar_event_type (id) ON DELETE CASCADE;
ALTER TABLE meeting_category_rel ADD CONSTRAINT meeting_category_rel_event_id_fkey FOREIGN KEY (event_id) REFERENCES calendar_event (id) ON DELETE CASCADE;
CREATE TABLE merge_opportunity_rel (merge_id integer NOT NULL, opportunity_id integer NOT NULL);
ALTER TABLE merge_opportunity_rel ADD CONSTRAINT merge_opportunity_rel_pkey PRIMARY KEY (merge_id, opportunity_id);
ALTER TABLE merge_opportunity_rel ADD CONSTRAINT merge_opportunity_rel_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead (id) ON DELETE CASCADE;
ALTER TABLE merge_opportunity_rel ADD CONSTRAINT merge_opportunity_rel_merge_id_fkey FOREIGN KEY (merge_id) REFERENCES crm_merge_opportunity (id) ON DELETE CASCADE;
CREATE TABLE message_attachment_rel (message_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE message_attachment_rel ADD CONSTRAINT message_attachment_rel_pkey PRIMARY KEY (message_id, attachment_id);
ALTER TABLE message_attachment_rel ADD CONSTRAINT message_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE message_attachment_rel ADD CONSTRAINT message_attachment_rel_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
CREATE TABLE module_country (module_id integer NOT NULL, country_id integer NOT NULL);
ALTER TABLE module_country ADD CONSTRAINT module_country_pkey PRIMARY KEY (module_id, country_id);
ALTER TABLE module_country ADD CONSTRAINT module_country_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE CASCADE;
ALTER TABLE module_country ADD CONSTRAINT module_country_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
CREATE TABLE onboarding_onboarding (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE onboarding_onboarding ADD CONSTRAINT onboarding_onboarding_pkey PRIMARY KEY (id);
ALTER TABLE onboarding_onboarding ADD CONSTRAINT onboarding_onboarding_route_name_uniq UNIQUE (route_name);
ALTER TABLE onboarding_onboarding ADD CONSTRAINT onboarding_onboarding_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE onboarding_onboarding ADD CONSTRAINT onboarding_onboarding_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE onboarding_onboarding_onboarding_onboarding_step_rel (onboarding_onboarding_id integer NOT NULL, onboarding_onboarding_step_id integer NOT NULL);
ALTER TABLE onboarding_onboarding_onboarding_onboarding_step_rel ADD CONSTRAINT onboarding_onboarding_onboarding_onboarding_step_rel_pkey PRIMARY KEY (onboarding_onboarding_id, onboarding_onboarding_step_id);
ALTER TABLE onboarding_onboarding_onboarding_onboarding_step_rel ADD CONSTRAINT onboarding_onboarding_onboard_onboarding_onboarding_step_i_fkey FOREIGN KEY (onboarding_onboarding_step_id) REFERENCES onboarding_onboarding_step (id) ON DELETE CASCADE;
ALTER TABLE onboarding_onboarding_onboarding_onboarding_step_rel ADD CONSTRAINT onboarding_onboarding_onboarding__onboarding_onboarding_id_fkey FOREIGN KEY (onboarding_onboarding_id) REFERENCES onboarding_onboarding (id) ON DELETE CASCADE;
CREATE TABLE onboarding_onboarding_step (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, title jsonb, description jsonb, button_text jsonb NOT NULL, done_text jsonb, step_image_alt jsonb, is_per_company boolean, create_date timestamp, write_date timestamp);
ALTER TABLE onboarding_onboarding_step ADD CONSTRAINT onboarding_onboarding_step_pkey PRIMARY KEY (id);
ALTER TABLE onboarding_onboarding_step ADD CONSTRAINT onboarding_onboarding_step_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE onboarding_onboarding_step ADD CONSTRAINT onboarding_onboarding_step_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE onboarding_progress (id integer NOT NULL, company_id integer, onboarding_id integer NOT NULL, create_uid integer, write_uid integer, is_onboarding_closed boolean, create_date timestamp, write_date timestamp);
ALTER TABLE onboarding_progress ADD CONSTRAINT onboarding_progress_pkey PRIMARY KEY (id);
ALTER TABLE onboarding_progress ADD CONSTRAINT onboarding_progress_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE onboarding_progress ADD CONSTRAINT onboarding_progress_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE onboarding_progress ADD CONSTRAINT onboarding_progress_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE onboarding_progress ADD CONSTRAINT onboarding_progress_onboarding_id_fkey FOREIGN KEY (onboarding_id) REFERENCES onboarding_onboarding (id) ON DELETE CASCADE;
CREATE TABLE onboarding_progress_onboarding_progress_step_rel (onboarding_progress_id integer NOT NULL, onboarding_progress_step_id integer NOT NULL);
ALTER TABLE onboarding_progress_onboarding_progress_step_rel ADD CONSTRAINT onboarding_progress_onboarding_progress_step_rel_pkey PRIMARY KEY (onboarding_progress_id, onboarding_progress_step_id);
ALTER TABLE onboarding_progress_onboarding_progress_step_rel ADD CONSTRAINT onboarding_progress_onboarding_prog_onboarding_progress_id_fkey FOREIGN KEY (onboarding_progress_id) REFERENCES onboarding_progress (id) ON DELETE CASCADE;
ALTER TABLE onboarding_progress_onboarding_progress_step_rel ADD CONSTRAINT onboarding_progress_onboarding_onboarding_progress_step_id_fkey FOREIGN KEY (onboarding_progress_step_id) REFERENCES onboarding_progress_step (id) ON DELETE CASCADE;
CREATE TABLE onboarding_progress_step (id integer NOT NULL, step_id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE onboarding_progress_step ADD CONSTRAINT onboarding_progress_step_pkey PRIMARY KEY (id);
ALTER TABLE onboarding_progress_step ADD CONSTRAINT onboarding_progress_step_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE onboarding_progress_step ADD CONSTRAINT onboarding_progress_step_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE onboarding_progress_step ADD CONSTRAINT onboarding_progress_step_step_id_fkey FOREIGN KEY (step_id) REFERENCES onboarding_onboarding_step (id) ON DELETE CASCADE;
ALTER TABLE onboarding_progress_step ADD CONSTRAINT onboarding_progress_step_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE organization_city_serve (id integer NOT NULL, organization_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE organization_city_serve ADD CONSTRAINT organization_city_serve_pkey PRIMARY KEY (id);
ALTER TABLE organization_city_serve ADD CONSTRAINT organization_city_serve_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_city_serve ADD CONSTRAINT organization_city_serve_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES organization_organization (id) ON DELETE SET NULL;
ALTER TABLE organization_city_serve ADD CONSTRAINT organization_city_serve_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE organization_image_line (id integer NOT NULL, organization_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE organization_image_line ADD CONSTRAINT organization_image_line_pkey PRIMARY KEY (id);
ALTER TABLE organization_image_line ADD CONSTRAINT organization_image_line_organization_id_fkey FOREIGN KEY (organization_id) REFERENCES organization_organization (id) ON DELETE SET NULL;
ALTER TABLE organization_image_line ADD CONSTRAINT organization_image_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_image_line ADD CONSTRAINT organization_image_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE organization_organization (id integer NOT NULL, company_id integer, partner_id integer, currency_id integer NOT NULL, state_id integer, country_id integer, create_uid integer, write_uid integer, description text, service_offered text, create_date timestamp, write_date timestamp);
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_pkey PRIMARY KEY (id);
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_unique_company UNIQUE (company_id);
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE organization_organization ADD CONSTRAINT organization_organization_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
CREATE TABLE organization_organization_organization_work_category_rel (organization_organization_id integer NOT NULL, organization_work_category_id integer NOT NULL);
ALTER TABLE organization_organization_organization_work_category_rel ADD CONSTRAINT organization_organization_organization_work_category_rel_pkey PRIMARY KEY (organization_organization_id, organization_work_category_id);
ALTER TABLE organization_organization_organization_work_category_rel ADD CONSTRAINT organization_organization_org_organization_organization_id_fkey FOREIGN KEY (organization_organization_id) REFERENCES organization_organization (id) ON DELETE CASCADE;
ALTER TABLE organization_organization_organization_work_category_rel ADD CONSTRAINT organization_organization_org_organization_work_category_i_fkey FOREIGN KEY (organization_work_category_id) REFERENCES organization_work_category (id) ON DELETE CASCADE;
CREATE TABLE organization_work_category (id integer NOT NULL, parent_id integer, create_uid integer, write_uid integer, description text, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE organization_work_category ADD CONSTRAINT organization_work_category_pkey PRIMARY KEY (id);
ALTER TABLE organization_work_category ADD CONSTRAINT organization_work_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_work_category ADD CONSTRAINT organization_work_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE organization_work_category ADD CONSTRAINT organization_work_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES organization_work_category (id) ON DELETE SET NULL;
CREATE TABLE organization_work_category_res_company_rel (res_company_id integer NOT NULL, organization_work_category_id integer NOT NULL);
ALTER TABLE organization_work_category_res_company_rel ADD CONSTRAINT organization_work_category_res_company_rel_pkey PRIMARY KEY (res_company_id, organization_work_category_id);
ALTER TABLE organization_work_category_res_company_rel ADD CONSTRAINT organization_work_category_re_organization_work_category_i_fkey FOREIGN KEY (organization_work_category_id) REFERENCES organization_work_category (id) ON DELETE CASCADE;
ALTER TABLE organization_work_category_res_company_rel ADD CONSTRAINT organization_work_category_res_company_rel_res_company_id_fkey FOREIGN KEY (res_company_id) REFERENCES res_company (id) ON DELETE CASCADE;
CREATE TABLE payment_capture_wizard (id integer NOT NULL, create_uid integer, write_uid integer, void_remaining_amount boolean, create_date timestamp, write_date timestamp);
ALTER TABLE payment_capture_wizard ADD CONSTRAINT payment_capture_wizard_pkey PRIMARY KEY (id);
ALTER TABLE payment_capture_wizard ADD CONSTRAINT payment_capture_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_capture_wizard ADD CONSTRAINT payment_capture_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE payment_capture_wizard_payment_transaction_rel (payment_capture_wizard_id integer NOT NULL, payment_transaction_id integer NOT NULL);
ALTER TABLE payment_capture_wizard_payment_transaction_rel ADD CONSTRAINT payment_capture_wizard_payment_transaction_rel_pkey PRIMARY KEY (payment_capture_wizard_id, payment_transaction_id);
ALTER TABLE payment_capture_wizard_payment_transaction_rel ADD CONSTRAINT payment_capture_wizard_payment_tran_payment_transaction_id_fkey FOREIGN KEY (payment_transaction_id) REFERENCES payment_transaction (id) ON DELETE CASCADE;
ALTER TABLE payment_capture_wizard_payment_transaction_rel ADD CONSTRAINT payment_capture_wizard_payment_t_payment_capture_wizard_id_fkey FOREIGN KEY (payment_capture_wizard_id) REFERENCES payment_capture_wizard (id) ON DELETE CASCADE;
CREATE TABLE payment_country_rel (payment_id integer NOT NULL, country_id integer NOT NULL);
ALTER TABLE payment_country_rel ADD CONSTRAINT payment_country_rel_pkey PRIMARY KEY (payment_id, country_id);
ALTER TABLE payment_country_rel ADD CONSTRAINT payment_country_rel_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE CASCADE;
ALTER TABLE payment_country_rel ADD CONSTRAINT payment_country_rel_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES payment_provider (id) ON DELETE CASCADE;
CREATE TABLE payment_currency_rel (payment_provider_id integer NOT NULL, currency_id integer NOT NULL);
ALTER TABLE payment_currency_rel ADD CONSTRAINT payment_currency_rel_pkey PRIMARY KEY (payment_provider_id, currency_id);
ALTER TABLE payment_currency_rel ADD CONSTRAINT payment_currency_rel_payment_provider_id_fkey FOREIGN KEY (payment_provider_id) REFERENCES payment_provider (id) ON DELETE CASCADE;
ALTER TABLE payment_currency_rel ADD CONSTRAINT payment_currency_rel_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE CASCADE;
CREATE TABLE payment_link_wizard (id integer NOT NULL, res_id integer NOT NULL, currency_id integer, partner_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, discount_date date, open_installments jsonb, has_eligible_epd boolean);
ALTER TABLE payment_link_wizard ADD CONSTRAINT payment_link_wizard_pkey PRIMARY KEY (id);
ALTER TABLE payment_link_wizard ADD CONSTRAINT payment_link_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_link_wizard ADD CONSTRAINT payment_link_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_link_wizard ADD CONSTRAINT payment_link_wizard_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE payment_link_wizard ADD CONSTRAINT payment_link_wizard_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
CREATE TABLE payment_method (id integer NOT NULL, sequence integer, primary_payment_method_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, support_tokenization boolean, support_express_checkout boolean, create_date timestamp, write_date timestamp);
ALTER TABLE payment_method ADD CONSTRAINT payment_method_pkey PRIMARY KEY (id);
ALTER TABLE payment_method ADD CONSTRAINT payment_method_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_method ADD CONSTRAINT payment_method_primary_payment_method_id_fkey FOREIGN KEY (primary_payment_method_id) REFERENCES payment_method (id) ON DELETE SET NULL;
ALTER TABLE payment_method ADD CONSTRAINT payment_method_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE payment_method_payment_provider_rel (payment_method_id integer NOT NULL, payment_provider_id integer NOT NULL);
ALTER TABLE payment_method_payment_provider_rel ADD CONSTRAINT payment_method_payment_provider_rel_pkey PRIMARY KEY (payment_method_id, payment_provider_id);
ALTER TABLE payment_method_payment_provider_rel ADD CONSTRAINT payment_method_payment_provider_rel_payment_provider_id_fkey FOREIGN KEY (payment_provider_id) REFERENCES payment_provider (id) ON DELETE CASCADE;
ALTER TABLE payment_method_payment_provider_rel ADD CONSTRAINT payment_method_payment_provider_rel_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES payment_method (id) ON DELETE CASCADE;
CREATE TABLE payment_method_res_country_rel (payment_method_id integer NOT NULL, res_country_id integer NOT NULL);
ALTER TABLE payment_method_res_country_rel ADD CONSTRAINT payment_method_res_country_rel_pkey PRIMARY KEY (payment_method_id, res_country_id);
ALTER TABLE payment_method_res_country_rel ADD CONSTRAINT payment_method_res_country_rel_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES payment_method (id) ON DELETE CASCADE;
ALTER TABLE payment_method_res_country_rel ADD CONSTRAINT payment_method_res_country_rel_res_country_id_fkey FOREIGN KEY (res_country_id) REFERENCES res_country (id) ON DELETE CASCADE;
CREATE TABLE payment_method_res_currency_rel (payment_method_id integer NOT NULL, res_currency_id integer NOT NULL);
ALTER TABLE payment_method_res_currency_rel ADD CONSTRAINT payment_method_res_currency_rel_pkey PRIMARY KEY (payment_method_id, res_currency_id);
ALTER TABLE payment_method_res_currency_rel ADD CONSTRAINT payment_method_res_currency_rel_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES payment_method (id) ON DELETE CASCADE;
ALTER TABLE payment_method_res_currency_rel ADD CONSTRAINT payment_method_res_currency_rel_res_currency_id_fkey FOREIGN KEY (res_currency_id) REFERENCES res_currency (id) ON DELETE CASCADE;
CREATE TABLE payment_provider (id integer NOT NULL, sequence integer, company_id integer NOT NULL, redirect_form_view_id integer, inline_form_view_id integer, token_inline_form_view_id integer, express_checkout_form_view_id integer, color integer, module_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, pre_msg jsonb, pending_msg jsonb, auth_msg jsonb, done_msg jsonb, cancel_msg jsonb, is_published boolean, allow_tokenization boolean, capture_manually boolean, allow_express_checkout boolean, create_date timestamp, write_date timestamp);
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_pkey PRIMARY KEY (id);
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_express_checkout_form_view_id_fkey FOREIGN KEY (express_checkout_form_view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_inline_form_view_id_fkey FOREIGN KEY (inline_form_view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_redirect_form_view_id_fkey FOREIGN KEY (redirect_form_view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_token_inline_form_view_id_fkey FOREIGN KEY (token_inline_form_view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_provider ADD CONSTRAINT payment_provider_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE SET NULL;
CREATE TABLE payment_provider_onboarding_wizard (id integer NOT NULL, create_uid integer, write_uid integer, manual_post_msg text, create_date timestamp, write_date timestamp);
ALTER TABLE payment_provider_onboarding_wizard ADD CONSTRAINT payment_provider_onboarding_wizard_pkey PRIMARY KEY (id);
ALTER TABLE payment_provider_onboarding_wizard ADD CONSTRAINT payment_provider_onboarding_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_provider_onboarding_wizard ADD CONSTRAINT payment_provider_onboarding_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE payment_refund_wizard (id integer NOT NULL, payment_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE payment_refund_wizard ADD CONSTRAINT payment_refund_wizard_pkey PRIMARY KEY (id);
ALTER TABLE payment_refund_wizard ADD CONSTRAINT payment_refund_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_refund_wizard ADD CONSTRAINT payment_refund_wizard_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE payment_refund_wizard ADD CONSTRAINT payment_refund_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE payment_token (id integer NOT NULL, provider_id integer NOT NULL, company_id integer, payment_method_id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE payment_token ADD CONSTRAINT payment_token_pkey PRIMARY KEY (id);
ALTER TABLE payment_token ADD CONSTRAINT payment_token_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_token ADD CONSTRAINT payment_token_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE payment_token ADD CONSTRAINT payment_token_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES payment_method (id) ON DELETE RESTRICT;
ALTER TABLE payment_token ADD CONSTRAINT payment_token_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES payment_provider (id) ON DELETE RESTRICT;
ALTER TABLE payment_token ADD CONSTRAINT payment_token_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_token ADD CONSTRAINT payment_token_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE payment_transaction (id integer NOT NULL, provider_id integer NOT NULL, company_id integer, payment_method_id integer NOT NULL, currency_id integer NOT NULL, token_id integer, source_transaction_id integer, partner_id integer NOT NULL, partner_state_id integer, partner_country_id integer, create_uid integer, write_uid integer, state_message text, is_post_processed boolean, tokenize boolean, last_state_change timestamp, create_date timestamp, write_date timestamp, payment_id integer);
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_pkey PRIMARY KEY (id);
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_reference_uniq UNIQUE (reference);
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_partner_country_id_fkey FOREIGN KEY (partner_country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_partner_state_id_fkey FOREIGN KEY (partner_state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_payment_id_fkey FOREIGN KEY (payment_id) REFERENCES account_payment (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_payment_method_id_fkey FOREIGN KEY (payment_method_id) REFERENCES payment_method (id) ON DELETE RESTRICT;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_provider_id_fkey FOREIGN KEY (provider_id) REFERENCES payment_provider (id) ON DELETE RESTRICT;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_source_transaction_id_fkey FOREIGN KEY (source_transaction_id) REFERENCES payment_transaction (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_token_id_fkey FOREIGN KEY (token_id) REFERENCES payment_token (id) ON DELETE RESTRICT;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE payment_transaction ADD CONSTRAINT payment_transaction_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE phone_blacklist (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE phone_blacklist ADD CONSTRAINT phone_blacklist_pkey PRIMARY KEY (id);
ALTER TABLE phone_blacklist ADD CONSTRAINT phone_blacklist_unique_number UNIQUE (number);
ALTER TABLE phone_blacklist ADD CONSTRAINT phone_blacklist_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE phone_blacklist ADD CONSTRAINT phone_blacklist_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE phone_blacklist_remove (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE phone_blacklist_remove ADD CONSTRAINT phone_blacklist_remove_pkey PRIMARY KEY (id);
ALTER TABLE phone_blacklist_remove ADD CONSTRAINT phone_blacklist_remove_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE phone_blacklist_remove ADD CONSTRAINT phone_blacklist_remove_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE portal_share (id integer NOT NULL, res_id integer NOT NULL, create_uid integer, write_uid integer, note text, create_date timestamp, write_date timestamp);
ALTER TABLE portal_share ADD CONSTRAINT portal_share_pkey PRIMARY KEY (id);
ALTER TABLE portal_share ADD CONSTRAINT portal_share_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE portal_share ADD CONSTRAINT portal_share_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE portal_share_res_partner_rel (portal_share_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE portal_share_res_partner_rel ADD CONSTRAINT portal_share_res_partner_rel_pkey PRIMARY KEY (portal_share_id, res_partner_id);
ALTER TABLE portal_share_res_partner_rel ADD CONSTRAINT portal_share_res_partner_rel_portal_share_id_fkey FOREIGN KEY (portal_share_id) REFERENCES portal_share (id) ON DELETE CASCADE;
ALTER TABLE portal_share_res_partner_rel ADD CONSTRAINT portal_share_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE portal_wizard (id integer NOT NULL, create_uid integer, write_uid integer, welcome_message text, create_date timestamp, write_date timestamp);
ALTER TABLE portal_wizard ADD CONSTRAINT portal_wizard_pkey PRIMARY KEY (id);
ALTER TABLE portal_wizard ADD CONSTRAINT portal_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE portal_wizard ADD CONSTRAINT portal_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE portal_wizard_res_partner_rel (portal_wizard_id integer NOT NULL, res_partner_id integer NOT NULL);
ALTER TABLE portal_wizard_res_partner_rel ADD CONSTRAINT portal_wizard_res_partner_rel_pkey PRIMARY KEY (portal_wizard_id, res_partner_id);
ALTER TABLE portal_wizard_res_partner_rel ADD CONSTRAINT portal_wizard_res_partner_rel_portal_wizard_id_fkey FOREIGN KEY (portal_wizard_id) REFERENCES portal_wizard (id) ON DELETE CASCADE;
ALTER TABLE portal_wizard_res_partner_rel ADD CONSTRAINT portal_wizard_res_partner_rel_res_partner_id_fkey FOREIGN KEY (res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE portal_wizard_user (id integer NOT NULL, wizard_id integer NOT NULL, partner_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE portal_wizard_user ADD CONSTRAINT portal_wizard_user_pkey PRIMARY KEY (id);
ALTER TABLE portal_wizard_user ADD CONSTRAINT portal_wizard_user_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE portal_wizard_user ADD CONSTRAINT portal_wizard_user_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE portal_wizard_user ADD CONSTRAINT portal_wizard_user_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES portal_wizard (id) ON DELETE CASCADE;
ALTER TABLE portal_wizard_user ADD CONSTRAINT portal_wizard_user_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE print_prenumbered_checks (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE print_prenumbered_checks ADD CONSTRAINT print_prenumbered_checks_pkey PRIMARY KEY (id);
ALTER TABLE print_prenumbered_checks ADD CONSTRAINT print_prenumbered_checks_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE print_prenumbered_checks ADD CONSTRAINT print_prenumbered_checks_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE privacy_log (id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, execution_details text, records_description text, additional_note text, date timestamp NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE privacy_log ADD CONSTRAINT privacy_log_pkey PRIMARY KEY (id);
ALTER TABLE privacy_log ADD CONSTRAINT privacy_log_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE privacy_log ADD CONSTRAINT privacy_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE RESTRICT;
ALTER TABLE privacy_log ADD CONSTRAINT privacy_log_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE privacy_lookup_wizard (id integer NOT NULL, log_id integer, create_uid integer, write_uid integer, execution_details text, create_date timestamp, write_date timestamp);
ALTER TABLE privacy_lookup_wizard ADD CONSTRAINT privacy_lookup_wizard_pkey PRIMARY KEY (id);
ALTER TABLE privacy_lookup_wizard ADD CONSTRAINT privacy_lookup_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE privacy_lookup_wizard ADD CONSTRAINT privacy_lookup_wizard_log_id_fkey FOREIGN KEY (log_id) REFERENCES privacy_log (id) ON DELETE SET NULL;
ALTER TABLE privacy_lookup_wizard ADD CONSTRAINT privacy_lookup_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE privacy_lookup_wizard_line (id integer NOT NULL, wizard_id integer, res_id integer NOT NULL, res_model_id integer, create_uid integer, write_uid integer, has_active boolean, is_active boolean, is_unlinked boolean, create_date timestamp, write_date timestamp);
ALTER TABLE privacy_lookup_wizard_line ADD CONSTRAINT privacy_lookup_wizard_line_pkey PRIMARY KEY (id);
ALTER TABLE privacy_lookup_wizard_line ADD CONSTRAINT privacy_lookup_wizard_line_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE privacy_lookup_wizard_line ADD CONSTRAINT privacy_lookup_wizard_line_wizard_id_fkey FOREIGN KEY (wizard_id) REFERENCES privacy_lookup_wizard (id) ON DELETE SET NULL;
ALTER TABLE privacy_lookup_wizard_line ADD CONSTRAINT privacy_lookup_wizard_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE privacy_lookup_wizard_line ADD CONSTRAINT privacy_lookup_wizard_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_attr_exclusion_value_ids_rel (product_template_attribute_exclusion_id integer NOT NULL, product_template_attribute_value_id integer NOT NULL);
ALTER TABLE product_attr_exclusion_value_ids_rel ADD CONSTRAINT product_attr_exclusion_value_ids_rel_pkey PRIMARY KEY (product_template_attribute_exclusion_id, product_template_attribute_value_id);
ALTER TABLE product_attr_exclusion_value_ids_rel ADD CONSTRAINT product_attr_exclusion_value__product_template_attribute_v_fkey FOREIGN KEY (product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE CASCADE;
ALTER TABLE product_attr_exclusion_value_ids_rel ADD CONSTRAINT product_attr_exclusion_value__product_template_attribute_e_fkey FOREIGN KEY (product_template_attribute_exclusion_id) REFERENCES product_template_attribute_exclusion (id) ON DELETE CASCADE;
CREATE TABLE product_attribute (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE product_attribute ADD CONSTRAINT product_attribute_pkey PRIMARY KEY (id);
ALTER TABLE product_attribute ADD CONSTRAINT product_attribute_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_attribute ADD CONSTRAINT product_attribute_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_attribute_custom_value (id integer NOT NULL, custom_product_template_attribute_value_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, sale_order_line_id integer);
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_value_pkey PRIMARY KEY (id);
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_value_sol_custom_value_unique UNIQUE (custom_product_template_attribute_value_id, sale_order_line_id);
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_valu_custom_product_template_attr_fkey FOREIGN KEY (custom_product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE RESTRICT;
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_value_sale_order_line_id_fkey FOREIGN KEY (sale_order_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
ALTER TABLE product_attribute_custom_value ADD CONSTRAINT product_attribute_custom_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_attribute_product_template_rel (product_attribute_id integer NOT NULL, product_template_id integer NOT NULL);
ALTER TABLE product_attribute_product_template_rel ADD CONSTRAINT product_attribute_product_template_rel_pkey PRIMARY KEY (product_attribute_id, product_template_id);
ALTER TABLE product_attribute_product_template_rel ADD CONSTRAINT product_attribute_product_template_re_product_attribute_id_fkey FOREIGN KEY (product_attribute_id) REFERENCES product_attribute (id) ON DELETE CASCADE;
ALTER TABLE product_attribute_product_template_rel ADD CONSTRAINT product_attribute_product_template_rel_product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE product_attribute_value (id integer NOT NULL, sequence integer, attribute_id integer NOT NULL, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, is_custom boolean, active boolean, create_date timestamp, write_date timestamp, default_extra_price double precision);
ALTER TABLE product_attribute_value ADD CONSTRAINT product_attribute_value_pkey PRIMARY KEY (id);
ALTER TABLE product_attribute_value ADD CONSTRAINT product_attribute_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_attribute_value ADD CONSTRAINT product_attribute_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_attribute_value ADD CONSTRAINT product_attribute_value_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES product_attribute (id) ON DELETE CASCADE;
CREATE TABLE product_attribute_value_product_template_attribute_line_rel (product_attribute_value_id integer NOT NULL, product_template_attribute_line_id integer NOT NULL);
ALTER TABLE product_attribute_value_product_template_attribute_line_rel ADD CONSTRAINT product_attribute_value_product_template_attribute_line_re_pkey PRIMARY KEY (product_attribute_value_id, product_template_attribute_line_id);
ALTER TABLE product_attribute_value_product_template_attribute_line_rel ADD CONSTRAINT product_attribute_value_produ_product_template_attribute_l_fkey FOREIGN KEY (product_template_attribute_line_id) REFERENCES product_template_attribute_line (id) ON DELETE CASCADE;
ALTER TABLE product_attribute_value_product_template_attribute_line_rel ADD CONSTRAINT product_attribute_value_product_product_attribute_value_id_fkey FOREIGN KEY (product_attribute_value_id) REFERENCES product_attribute_value (id) ON DELETE RESTRICT;
CREATE TABLE product_avatax_category (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE product_avatax_category ADD CONSTRAINT product_avatax_category_pkey PRIMARY KEY (id);
ALTER TABLE product_avatax_category ADD CONSTRAINT product_avatax_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_avatax_category ADD CONSTRAINT product_avatax_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_category (id integer NOT NULL, parent_id integer, create_uid integer, write_uid integer, product_properties_definition jsonb, create_date timestamp, write_date timestamp, property_account_income_categ_id jsonb, property_account_expense_categ_id jsonb, avatax_category_id integer, property_account_downpayment_categ_id jsonb);
ALTER TABLE product_category ADD CONSTRAINT product_category_pkey PRIMARY KEY (id);
ALTER TABLE product_category ADD CONSTRAINT product_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_category ADD CONSTRAINT product_category_avatax_category_id_fkey FOREIGN KEY (avatax_category_id) REFERENCES product_avatax_category (id) ON DELETE SET NULL;
ALTER TABLE product_category ADD CONSTRAINT product_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_category ADD CONSTRAINT product_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES product_category (id) ON DELETE CASCADE;
CREATE TABLE product_combo (id integer NOT NULL, sequence integer, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE product_combo ADD CONSTRAINT product_combo_pkey PRIMARY KEY (id);
ALTER TABLE product_combo ADD CONSTRAINT product_combo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_combo ADD CONSTRAINT product_combo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_combo ADD CONSTRAINT product_combo_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE product_combo_item (id integer NOT NULL, company_id integer, combo_id integer NOT NULL, product_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_pkey PRIMARY KEY (id);
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_combo_id_fkey FOREIGN KEY (combo_id) REFERENCES product_combo (id) ON DELETE CASCADE;
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE RESTRICT;
ALTER TABLE product_combo_item ADD CONSTRAINT product_combo_item_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_combo_product_template_rel (product_template_id integer NOT NULL, product_combo_id integer NOT NULL);
ALTER TABLE product_combo_product_template_rel ADD CONSTRAINT product_combo_product_template_rel_pkey PRIMARY KEY (product_template_id, product_combo_id);
ALTER TABLE product_combo_product_template_rel ADD CONSTRAINT product_combo_product_template_rel_product_combo_id_fkey FOREIGN KEY (product_combo_id) REFERENCES product_combo (id) ON DELETE CASCADE;
ALTER TABLE product_combo_product_template_rel ADD CONSTRAINT product_combo_product_template_rel_product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE product_document (id integer NOT NULL, ir_attachment_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE product_document ADD CONSTRAINT product_document_pkey PRIMARY KEY (id);
ALTER TABLE product_document ADD CONSTRAINT product_document_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_document ADD CONSTRAINT product_document_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_document ADD CONSTRAINT product_document_ir_attachment_id_fkey FOREIGN KEY (ir_attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
CREATE TABLE product_document_sale_pdf_form_field_rel (product_document_id integer NOT NULL, sale_pdf_form_field_id integer NOT NULL);
ALTER TABLE product_document_sale_pdf_form_field_rel ADD CONSTRAINT product_document_sale_pdf_form_field_rel_pkey PRIMARY KEY (product_document_id, sale_pdf_form_field_id);
ALTER TABLE product_document_sale_pdf_form_field_rel ADD CONSTRAINT product_document_sale_pdf_form_fiel_sale_pdf_form_field_id_fkey FOREIGN KEY (sale_pdf_form_field_id) REFERENCES sale_pdf_form_field (id) ON DELETE CASCADE;
ALTER TABLE product_document_sale_pdf_form_field_rel ADD CONSTRAINT product_document_sale_pdf_form_field_r_product_document_id_fkey FOREIGN KEY (product_document_id) REFERENCES product_document (id) ON DELETE CASCADE;
CREATE TABLE product_label_layout (id integer NOT NULL, custom_quantity integer NOT NULL, pricelist_id integer, create_uid integer, write_uid integer, extra_html text, create_date timestamp, write_date timestamp);
ALTER TABLE product_label_layout ADD CONSTRAINT product_label_layout_pkey PRIMARY KEY (id);
ALTER TABLE product_label_layout ADD CONSTRAINT product_label_layout_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_label_layout ADD CONSTRAINT product_label_layout_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist (id) ON DELETE SET NULL;
ALTER TABLE product_label_layout ADD CONSTRAINT product_label_layout_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_label_layout_product_product_rel (product_label_layout_id integer NOT NULL, product_product_id integer NOT NULL);
ALTER TABLE product_label_layout_product_product_rel ADD CONSTRAINT product_label_layout_product_product_rel_pkey PRIMARY KEY (product_label_layout_id, product_product_id);
ALTER TABLE product_label_layout_product_product_rel ADD CONSTRAINT product_label_layout_product_product_re_product_product_id_fkey FOREIGN KEY (product_product_id) REFERENCES product_product (id) ON DELETE CASCADE;
ALTER TABLE product_label_layout_product_product_rel ADD CONSTRAINT product_label_layout_product_produ_product_label_layout_id_fkey FOREIGN KEY (product_label_layout_id) REFERENCES product_label_layout (id) ON DELETE CASCADE;
CREATE TABLE product_label_layout_product_template_rel (product_label_layout_id integer NOT NULL, product_template_id integer NOT NULL);
ALTER TABLE product_label_layout_product_template_rel ADD CONSTRAINT product_label_layout_product_template_rel_pkey PRIMARY KEY (product_label_layout_id, product_template_id);
ALTER TABLE product_label_layout_product_template_rel ADD CONSTRAINT product_label_layout_product_templ_product_label_layout_id_fkey FOREIGN KEY (product_label_layout_id) REFERENCES product_label_layout (id) ON DELETE CASCADE;
ALTER TABLE product_label_layout_product_template_rel ADD CONSTRAINT product_label_layout_product_template__product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE product_optional_rel (src_id integer NOT NULL, dest_id integer NOT NULL);
ALTER TABLE product_optional_rel ADD CONSTRAINT product_optional_rel_pkey PRIMARY KEY (src_id, dest_id);
ALTER TABLE product_optional_rel ADD CONSTRAINT product_optional_rel_dest_id_fkey FOREIGN KEY (dest_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_optional_rel ADD CONSTRAINT product_optional_rel_src_id_fkey FOREIGN KEY (src_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE product_packaging (id integer NOT NULL, sequence integer, product_id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, sales boolean);
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_pkey PRIMARY KEY (id);
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_barcode_uniq UNIQUE (barcode);
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE CASCADE;
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_packaging ADD CONSTRAINT product_packaging_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE product_pricelist (id integer NOT NULL, sequence integer, currency_id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE product_pricelist ADD CONSTRAINT product_pricelist_pkey PRIMARY KEY (id);
ALTER TABLE product_pricelist ADD CONSTRAINT product_pricelist_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE product_pricelist ADD CONSTRAINT product_pricelist_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist ADD CONSTRAINT product_pricelist_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist ADD CONSTRAINT product_pricelist_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_pricelist_item (id integer NOT NULL, pricelist_id integer NOT NULL, company_id integer, currency_id integer, categ_id integer, product_tmpl_id integer, product_id integer, base_pricelist_id integer, create_uid integer, write_uid integer, date_start timestamp, date_end timestamp, create_date timestamp, write_date timestamp, percent_price double precision);
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_pkey PRIMARY KEY (id);
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category (id) ON DELETE CASCADE;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist (id) ON DELETE CASCADE;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE CASCADE;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_pricelist_item ADD CONSTRAINT product_pricelist_item_base_pricelist_id_fkey FOREIGN KEY (base_pricelist_id) REFERENCES product_pricelist (id) ON DELETE SET NULL;
CREATE TABLE product_product (id integer NOT NULL, product_tmpl_id integer NOT NULL, create_uid integer, write_uid integer, standard_price jsonb, active boolean, can_image_variant_1024_be_zoomed boolean, write_date timestamp, create_date timestamp, avatax_category_id integer);
ALTER TABLE product_product ADD CONSTRAINT product_product_pkey PRIMARY KEY (id);
ALTER TABLE product_product ADD CONSTRAINT product_product_avatax_category_id_fkey FOREIGN KEY (avatax_category_id) REFERENCES product_avatax_category (id) ON DELETE SET NULL;
ALTER TABLE product_product ADD CONSTRAINT product_product_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_product ADD CONSTRAINT product_product_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_product ADD CONSTRAINT product_product_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_supplier_taxes_rel (prod_id integer NOT NULL, tax_id integer NOT NULL);
ALTER TABLE product_supplier_taxes_rel ADD CONSTRAINT product_supplier_taxes_rel_pkey PRIMARY KEY (prod_id, tax_id);
ALTER TABLE product_supplier_taxes_rel ADD CONSTRAINT product_supplier_taxes_rel_prod_id_fkey FOREIGN KEY (prod_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_supplier_taxes_rel ADD CONSTRAINT product_supplier_taxes_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE product_supplierinfo (id integer NOT NULL, partner_id integer NOT NULL, sequence integer, company_id integer, currency_id integer NOT NULL, product_id integer, product_tmpl_id integer, delay integer NOT NULL, create_uid integer, write_uid integer, date_start date, date_end date, create_date timestamp, write_date timestamp);
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_pkey PRIMARY KEY (id);
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_supplierinfo ADD CONSTRAINT product_supplierinfo_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE SET NULL;
CREATE TABLE product_tag (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE product_tag ADD CONSTRAINT product_tag_pkey PRIMARY KEY (id);
ALTER TABLE product_tag ADD CONSTRAINT product_tag_name_uniq UNIQUE (name);
ALTER TABLE product_tag ADD CONSTRAINT product_tag_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_tag ADD CONSTRAINT product_tag_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_tag_product_product_rel (product_product_id integer NOT NULL, product_tag_id integer NOT NULL);
ALTER TABLE product_tag_product_product_rel ADD CONSTRAINT product_tag_product_product_rel_pkey PRIMARY KEY (product_product_id, product_tag_id);
ALTER TABLE product_tag_product_product_rel ADD CONSTRAINT product_tag_product_product_rel_product_tag_id_fkey FOREIGN KEY (product_tag_id) REFERENCES product_tag (id) ON DELETE CASCADE;
ALTER TABLE product_tag_product_product_rel ADD CONSTRAINT product_tag_product_product_rel_product_product_id_fkey FOREIGN KEY (product_product_id) REFERENCES product_product (id) ON DELETE CASCADE;
CREATE TABLE product_tag_product_template_rel (product_template_id integer NOT NULL, product_tag_id integer NOT NULL);
ALTER TABLE product_tag_product_template_rel ADD CONSTRAINT product_tag_product_template_rel_pkey PRIMARY KEY (product_template_id, product_tag_id);
ALTER TABLE product_tag_product_template_rel ADD CONSTRAINT product_tag_product_template_rel_product_tag_id_fkey FOREIGN KEY (product_tag_id) REFERENCES product_tag (id) ON DELETE CASCADE;
ALTER TABLE product_tag_product_template_rel ADD CONSTRAINT product_tag_product_template_rel_product_template_id_fkey FOREIGN KEY (product_template_id) REFERENCES product_template (id) ON DELETE CASCADE;
CREATE TABLE product_taxes_rel (prod_id integer NOT NULL, tax_id integer NOT NULL);
ALTER TABLE product_taxes_rel ADD CONSTRAINT product_taxes_rel_pkey PRIMARY KEY (prod_id, tax_id);
ALTER TABLE product_taxes_rel ADD CONSTRAINT product_taxes_rel_prod_id_fkey FOREIGN KEY (prod_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_taxes_rel ADD CONSTRAINT product_taxes_rel_tax_id_fkey FOREIGN KEY (tax_id) REFERENCES account_tax (id) ON DELETE CASCADE;
CREATE TABLE product_template (id integer NOT NULL, sequence integer, categ_id integer NOT NULL, uom_id integer NOT NULL, uom_po_id integer NOT NULL, company_id integer, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, description jsonb, description_purchase jsonb, description_sale jsonb, product_properties jsonb, sale_ok boolean, purchase_ok boolean, active boolean, can_image_1024_be_zoomed boolean, has_configurable_attributes boolean, is_favorite boolean, create_date timestamp, write_date timestamp, property_account_income_id jsonb, property_account_expense_id jsonb, avatax_category_id integer, sale_line_warn_msg text);
ALTER TABLE product_template ADD CONSTRAINT product_template_pkey PRIMARY KEY (id);
ALTER TABLE product_template ADD CONSTRAINT product_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template ADD CONSTRAINT product_template_uom_po_id_fkey FOREIGN KEY (uom_po_id) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE product_template ADD CONSTRAINT product_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template ADD CONSTRAINT product_template_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE product_template ADD CONSTRAINT product_template_avatax_category_id_fkey FOREIGN KEY (avatax_category_id) REFERENCES product_avatax_category (id) ON DELETE SET NULL;
ALTER TABLE product_template ADD CONSTRAINT product_template_categ_id_fkey FOREIGN KEY (categ_id) REFERENCES product_category (id) ON DELETE RESTRICT;
ALTER TABLE product_template ADD CONSTRAINT product_template_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE product_template_attribute_exclusion (id integer NOT NULL, product_template_attribute_value_id integer, product_tmpl_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE product_template_attribute_exclusion ADD CONSTRAINT product_template_attribute_exclusion_pkey PRIMARY KEY (id);
ALTER TABLE product_template_attribute_exclusion ADD CONSTRAINT product_template_attribute_ex_product_template_attribute_v_fkey FOREIGN KEY (product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_exclusion ADD CONSTRAINT product_template_attribute_exclusion_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_exclusion ADD CONSTRAINT product_template_attribute_exclusion_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_exclusion ADD CONSTRAINT product_template_attribute_exclusion_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_template_attribute_line (id integer NOT NULL, product_tmpl_id integer NOT NULL, sequence integer, attribute_id integer NOT NULL, value_count integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE product_template_attribute_line ADD CONSTRAINT product_template_attribute_line_pkey PRIMARY KEY (id);
ALTER TABLE product_template_attribute_line ADD CONSTRAINT product_template_attribute_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_line ADD CONSTRAINT product_template_attribute_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_line ADD CONSTRAINT product_template_attribute_line_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_line ADD CONSTRAINT product_template_attribute_line_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES product_attribute (id) ON DELETE RESTRICT;
CREATE TABLE product_template_attribute_value (id integer NOT NULL, product_attribute_value_id integer NOT NULL, attribute_line_id integer NOT NULL, product_tmpl_id integer, attribute_id integer, color integer, create_uid integer, write_uid integer, ptav_active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_pkey PRIMARY KEY (id);
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_attribute_value_unique UNIQUE (attribute_line_id, product_attribute_value_id);
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_valu_product_attribute_value_id_fkey FOREIGN KEY (product_attribute_value_id) REFERENCES product_attribute_value (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_attribute_id_fkey FOREIGN KEY (attribute_id) REFERENCES product_attribute (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_attribute_line_id_fkey FOREIGN KEY (attribute_line_id) REFERENCES product_template_attribute_line (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_product_tmpl_id_fkey FOREIGN KEY (product_tmpl_id) REFERENCES product_template (id) ON DELETE SET NULL;
ALTER TABLE product_template_attribute_value ADD CONSTRAINT product_template_attribute_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE product_template_attribute_value_sale_order_line_rel (sale_order_line_id integer NOT NULL, product_template_attribute_value_id integer NOT NULL);
ALTER TABLE product_template_attribute_value_sale_order_line_rel ADD CONSTRAINT product_template_attribute_value_sale_order_line_rel_pkey PRIMARY KEY (sale_order_line_id, product_template_attribute_value_id);
ALTER TABLE product_template_attribute_value_sale_order_line_rel ADD CONSTRAINT product_template_attribute_value_sale_o_sale_order_line_id_fkey FOREIGN KEY (sale_order_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
ALTER TABLE product_template_attribute_value_sale_order_line_rel ADD CONSTRAINT product_template_attribute_va_product_template_attribute_v_fkey FOREIGN KEY (product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE RESTRICT;
CREATE TABLE product_variant_combination (product_product_id integer NOT NULL, product_template_attribute_value_id integer NOT NULL);
ALTER TABLE product_variant_combination ADD CONSTRAINT product_variant_combination_pkey PRIMARY KEY (product_product_id, product_template_attribute_value_id);
ALTER TABLE product_variant_combination ADD CONSTRAINT product_variant_combination_product_product_id_fkey FOREIGN KEY (product_product_id) REFERENCES product_product (id) ON DELETE CASCADE;
ALTER TABLE product_variant_combination ADD CONSTRAINT product_variant_combination_product_template_attribute_val_fkey FOREIGN KEY (product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE RESTRICT;
CREATE TABLE queue_job (id integer NOT NULL, user_id integer, company_id integer, priority integer, retry integer, max_retries integer, job_function_id integer, worker_pid integer, records jsonb, args jsonb, kwargs jsonb, dependencies text, exc_info text, result text, date_created timestamp, date_started timestamp, date_enqueued timestamp, date_done timestamp, date_cancelled timestamp, eta timestamp, exec_time double precision);
ALTER TABLE queue_job ADD CONSTRAINT queue_job_pkey PRIMARY KEY (id);
ALTER TABLE queue_job ADD CONSTRAINT queue_job_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE queue_job ADD CONSTRAINT queue_job_job_function_id_fkey FOREIGN KEY (job_function_id) REFERENCES queue_job_function (id) ON DELETE SET NULL;
ALTER TABLE queue_job ADD CONSTRAINT queue_job_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE queue_job_channel (id integer NOT NULL, parent_id integer, removal_interval integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE queue_job_channel ADD CONSTRAINT queue_job_channel_pkey PRIMARY KEY (id);
ALTER TABLE queue_job_channel ADD CONSTRAINT queue_job_channel_name_uniq UNIQUE (complete_name);
ALTER TABLE queue_job_channel ADD CONSTRAINT queue_job_channel_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES queue_job_channel (id) ON DELETE RESTRICT;
ALTER TABLE queue_job_channel ADD CONSTRAINT queue_job_channel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE queue_job_channel ADD CONSTRAINT queue_job_channel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE queue_job_function (id integer NOT NULL, model_id integer, channel_id integer NOT NULL, retry_pattern jsonb, related_action jsonb);
ALTER TABLE queue_job_function ADD CONSTRAINT queue_job_function_pkey PRIMARY KEY (id);
ALTER TABLE queue_job_function ADD CONSTRAINT queue_job_function_channel_id_fkey FOREIGN KEY (channel_id) REFERENCES queue_job_channel (id) ON DELETE RESTRICT;
ALTER TABLE queue_job_function ADD CONSTRAINT queue_job_function_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
CREATE TABLE queue_job_queue_jobs_to_cancelled_rel (queue_jobs_to_cancelled_id integer NOT NULL, queue_job_id integer NOT NULL);
ALTER TABLE queue_job_queue_jobs_to_cancelled_rel ADD CONSTRAINT queue_job_queue_jobs_to_cancelled_rel_pkey PRIMARY KEY (queue_jobs_to_cancelled_id, queue_job_id);
ALTER TABLE queue_job_queue_jobs_to_cancelled_rel ADD CONSTRAINT queue_job_queue_jobs_to_cancell_queue_jobs_to_cancelled_id_fkey FOREIGN KEY (queue_jobs_to_cancelled_id) REFERENCES queue_jobs_to_cancelled (id) ON DELETE CASCADE;
ALTER TABLE queue_job_queue_jobs_to_cancelled_rel ADD CONSTRAINT queue_job_queue_jobs_to_cancelled_rel_queue_job_id_fkey FOREIGN KEY (queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE;
CREATE TABLE queue_job_queue_jobs_to_done_rel (queue_jobs_to_done_id integer NOT NULL, queue_job_id integer NOT NULL);
ALTER TABLE queue_job_queue_jobs_to_done_rel ADD CONSTRAINT queue_job_queue_jobs_to_done_rel_pkey PRIMARY KEY (queue_jobs_to_done_id, queue_job_id);
ALTER TABLE queue_job_queue_jobs_to_done_rel ADD CONSTRAINT queue_job_queue_jobs_to_done_rel_queue_job_id_fkey FOREIGN KEY (queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE;
ALTER TABLE queue_job_queue_jobs_to_done_rel ADD CONSTRAINT queue_job_queue_jobs_to_done_rel_queue_jobs_to_done_id_fkey FOREIGN KEY (queue_jobs_to_done_id) REFERENCES queue_jobs_to_done (id) ON DELETE CASCADE;
CREATE TABLE queue_job_queue_requeue_job_rel (queue_requeue_job_id integer NOT NULL, queue_job_id integer NOT NULL);
ALTER TABLE queue_job_queue_requeue_job_rel ADD CONSTRAINT queue_job_queue_requeue_job_rel_pkey PRIMARY KEY (queue_requeue_job_id, queue_job_id);
ALTER TABLE queue_job_queue_requeue_job_rel ADD CONSTRAINT queue_job_queue_requeue_job_rel_queue_job_id_fkey FOREIGN KEY (queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE;
ALTER TABLE queue_job_queue_requeue_job_rel ADD CONSTRAINT queue_job_queue_requeue_job_rel_queue_requeue_job_id_fkey FOREIGN KEY (queue_requeue_job_id) REFERENCES queue_requeue_job (id) ON DELETE CASCADE;
CREATE TABLE queue_jobs_to_cancelled (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE queue_jobs_to_cancelled ADD CONSTRAINT queue_jobs_to_cancelled_pkey PRIMARY KEY (id);
ALTER TABLE queue_jobs_to_cancelled ADD CONSTRAINT queue_jobs_to_cancelled_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE queue_jobs_to_cancelled ADD CONSTRAINT queue_jobs_to_cancelled_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE queue_jobs_to_done (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE queue_jobs_to_done ADD CONSTRAINT queue_jobs_to_done_pkey PRIMARY KEY (id);
ALTER TABLE queue_jobs_to_done ADD CONSTRAINT queue_jobs_to_done_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE queue_jobs_to_done ADD CONSTRAINT queue_jobs_to_done_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE queue_requeue_job (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE queue_requeue_job ADD CONSTRAINT queue_requeue_job_pkey PRIMARY KEY (id);
ALTER TABLE queue_requeue_job ADD CONSTRAINT queue_requeue_job_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE queue_requeue_job ADD CONSTRAINT queue_requeue_job_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE quotation_document (id integer NOT NULL, ir_attachment_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE quotation_document ADD CONSTRAINT quotation_document_pkey PRIMARY KEY (id);
ALTER TABLE quotation_document ADD CONSTRAINT quotation_document_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE quotation_document ADD CONSTRAINT quotation_document_ir_attachment_id_fkey FOREIGN KEY (ir_attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE quotation_document ADD CONSTRAINT quotation_document_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE quotation_document_sale_order_rel (sale_order_id integer NOT NULL, quotation_document_id integer NOT NULL);
ALTER TABLE quotation_document_sale_order_rel ADD CONSTRAINT quotation_document_sale_order_rel_pkey PRIMARY KEY (sale_order_id, quotation_document_id);
ALTER TABLE quotation_document_sale_order_rel ADD CONSTRAINT quotation_document_sale_order_rel_quotation_document_id_fkey FOREIGN KEY (quotation_document_id) REFERENCES quotation_document (id) ON DELETE CASCADE;
ALTER TABLE quotation_document_sale_order_rel ADD CONSTRAINT quotation_document_sale_order_rel_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
CREATE TABLE quotation_document_sale_pdf_form_field_rel (quotation_document_id integer NOT NULL, sale_pdf_form_field_id integer NOT NULL);
ALTER TABLE quotation_document_sale_pdf_form_field_rel ADD CONSTRAINT quotation_document_sale_pdf_form_field_rel_pkey PRIMARY KEY (quotation_document_id, sale_pdf_form_field_id);
ALTER TABLE quotation_document_sale_pdf_form_field_rel ADD CONSTRAINT quotation_document_sale_pdf_form_fi_sale_pdf_form_field_id_fkey FOREIGN KEY (sale_pdf_form_field_id) REFERENCES sale_pdf_form_field (id) ON DELETE CASCADE;
ALTER TABLE quotation_document_sale_pdf_form_field_rel ADD CONSTRAINT quotation_document_sale_pdf_form_fie_quotation_document_id_fkey FOREIGN KEY (quotation_document_id) REFERENCES quotation_document (id) ON DELETE CASCADE;
CREATE TABLE rating_rating (id integer NOT NULL, res_model_id integer, res_id integer NOT NULL, parent_res_model_id integer, parent_res_id integer, rated_partner_id integer, partner_id integer, message_id integer, create_uid integer, write_uid integer, feedback text, is_internal boolean, consumed boolean, create_date timestamp, write_date timestamp, rating double precision, publisher_id integer, publisher_comment text, publisher_datetime timestamp);
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_pkey PRIMARY KEY (id);
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_parent_res_model_id_fkey FOREIGN KEY (parent_res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_publisher_id_fkey FOREIGN KEY (publisher_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_rated_partner_id_fkey FOREIGN KEY (rated_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_res_model_id_fkey FOREIGN KEY (res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE rating_rating ADD CONSTRAINT rating_rating_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE rel_modules_langexport (wiz_id integer NOT NULL, module_id integer NOT NULL);
ALTER TABLE rel_modules_langexport ADD CONSTRAINT rel_modules_langexport_pkey PRIMARY KEY (wiz_id, module_id);
ALTER TABLE rel_modules_langexport ADD CONSTRAINT rel_modules_langexport_module_id_fkey FOREIGN KEY (module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE;
ALTER TABLE rel_modules_langexport ADD CONSTRAINT rel_modules_langexport_wiz_id_fkey FOREIGN KEY (wiz_id) REFERENCES base_language_export (id) ON DELETE CASCADE;
CREATE TABLE rel_server_actions (server_id integer NOT NULL, action_id integer NOT NULL);
ALTER TABLE rel_server_actions ADD CONSTRAINT rel_server_actions_pkey PRIMARY KEY (server_id, action_id);
ALTER TABLE rel_server_actions ADD CONSTRAINT rel_server_actions_server_id_fkey FOREIGN KEY (server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE;
ALTER TABLE rel_server_actions ADD CONSTRAINT rel_server_actions_action_id_fkey FOREIGN KEY (action_id) REFERENCES ir_act_server (id) ON DELETE CASCADE;
CREATE TABLE report_layout (id integer NOT NULL, view_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE report_layout ADD CONSTRAINT report_layout_pkey PRIMARY KEY (id);
ALTER TABLE report_layout ADD CONSTRAINT report_layout_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE report_layout ADD CONSTRAINT report_layout_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE report_layout ADD CONSTRAINT report_layout_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT;
CREATE TABLE report_paperformat (id integer NOT NULL, page_height integer, page_width integer, header_spacing integer, dpi integer NOT NULL, create_uid integer, write_uid integer, default boolean, header_line boolean, disable_shrinking boolean, css_margins boolean, create_date timestamp, write_date timestamp, margin_top double precision, margin_bottom double precision, margin_left double precision, margin_right double precision);
ALTER TABLE report_paperformat ADD CONSTRAINT report_paperformat_pkey PRIMARY KEY (id);
ALTER TABLE report_paperformat ADD CONSTRAINT report_paperformat_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE report_paperformat ADD CONSTRAINT report_paperformat_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_bank (id integer NOT NULL, state integer, country integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_bank ADD CONSTRAINT res_bank_pkey PRIMARY KEY (id);
ALTER TABLE res_bank ADD CONSTRAINT res_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_bank ADD CONSTRAINT res_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_bank ADD CONSTRAINT res_bank_state_fkey FOREIGN KEY (state) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE res_bank ADD CONSTRAINT res_bank_country_fkey FOREIGN KEY (country) REFERENCES res_country (id) ON DELETE SET NULL;
CREATE TABLE res_city (id integer NOT NULL, country_id integer NOT NULL, state_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp, county_id integer, region_id integer);
ALTER TABLE res_city ADD CONSTRAINT res_city_pkey PRIMARY KEY (id);
ALTER TABLE res_city ADD CONSTRAINT res_city_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE res_city ADD CONSTRAINT res_city_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_city ADD CONSTRAINT res_city_county_id_fkey FOREIGN KEY (county_id) REFERENCES res_county (id) ON DELETE SET NULL;
ALTER TABLE res_city ADD CONSTRAINT res_city_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_city ADD CONSTRAINT res_city_region_id_fkey FOREIGN KEY (region_id) REFERENCES res_region (id) ON DELETE SET NULL;
ALTER TABLE res_city ADD CONSTRAINT res_city_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE RESTRICT;
CREATE TABLE res_company (id integer NOT NULL, partner_id integer NOT NULL, currency_id integer NOT NULL, sequence integer, create_date timestamp, parent_id integer, paperformat_id integer, external_report_layout_id integer, create_uid integer, write_uid integer, report_header jsonb, report_footer jsonb, company_details jsonb, active boolean, uses_default_logo boolean, write_date timestamp, logo_web bytea, resource_calendar_id integer, alias_domain_id integer, description text, service_offered text, partner_gid integer, iap_enrich_auto_done boolean, snailmail_color boolean, snailmail_cover boolean, snailmail_duplex boolean, fiscalyear_last_day integer NOT NULL, transfer_account_id integer, default_cash_difference_income_account_id integer, default_cash_difference_expense_account_id integer, account_journal_suspense_account_id integer, account_journal_early_pay_discount_gain_account_id integer, account_journal_early_pay_discount_loss_account_id integer, account_sale_tax_id integer, account_purchase_tax_id integer, currency_exchange_journal_id integer, income_currency_exchange_account_id integer, expense_currency_exchange_account_id integer, incoterm_id integer, batch_payment_sequence_id integer, account_opening_move_id integer, account_default_pos_receivable_account_id integer, expense_accrual_account_id integer, revenue_accrual_account_id integer, automatic_entry_default_journal_id integer, account_fiscal_country_id integer, tax_cash_basis_journal_id integer, account_cash_basis_base_account_id integer, account_discount_income_allocation_id integer, account_discount_expense_allocation_id integer, fiscalyear_lock_date date, tax_lock_date date, sale_lock_date date, purchase_lock_date date, hard_lock_date date, account_opening_date date NOT NULL, invoice_terms jsonb, invoice_terms_html jsonb, expects_chart_of_accounts boolean, anglo_saxon_accounting boolean, qr_code boolean, display_invoice_amount_total_words boolean, display_invoice_tax_company_currency boolean, account_use_credit_limit boolean, tax_exigibility boolean, account_storno boolean, check_account_audit_trail boolean, autopost_bills boolean, signing_user integer, deferred_expense_journal_id integer, deferred_expense_account_id integer, deferred_revenue_journal_id integer, deferred_revenue_account_id integer, invoicing_switch_threshold date, predict_bill_product boolean, sign_invoice boolean, account_check_printing_date_label boolean, account_check_printing_multi_stub boolean, account_check_printing_margin_top double precision, account_check_printing_margin_left double precision, account_check_printing_margin_right double precision, currency_next_execution_date date, avalara_commit boolean, avalara_address_validation boolean, avalara_use_upc boolean, setting_account_avatax boolean, quotation_validity_days integer, sale_discount_product_id integer, portal_confirmation_sign boolean, portal_confirmation_pay boolean, prepayment_percent double precision, sale_order_template_id integer, extract_single_line_per_tax boolean);
ALTER TABLE res_company ADD CONSTRAINT res_company_pkey PRIMARY KEY (id);
ALTER TABLE res_company ADD CONSTRAINT res_company_name_uniq UNIQUE (name);
ALTER TABLE res_company ADD CONSTRAINT res_company_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE res_company ADD CONSTRAINT res_company_default_cash_difference_expense_account_id_fkey FOREIGN KEY (default_cash_difference_expense_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_default_cash_difference_income_account_id_fkey FOREIGN KEY (default_cash_difference_income_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_deferred_expense_account_id_fkey FOREIGN KEY (deferred_expense_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_deferred_expense_journal_id_fkey FOREIGN KEY (deferred_expense_journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_deferred_revenue_account_id_fkey FOREIGN KEY (deferred_revenue_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_deferred_revenue_journal_id_fkey FOREIGN KEY (deferred_revenue_journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_expense_accrual_account_id_fkey FOREIGN KEY (expense_accrual_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_expense_currency_exchange_account_id_fkey FOREIGN KEY (expense_currency_exchange_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_external_report_layout_id_fkey FOREIGN KEY (external_report_layout_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_income_currency_exchange_account_id_fkey FOREIGN KEY (income_currency_exchange_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_incoterm_id_fkey FOREIGN KEY (incoterm_id) REFERENCES account_incoterms (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_paperformat_id_fkey FOREIGN KEY (paperformat_id) REFERENCES report_paperformat (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE res_company ADD CONSTRAINT res_company_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE res_company ADD CONSTRAINT res_company_resource_calendar_id_fkey FOREIGN KEY (resource_calendar_id) REFERENCES resource_calendar (id) ON DELETE RESTRICT;
ALTER TABLE res_company ADD CONSTRAINT res_company_revenue_accrual_account_id_fkey FOREIGN KEY (revenue_accrual_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_sale_order_template_id_fkey FOREIGN KEY (sale_order_template_id) REFERENCES sale_order_template (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_signing_user_fkey FOREIGN KEY (signing_user) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_tax_cash_basis_journal_id_fkey FOREIGN KEY (tax_cash_basis_journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_transfer_account_id_fkey FOREIGN KEY (transfer_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_sale_discount_product_id_fkey FOREIGN KEY (sale_discount_product_id) REFERENCES product_product (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_cash_basis_base_account_id_fkey FOREIGN KEY (account_cash_basis_base_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_default_pos_receivable_account_id_fkey FOREIGN KEY (account_default_pos_receivable_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_discount_expense_allocation_id_fkey FOREIGN KEY (account_discount_expense_allocation_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_discount_income_allocation_id_fkey FOREIGN KEY (account_discount_income_allocation_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_fiscal_country_id_fkey FOREIGN KEY (account_fiscal_country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_journal_early_pay_discount_gain_accoun_fkey FOREIGN KEY (account_journal_early_pay_discount_gain_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_journal_early_pay_discount_loss_accoun_fkey FOREIGN KEY (account_journal_early_pay_discount_loss_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_journal_suspense_account_id_fkey FOREIGN KEY (account_journal_suspense_account_id) REFERENCES account_account (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_opening_move_id_fkey FOREIGN KEY (account_opening_move_id) REFERENCES account_move (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_purchase_tax_id_fkey FOREIGN KEY (account_purchase_tax_id) REFERENCES account_tax (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_account_sale_tax_id_fkey FOREIGN KEY (account_sale_tax_id) REFERENCES account_tax (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_alias_domain_id_fkey FOREIGN KEY (alias_domain_id) REFERENCES mail_alias_domain (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_automatic_entry_default_journal_id_fkey FOREIGN KEY (automatic_entry_default_journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_batch_payment_sequence_id_fkey FOREIGN KEY (batch_payment_sequence_id) REFERENCES ir_sequence (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_company ADD CONSTRAINT res_company_currency_exchange_journal_id_fkey FOREIGN KEY (currency_exchange_journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
CREATE TABLE res_company_users_rel (cid integer NOT NULL, user_id integer NOT NULL);
ALTER TABLE res_company_users_rel ADD CONSTRAINT res_company_users_rel_pkey PRIMARY KEY (cid, user_id);
ALTER TABLE res_company_users_rel ADD CONSTRAINT res_company_users_rel_cid_fkey FOREIGN KEY (cid) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE res_company_users_rel ADD CONSTRAINT res_company_users_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE res_config (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_config ADD CONSTRAINT res_config_pkey PRIMARY KEY (id);
ALTER TABLE res_config ADD CONSTRAINT res_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_config ADD CONSTRAINT res_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_config_settings (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, company_id integer NOT NULL, user_default_rights boolean, module_base_import boolean, module_google_calendar boolean, module_microsoft_calendar boolean, module_mail_plugin boolean, module_auth_oauth boolean, module_auth_ldap boolean, module_account_inter_company_rules boolean, module_voip boolean, module_web_unsplash boolean, module_sms boolean, module_partner_autocomplete boolean, module_base_geolocalize boolean, module_google_recaptcha boolean, module_website_cf_turnstile boolean, group_multi_currency boolean, show_effect boolean, module_product_images boolean, profiling_enabled_until timestamp, tenor_gif_limit integer, external_email_server_default boolean, module_google_gmail boolean, module_microsoft_outlook boolean, restrict_template_rendering boolean, use_twilio_rtc_servers boolean, auth_signup_template_user_id integer, auth_signup_reset_password boolean, disable_redirect_firebase_dynamic_link boolean, enable_ocn boolean, digest_id integer, digest_emails boolean, crm_auto_assignment_interval_number integer, group_use_lead boolean, group_use_recurring_revenues boolean, is_membership_multi boolean, crm_use_auto_assignment boolean, module_crm_iap_mine boolean, module_crm_iap_enrich boolean, module_website_crm_iap_reveal boolean, lead_mining_in_pipeline boolean, crm_auto_assignment_run_datetime timestamp, mass_mailing_mail_server_id integer, group_mass_mailing_campaign boolean, mass_mailing_outgoing_mail_server boolean, show_blacklist_buttons boolean, mass_mailing_reports boolean, mass_mailing_split_contact_name boolean, group_analytic_accounting boolean, group_uom boolean, group_product_variant boolean, module_loyalty boolean, group_stock_packaging boolean, group_product_pricelist boolean, module_account_accountant boolean, group_warning_account boolean, group_cash_rounding boolean, group_show_sale_receipts boolean, group_show_purchase_receipts boolean, module_account_budget boolean, module_account_payment boolean, module_account_reports boolean, module_account_check_printing boolean, module_account_batch_payment boolean, module_account_iso20022 boolean, module_account_sepa_direct_debit boolean, module_account_bank_statement_import_qif boolean, module_account_bank_statement_import_ofx boolean, module_account_bank_statement_import_csv boolean, module_account_bank_statement_import_camt boolean, module_currency_rate_live boolean, module_account_intrastat boolean, module_product_margin boolean, module_l10n_eu_oss boolean, module_account_extract boolean, module_account_invoice_extract boolean, module_account_bank_statement_extract boolean, module_snailmail_account boolean, module_account_peppol boolean, use_invoice_terms boolean, group_sale_delivery_address boolean, group_fiscal_year boolean, pay_invoices_online boolean, invoice_mail_template_id integer, group_auto_done_setting boolean, group_discount_per_so_line boolean, group_proforma_sales boolean, group_warning_sale boolean, automatic_invoice boolean, module_delivery boolean, module_delivery_bpost boolean, module_delivery_dhl boolean, module_delivery_easypost boolean, module_delivery_fedex boolean, module_delivery_sendcloud boolean, module_delivery_shiprocket boolean, module_delivery_ups boolean, module_delivery_usps boolean, module_delivery_starshipit boolean, module_product_email_template boolean, module_sale_amazon boolean, module_sale_loyalty boolean, module_sale_margin boolean, module_sale_product_matrix boolean, module_sale_pdf_quote_builder boolean, module_sale_commission boolean, group_sale_order_template boolean);
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_pkey PRIMARY KEY (id);
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_auth_signup_template_user_id_fkey FOREIGN KEY (auth_signup_template_user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_digest_id_fkey FOREIGN KEY (digest_id) REFERENCES digest_digest (id) ON DELETE SET NULL;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_invoice_mail_template_id_fkey FOREIGN KEY (invoice_mail_template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE res_config_settings ADD CONSTRAINT res_config_settings_mass_mailing_mail_server_id_fkey FOREIGN KEY (mass_mailing_mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL;
CREATE TABLE res_country (id integer NOT NULL, address_view_id integer, currency_id integer, phone_code integer, create_uid integer, write_uid integer, code varchar(2) NOT NULL, name jsonb NOT NULL, vat_label jsonb, address_format text, state_required boolean, zip_required boolean, create_date timestamp, write_date timestamp, enforce_cities boolean);
ALTER TABLE res_country ADD CONSTRAINT res_country_pkey PRIMARY KEY (id);
ALTER TABLE res_country ADD CONSTRAINT res_country_code_uniq UNIQUE (code);
ALTER TABLE res_country ADD CONSTRAINT res_country_name_uniq UNIQUE (name);
ALTER TABLE res_country ADD CONSTRAINT res_country_address_view_id_fkey FOREIGN KEY (address_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE res_country ADD CONSTRAINT res_country_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_country ADD CONSTRAINT res_country_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE res_country ADD CONSTRAINT res_country_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_country_group (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE res_country_group ADD CONSTRAINT res_country_group_pkey PRIMARY KEY (id);
ALTER TABLE res_country_group ADD CONSTRAINT res_country_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_country_group ADD CONSTRAINT res_country_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_country_group_pricelist_rel (pricelist_id integer NOT NULL, res_country_group_id integer NOT NULL);
ALTER TABLE res_country_group_pricelist_rel ADD CONSTRAINT res_country_group_pricelist_rel_pkey PRIMARY KEY (pricelist_id, res_country_group_id);
ALTER TABLE res_country_group_pricelist_rel ADD CONSTRAINT res_country_group_pricelist_rel_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist (id) ON DELETE CASCADE;
ALTER TABLE res_country_group_pricelist_rel ADD CONSTRAINT res_country_group_pricelist_rel_res_country_group_id_fkey FOREIGN KEY (res_country_group_id) REFERENCES res_country_group (id) ON DELETE CASCADE;
CREATE TABLE res_country_res_country_group_rel (res_country_id integer NOT NULL, res_country_group_id integer NOT NULL);
ALTER TABLE res_country_res_country_group_rel ADD CONSTRAINT res_country_res_country_group_rel_pkey PRIMARY KEY (res_country_id, res_country_group_id);
ALTER TABLE res_country_res_country_group_rel ADD CONSTRAINT res_country_res_country_group_rel_res_country_group_id_fkey FOREIGN KEY (res_country_group_id) REFERENCES res_country_group (id) ON DELETE CASCADE;
ALTER TABLE res_country_res_country_group_rel ADD CONSTRAINT res_country_res_country_group_rel_res_country_id_fkey FOREIGN KEY (res_country_id) REFERENCES res_country (id) ON DELETE CASCADE;
CREATE TABLE res_country_state (id integer NOT NULL, country_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_country_state ADD CONSTRAINT res_country_state_pkey PRIMARY KEY (id);
ALTER TABLE res_country_state ADD CONSTRAINT res_country_state_name_code_uniq UNIQUE (country_id, code);
ALTER TABLE res_country_state ADD CONSTRAINT res_country_state_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_country_state ADD CONSTRAINT res_country_state_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_country_state ADD CONSTRAINT res_country_state_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE RESTRICT;
CREATE TABLE res_county (id integer NOT NULL, region_id integer, state_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_county ADD CONSTRAINT res_county_pkey PRIMARY KEY (id);
ALTER TABLE res_county ADD CONSTRAINT res_county_region_id_fkey FOREIGN KEY (region_id) REFERENCES res_region (id) ON DELETE SET NULL;
ALTER TABLE res_county ADD CONSTRAINT res_county_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE res_county ADD CONSTRAINT res_county_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_county ADD CONSTRAINT res_county_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_currency (id integer NOT NULL, iso_numeric integer, decimal_places integer, create_uid integer, write_uid integer, currency_unit_label jsonb, currency_subunit_label jsonb, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_currency ADD CONSTRAINT res_currency_pkey PRIMARY KEY (id);
ALTER TABLE res_currency ADD CONSTRAINT res_currency_unique_name UNIQUE (name);
ALTER TABLE res_currency ADD CONSTRAINT res_currency_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_currency ADD CONSTRAINT res_currency_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_currency_rate (id integer NOT NULL, currency_id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, name date NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_pkey PRIMARY KEY (id);
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_unique_name_per_day UNIQUE (name, currency_id, company_id);
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE CASCADE;
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_currency_rate ADD CONSTRAINT res_currency_rate_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE res_device (id integer, user_id integer, create_uid integer, write_uid integer, revoked boolean, first_activity timestamp, last_activity timestamp, create_date timestamp, write_date timestamp);
CREATE TABLE res_device_log (id integer NOT NULL, user_id integer, create_uid integer, write_uid integer, revoked boolean, first_activity timestamp, last_activity timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE res_device_log ADD CONSTRAINT res_device_log_pkey PRIMARY KEY (id);
ALTER TABLE res_device_log ADD CONSTRAINT res_device_log_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_device_log ADD CONSTRAINT res_device_log_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_device_log ADD CONSTRAINT res_device_log_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_groups (id integer NOT NULL, name jsonb NOT NULL, category_id integer, color integer, create_uid integer, write_uid integer, comment jsonb, share boolean, create_date timestamp, write_date timestamp, api_key_duration double precision);
ALTER TABLE res_groups ADD CONSTRAINT res_groups_pkey PRIMARY KEY (id);
ALTER TABLE res_groups ADD CONSTRAINT res_groups_name_uniq UNIQUE (category_id, name);
ALTER TABLE res_groups ADD CONSTRAINT res_groups_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_groups ADD CONSTRAINT res_groups_category_id_fkey FOREIGN KEY (category_id) REFERENCES ir_module_category (id) ON DELETE SET NULL;
ALTER TABLE res_groups ADD CONSTRAINT res_groups_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_groups_implied_rel (gid integer NOT NULL, hid integer NOT NULL);
ALTER TABLE res_groups_implied_rel ADD CONSTRAINT res_groups_implied_rel_pkey PRIMARY KEY (gid, hid);
ALTER TABLE res_groups_implied_rel ADD CONSTRAINT res_groups_implied_rel_hid_fkey FOREIGN KEY (hid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE res_groups_implied_rel ADD CONSTRAINT res_groups_implied_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE res_groups_report_rel (uid integer NOT NULL, gid integer NOT NULL);
ALTER TABLE res_groups_report_rel ADD CONSTRAINT res_groups_report_rel_pkey PRIMARY KEY (uid, gid);
ALTER TABLE res_groups_report_rel ADD CONSTRAINT res_groups_report_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE res_groups_report_rel ADD CONSTRAINT res_groups_report_rel_uid_fkey FOREIGN KEY (uid) REFERENCES ir_act_report_xml (id) ON DELETE CASCADE;
CREATE TABLE res_groups_spreadsheet_dashboard_rel (spreadsheet_dashboard_id integer NOT NULL, res_groups_id integer NOT NULL);
ALTER TABLE res_groups_spreadsheet_dashboard_rel ADD CONSTRAINT res_groups_spreadsheet_dashboard_rel_pkey PRIMARY KEY (spreadsheet_dashboard_id, res_groups_id);
ALTER TABLE res_groups_spreadsheet_dashboard_rel ADD CONSTRAINT res_groups_spreadsheet_dashboard__spreadsheet_dashboard_id_fkey FOREIGN KEY (spreadsheet_dashboard_id) REFERENCES spreadsheet_dashboard (id) ON DELETE CASCADE;
ALTER TABLE res_groups_spreadsheet_dashboard_rel ADD CONSTRAINT res_groups_spreadsheet_dashboard_rel_res_groups_id_fkey FOREIGN KEY (res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE;
CREATE TABLE res_groups_users_rel (gid integer NOT NULL, uid integer NOT NULL);
ALTER TABLE res_groups_users_rel ADD CONSTRAINT res_groups_users_rel_pkey PRIMARY KEY (gid, uid);
ALTER TABLE res_groups_users_rel ADD CONSTRAINT res_groups_users_rel_gid_fkey FOREIGN KEY (gid) REFERENCES res_groups (id) ON DELETE CASCADE;
ALTER TABLE res_groups_users_rel ADD CONSTRAINT res_groups_users_rel_uid_fkey FOREIGN KEY (uid) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE res_lang (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_lang ADD CONSTRAINT res_lang_pkey PRIMARY KEY (id);
ALTER TABLE res_lang ADD CONSTRAINT res_lang_name_uniq UNIQUE (name);
ALTER TABLE res_lang ADD CONSTRAINT res_lang_url_code_uniq UNIQUE (url_code);
ALTER TABLE res_lang ADD CONSTRAINT res_lang_code_uniq UNIQUE (code);
ALTER TABLE res_lang ADD CONSTRAINT res_lang_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_lang ADD CONSTRAINT res_lang_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_lang_install_rel (language_wizard_id integer NOT NULL, lang_id integer NOT NULL);
ALTER TABLE res_lang_install_rel ADD CONSTRAINT res_lang_install_rel_pkey PRIMARY KEY (language_wizard_id, lang_id);
ALTER TABLE res_lang_install_rel ADD CONSTRAINT res_lang_install_rel_lang_id_fkey FOREIGN KEY (lang_id) REFERENCES res_lang (id) ON DELETE CASCADE;
ALTER TABLE res_lang_install_rel ADD CONSTRAINT res_lang_install_rel_language_wizard_id_fkey FOREIGN KEY (language_wizard_id) REFERENCES base_language_install (id) ON DELETE CASCADE;
CREATE TABLE res_partner (id integer NOT NULL, company_id integer, create_date timestamp, title integer, parent_id integer, user_id integer, state_id integer, country_id integer, industry_id integer, color integer, commercial_partner_id integer, create_uid integer, write_uid integer, barcode jsonb, comment text, active boolean, employee boolean, is_company boolean, partner_share boolean, write_date timestamp, message_bounce integer, calendar_last_notif_ack timestamp, city_id integer, partner_gid integer, specific_property_product_pricelist jsonb, invoice_template_pdf_report_id integer, supplier_rank integer, customer_rank integer, credit_limit jsonb, property_account_payable_id jsonb, property_account_receivable_id jsonb, property_account_position_id jsonb, property_payment_term_id jsonb, property_supplier_payment_term_id jsonb, trust jsonb, ignore_abnormal_invoice_date jsonb, ignore_abnormal_invoice_amount jsonb, invoice_sending_method jsonb, invoice_edi_format_store jsonb, property_outbound_payment_method_line_id jsonb, property_inbound_payment_method_line_id jsonb, invoice_warn_msg text, avalara_exemption_id jsonb, sale_warn_msg text);
ALTER TABLE res_partner ADD CONSTRAINT res_partner_pkey PRIMARY KEY (id);
ALTER TABLE res_partner ADD CONSTRAINT res_partner_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE RESTRICT;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_industry_id_fkey FOREIGN KEY (industry_id) REFERENCES res_partner_industry (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_invoice_template_pdf_report_id_fkey FOREIGN KEY (invoice_template_pdf_report_id) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE RESTRICT;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_title_fkey FOREIGN KEY (title) REFERENCES res_partner_title (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_city_id_fkey FOREIGN KEY (city_id) REFERENCES res_city (id) ON DELETE SET NULL;
ALTER TABLE res_partner ADD CONSTRAINT res_partner_commercial_partner_id_fkey FOREIGN KEY (commercial_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
CREATE TABLE res_partner_autocomplete_sync (id integer NOT NULL, partner_id integer, create_uid integer, write_uid integer, synched boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_partner_autocomplete_sync ADD CONSTRAINT res_partner_autocomplete_sync_pkey PRIMARY KEY (id);
ALTER TABLE res_partner_autocomplete_sync ADD CONSTRAINT res_partner_autocomplete_sync_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_autocomplete_sync ADD CONSTRAINT res_partner_autocomplete_sync_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_autocomplete_sync ADD CONSTRAINT res_partner_autocomplete_sync_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
CREATE TABLE res_partner_bank (id integer NOT NULL, partner_id integer NOT NULL, bank_id integer, sequence integer, currency_id integer, company_id integer, create_uid integer, write_uid integer, active boolean, allow_out_payment boolean, create_date timestamp, write_date timestamp, has_iban_warning boolean, has_money_transfer_warning boolean);
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_pkey PRIMARY KEY (id);
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_unique_number UNIQUE (sanitized_acc_number, partner_id);
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE res_partner_bank ADD CONSTRAINT res_partner_bank_bank_id_fkey FOREIGN KEY (bank_id) REFERENCES res_bank (id) ON DELETE SET NULL;
CREATE TABLE res_partner_category (id integer NOT NULL, color integer, parent_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_partner_category ADD CONSTRAINT res_partner_category_pkey PRIMARY KEY (id);
ALTER TABLE res_partner_category ADD CONSTRAINT res_partner_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_category ADD CONSTRAINT res_partner_category_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES res_partner_category (id) ON DELETE CASCADE;
ALTER TABLE res_partner_category ADD CONSTRAINT res_partner_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_partner_industry (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb, full_name jsonb, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE res_partner_industry ADD CONSTRAINT res_partner_industry_pkey PRIMARY KEY (id);
ALTER TABLE res_partner_industry ADD CONSTRAINT res_partner_industry_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_industry ADD CONSTRAINT res_partner_industry_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_partner_res_partner_category_rel (category_id integer NOT NULL, partner_id integer NOT NULL);
ALTER TABLE res_partner_res_partner_category_rel ADD CONSTRAINT res_partner_res_partner_category_rel_pkey PRIMARY KEY (category_id, partner_id);
ALTER TABLE res_partner_res_partner_category_rel ADD CONSTRAINT res_partner_res_partner_category_rel_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE res_partner_res_partner_category_rel ADD CONSTRAINT res_partner_res_partner_category_rel_category_id_fkey FOREIGN KEY (category_id) REFERENCES res_partner_category (id) ON DELETE CASCADE;
CREATE TABLE res_partner_title (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, shortcut jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE res_partner_title ADD CONSTRAINT res_partner_title_pkey PRIMARY KEY (id);
ALTER TABLE res_partner_title ADD CONSTRAINT res_partner_title_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_partner_title ADD CONSTRAINT res_partner_title_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_region (id integer NOT NULL, state_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_region ADD CONSTRAINT res_region_pkey PRIMARY KEY (id);
ALTER TABLE res_region ADD CONSTRAINT res_region_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE res_region ADD CONSTRAINT res_region_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_region ADD CONSTRAINT res_region_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users (id integer NOT NULL, company_id integer NOT NULL, partner_id integer NOT NULL, active boolean, create_date timestamp, action_id integer, create_uid integer, write_uid integer, signature text, share boolean, write_date timestamp, tour_enabled boolean, is_processing boolean, is_allowed_user_creation boolean, odoobot_failed boolean, sale_team_id integer, target_sales_won integer, target_sales_done integer, microsoft_calendar_token_validity timestamp, attachment_id integer, target_sales_invoiced integer);
ALTER TABLE res_users ADD CONSTRAINT res_users_pkey PRIMARY KEY (id);
ALTER TABLE res_users ADD CONSTRAINT res_users_login_key UNIQUE (login);
ALTER TABLE res_users ADD CONSTRAINT res_users_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users ADD CONSTRAINT res_users_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL;
ALTER TABLE res_users ADD CONSTRAINT res_users_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE res_users ADD CONSTRAINT res_users_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users ADD CONSTRAINT res_users_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE res_users ADD CONSTRAINT res_users_sale_team_id_fkey FOREIGN KEY (sale_team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
CREATE TABLE res_users_access_menu_ref (user_id integer NOT NULL, access_menu_id integer NOT NULL);
ALTER TABLE res_users_access_menu_ref ADD CONSTRAINT res_users_access_menu_ref_pkey PRIMARY KEY (user_id, access_menu_id);
ALTER TABLE res_users_access_menu_ref ADD CONSTRAINT res_users_access_menu_ref_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE res_users_access_menu_ref ADD CONSTRAINT res_users_access_menu_ref_access_menu_id_fkey FOREIGN KEY (access_menu_id) REFERENCES access_menu (id) ON DELETE CASCADE;
CREATE TABLE res_users_apikeys (id integer NOT NULL, user_id integer NOT NULL, expiration_date timestamp, index varchar(8), create_date timestamp);
ALTER TABLE res_users_apikeys ADD CONSTRAINT res_users_apikeys_pkey PRIMARY KEY (id);
ALTER TABLE res_users_apikeys ADD CONSTRAINT res_users_apikeys_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE res_users_apikeys_description (id integer NOT NULL, create_uid integer, write_uid integer, expiration_date timestamp, create_date timestamp, write_date timestamp);
ALTER TABLE res_users_apikeys_description ADD CONSTRAINT res_users_apikeys_description_pkey PRIMARY KEY (id);
ALTER TABLE res_users_apikeys_description ADD CONSTRAINT res_users_apikeys_description_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_apikeys_description ADD CONSTRAINT res_users_apikeys_description_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_deletion (id integer NOT NULL, user_id integer, user_id_int integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_users_deletion ADD CONSTRAINT res_users_deletion_pkey PRIMARY KEY (id);
ALTER TABLE res_users_deletion ADD CONSTRAINT res_users_deletion_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_deletion ADD CONSTRAINT res_users_deletion_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_deletion ADD CONSTRAINT res_users_deletion_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_identitycheck (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_users_identitycheck ADD CONSTRAINT res_users_identitycheck_pkey PRIMARY KEY (id);
ALTER TABLE res_users_identitycheck ADD CONSTRAINT res_users_identitycheck_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_identitycheck ADD CONSTRAINT res_users_identitycheck_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_log (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE res_users_log ADD CONSTRAINT res_users_log_pkey PRIMARY KEY (id);
ALTER TABLE res_users_log ADD CONSTRAINT res_users_log_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_log ADD CONSTRAINT res_users_log_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_settings (id integer NOT NULL, user_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, homemenu_config jsonb, voice_active_duration integer, is_discuss_sidebar_category_channel_open boolean, is_discuss_sidebar_category_chat_open boolean, use_push_to_talk boolean, mute_until_dt timestamp);
ALTER TABLE res_users_settings ADD CONSTRAINT res_users_settings_pkey PRIMARY KEY (id);
ALTER TABLE res_users_settings ADD CONSTRAINT res_users_settings_unique_user_id UNIQUE (user_id);
ALTER TABLE res_users_settings ADD CONSTRAINT res_users_settings_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_settings ADD CONSTRAINT res_users_settings_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE res_users_settings ADD CONSTRAINT res_users_settings_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_settings_volumes (id integer NOT NULL, user_setting_id integer NOT NULL, partner_id integer, guest_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, volume double precision);
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_pkey PRIMARY KEY (id);
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_guest_id_fkey FOREIGN KEY (guest_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE CASCADE;
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_user_setting_id_fkey FOREIGN KEY (user_setting_id) REFERENCES res_users_settings (id) ON DELETE CASCADE;
ALTER TABLE res_users_settings_volumes ADD CONSTRAINT res_users_settings_volumes_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE res_users_web_tour_tour_rel (web_tour_tour_id integer NOT NULL, res_users_id integer NOT NULL);
ALTER TABLE res_users_web_tour_tour_rel ADD CONSTRAINT res_users_web_tour_tour_rel_pkey PRIMARY KEY (web_tour_tour_id, res_users_id);
ALTER TABLE res_users_web_tour_tour_rel ADD CONSTRAINT res_users_web_tour_tour_rel_res_users_id_fkey FOREIGN KEY (res_users_id) REFERENCES res_users (id) ON DELETE CASCADE;
ALTER TABLE res_users_web_tour_tour_rel ADD CONSTRAINT res_users_web_tour_tour_rel_web_tour_tour_id_fkey FOREIGN KEY (web_tour_tour_id) REFERENCES web_tour_tour (id) ON DELETE CASCADE;
CREATE TABLE reset_view_arch_wizard (id integer NOT NULL, view_id integer, compare_view_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE reset_view_arch_wizard ADD CONSTRAINT reset_view_arch_wizard_pkey PRIMARY KEY (id);
ALTER TABLE reset_view_arch_wizard ADD CONSTRAINT reset_view_arch_wizard_view_id_fkey FOREIGN KEY (view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE reset_view_arch_wizard ADD CONSTRAINT reset_view_arch_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE reset_view_arch_wizard ADD CONSTRAINT reset_view_arch_wizard_compare_view_id_fkey FOREIGN KEY (compare_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL;
ALTER TABLE reset_view_arch_wizard ADD CONSTRAINT reset_view_arch_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE resource_calendar (id integer NOT NULL, company_id integer, create_uid integer, write_uid integer, active boolean, two_weeks_calendar boolean, flexible_hours boolean, create_date timestamp, write_date timestamp, full_time_required_hours double precision);
ALTER TABLE resource_calendar ADD CONSTRAINT resource_calendar_pkey PRIMARY KEY (id);
ALTER TABLE resource_calendar ADD CONSTRAINT resource_calendar_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar ADD CONSTRAINT resource_calendar_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar ADD CONSTRAINT resource_calendar_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE resource_calendar_attendance (id integer NOT NULL, calendar_id integer NOT NULL, resource_id integer, sequence integer, create_uid integer, write_uid integer, date_from date, date_to date, create_date timestamp, write_date timestamp, hour_from double precision NOT NULL, hour_to double precision NOT NULL, duration_days double precision);
ALTER TABLE resource_calendar_attendance ADD CONSTRAINT resource_calendar_attendance_pkey PRIMARY KEY (id);
ALTER TABLE resource_calendar_attendance ADD CONSTRAINT resource_calendar_attendance_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar (id) ON DELETE CASCADE;
ALTER TABLE resource_calendar_attendance ADD CONSTRAINT resource_calendar_attendance_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_attendance ADD CONSTRAINT resource_calendar_attendance_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_attendance ADD CONSTRAINT resource_calendar_attendance_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource (id) ON DELETE SET NULL;
CREATE TABLE resource_calendar_leaves (id integer NOT NULL, company_id integer, calendar_id integer, resource_id integer, create_uid integer, write_uid integer, date_from timestamp NOT NULL, date_to timestamp NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_pkey PRIMARY KEY (id);
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES resource_resource (id) ON DELETE SET NULL;
ALTER TABLE resource_calendar_leaves ADD CONSTRAINT resource_calendar_leaves_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE resource_resource (id integer NOT NULL, company_id integer, user_id integer, calendar_id integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp, time_efficiency double precision NOT NULL);
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_pkey PRIMARY KEY (id);
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE resource_resource ADD CONSTRAINT resource_resource_calendar_id_fkey FOREIGN KEY (calendar_id) REFERENCES resource_calendar (id) ON DELETE SET NULL;
CREATE TABLE rule_group_rel (rule_group_id integer NOT NULL, group_id integer NOT NULL);
ALTER TABLE rule_group_rel ADD CONSTRAINT rule_group_rel_pkey PRIMARY KEY (rule_group_id, group_id);
ALTER TABLE rule_group_rel ADD CONSTRAINT rule_group_rel_group_id_fkey FOREIGN KEY (group_id) REFERENCES res_groups (id) ON DELETE RESTRICT;
ALTER TABLE rule_group_rel ADD CONSTRAINT rule_group_rel_rule_group_id_fkey FOREIGN KEY (rule_group_id) REFERENCES ir_rule (id) ON DELETE CASCADE;
CREATE TABLE sale_advance_payment_inv (id integer NOT NULL, currency_id integer, company_id integer, create_uid integer, write_uid integer, deduct_down_payments boolean, consolidated_billing boolean, create_date timestamp, write_date timestamp, amount double precision);
ALTER TABLE sale_advance_payment_inv ADD CONSTRAINT sale_advance_payment_inv_pkey PRIMARY KEY (id);
ALTER TABLE sale_advance_payment_inv ADD CONSTRAINT sale_advance_payment_inv_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_advance_payment_inv ADD CONSTRAINT sale_advance_payment_inv_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_advance_payment_inv ADD CONSTRAINT sale_advance_payment_inv_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE sale_advance_payment_inv ADD CONSTRAINT sale_advance_payment_inv_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE sale_advance_payment_inv_sale_order_rel (sale_advance_payment_inv_id integer NOT NULL, sale_order_id integer NOT NULL);
ALTER TABLE sale_advance_payment_inv_sale_order_rel ADD CONSTRAINT sale_advance_payment_inv_sale_order_rel_pkey PRIMARY KEY (sale_advance_payment_inv_id, sale_order_id);
ALTER TABLE sale_advance_payment_inv_sale_order_rel ADD CONSTRAINT sale_advance_payment_inv_sale_order_rel_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_advance_payment_inv_sale_order_rel ADD CONSTRAINT sale_advance_payment_inv_sale__sale_advance_payment_inv_id_fkey FOREIGN KEY (sale_advance_payment_inv_id) REFERENCES sale_advance_payment_inv (id) ON DELETE CASCADE;
CREATE TABLE sale_mass_cancel_orders (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sale_mass_cancel_orders ADD CONSTRAINT sale_mass_cancel_orders_pkey PRIMARY KEY (id);
ALTER TABLE sale_mass_cancel_orders ADD CONSTRAINT sale_mass_cancel_orders_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_mass_cancel_orders ADD CONSTRAINT sale_mass_cancel_orders_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order (id integer NOT NULL, campaign_id integer, source_id integer, medium_id integer, company_id integer NOT NULL, partner_id integer NOT NULL, journal_id integer, partner_invoice_id integer NOT NULL, partner_shipping_id integer NOT NULL, fiscal_position_id integer, payment_term_id integer, pricelist_id integer, currency_id integer, user_id integer, team_id integer, create_uid integer, write_uid integer, validity_date date, note text, locked boolean, require_signature boolean, require_payment boolean, create_date timestamp, commitment_date timestamp, date_order timestamp NOT NULL, signed_on timestamp, write_date timestamp, prepayment_percent double precision, pending_email_template_id integer, opportunity_id integer, sale_order_template_id integer, customizable_pdf_form_fields jsonb);
ALTER TABLE sale_order ADD CONSTRAINT sale_order_pkey PRIMARY KEY (id);
ALTER TABLE sale_order ADD CONSTRAINT sale_order_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_fiscal_position_id_fkey FOREIGN KEY (fiscal_position_id) REFERENCES account_fiscal_position (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_journal_id_fkey FOREIGN KEY (journal_id) REFERENCES account_journal (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_medium_id_fkey FOREIGN KEY (medium_id) REFERENCES utm_medium (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_opportunity_id_fkey FOREIGN KEY (opportunity_id) REFERENCES crm_lead (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_partner_invoice_id_fkey FOREIGN KEY (partner_invoice_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_partner_shipping_id_fkey FOREIGN KEY (partner_shipping_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_payment_term_id_fkey FOREIGN KEY (payment_term_id) REFERENCES account_payment_term (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_pending_email_template_id_fkey FOREIGN KEY (pending_email_template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_pricelist_id_fkey FOREIGN KEY (pricelist_id) REFERENCES product_pricelist (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_sale_order_template_id_fkey FOREIGN KEY (sale_order_template_id) REFERENCES sale_order_template (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_source_id_fkey FOREIGN KEY (source_id) REFERENCES utm_source (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE sale_order ADD CONSTRAINT sale_order_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_campaign (id) ON DELETE SET NULL;
CREATE TABLE sale_order_cancel (id integer NOT NULL, template_id integer, author_id integer, order_id integer NOT NULL, create_uid integer, write_uid integer, body text, create_date timestamp, write_date timestamp);
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_author_id_fkey FOREIGN KEY (author_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_cancel ADD CONSTRAINT sale_order_cancel_template_id_fkey FOREIGN KEY (template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
CREATE TABLE sale_order_discount (id integer NOT NULL, sale_order_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, discount_percentage double precision);
ALTER TABLE sale_order_discount ADD CONSTRAINT sale_order_discount_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_discount ADD CONSTRAINT sale_order_discount_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_discount ADD CONSTRAINT sale_order_discount_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_discount ADD CONSTRAINT sale_order_discount_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_line (id integer NOT NULL, order_id integer NOT NULL, sequence integer, company_id integer, currency_id integer, order_partner_id integer, salesman_id integer, product_id integer, product_uom integer, linked_line_id integer, combo_item_id integer, product_packaging_id integer, create_uid integer, write_uid integer, analytic_distribution jsonb, name text NOT NULL, is_downpayment boolean, is_expense boolean, create_date timestamp, write_date timestamp, technical_price_unit double precision, price_tax double precision, product_packaging_qty double precision, customer_lead double precision NOT NULL);
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_currency_id_fkey FOREIGN KEY (currency_id) REFERENCES res_currency (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_combo_item_id_fkey FOREIGN KEY (combo_item_id) REFERENCES product_combo_item (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_linked_line_id_fkey FOREIGN KEY (linked_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_order_partner_id_fkey FOREIGN KEY (order_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_product_packaging_id_fkey FOREIGN KEY (product_packaging_id) REFERENCES product_packaging (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_product_uom_fkey FOREIGN KEY (product_uom) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_salesman_id_fkey FOREIGN KEY (salesman_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_line ADD CONSTRAINT sale_order_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_line_invoice_rel (invoice_line_id integer NOT NULL, order_line_id integer NOT NULL);
ALTER TABLE sale_order_line_invoice_rel ADD CONSTRAINT sale_order_line_invoice_rel_pkey PRIMARY KEY (invoice_line_id, order_line_id);
ALTER TABLE sale_order_line_invoice_rel ADD CONSTRAINT sale_order_line_invoice_rel_order_line_id_fkey FOREIGN KEY (order_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
ALTER TABLE sale_order_line_invoice_rel ADD CONSTRAINT sale_order_line_invoice_rel_invoice_line_id_fkey FOREIGN KEY (invoice_line_id) REFERENCES account_move_line (id) ON DELETE CASCADE;
CREATE TABLE sale_order_line_product_document_rel (sale_order_line_id integer NOT NULL, product_document_id integer NOT NULL);
ALTER TABLE sale_order_line_product_document_rel ADD CONSTRAINT sale_order_line_product_document_rel_pkey PRIMARY KEY (sale_order_line_id, product_document_id);
ALTER TABLE sale_order_line_product_document_rel ADD CONSTRAINT sale_order_line_product_document_rel_product_document_id_fkey FOREIGN KEY (product_document_id) REFERENCES product_document (id) ON DELETE CASCADE;
ALTER TABLE sale_order_line_product_document_rel ADD CONSTRAINT sale_order_line_product_document_rel_sale_order_line_id_fkey FOREIGN KEY (sale_order_line_id) REFERENCES sale_order_line (id) ON DELETE CASCADE;
CREATE TABLE sale_order_mass_cancel_wizard_rel (sale_mass_cancel_orders_id integer NOT NULL, sale_order_id integer NOT NULL);
ALTER TABLE sale_order_mass_cancel_wizard_rel ADD CONSTRAINT sale_order_mass_cancel_wizard_rel_pkey PRIMARY KEY (sale_mass_cancel_orders_id, sale_order_id);
ALTER TABLE sale_order_mass_cancel_wizard_rel ADD CONSTRAINT sale_order_mass_cancel_wizard_rel_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_mass_cancel_wizard_rel ADD CONSTRAINT sale_order_mass_cancel_wizard_r_sale_mass_cancel_orders_id_fkey FOREIGN KEY (sale_mass_cancel_orders_id) REFERENCES sale_mass_cancel_orders (id) ON DELETE CASCADE;
CREATE TABLE sale_order_option (id integer NOT NULL, order_id integer, product_id integer NOT NULL, line_id integer, sequence integer, uom_id integer NOT NULL, create_uid integer, write_uid integer, name text NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_line_id_fkey FOREIGN KEY (line_id) REFERENCES sale_order_line (id) ON DELETE SET NULL;
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_option ADD CONSTRAINT sale_order_option_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_spreadsheet (id integer NOT NULL, company_id integer, order_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sale_order_spreadsheet ADD CONSTRAINT sale_order_spreadsheet_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_spreadsheet ADD CONSTRAINT sale_order_spreadsheet_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order (id) ON DELETE SET NULL;
ALTER TABLE sale_order_spreadsheet ADD CONSTRAINT sale_order_spreadsheet_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE sale_order_spreadsheet ADD CONSTRAINT sale_order_spreadsheet_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_spreadsheet ADD CONSTRAINT sale_order_spreadsheet_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_tag_rel (order_id integer NOT NULL, tag_id integer NOT NULL);
ALTER TABLE sale_order_tag_rel ADD CONSTRAINT sale_order_tag_rel_pkey PRIMARY KEY (order_id, tag_id);
ALTER TABLE sale_order_tag_rel ADD CONSTRAINT sale_order_tag_rel_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES crm_tag (id) ON DELETE CASCADE;
ALTER TABLE sale_order_tag_rel ADD CONSTRAINT sale_order_tag_rel_order_id_fkey FOREIGN KEY (order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
CREATE TABLE sale_order_template (id integer NOT NULL, company_id integer, sequence integer, mail_template_id integer, number_of_days integer, create_uid integer, write_uid integer, note jsonb, journal_id jsonb, active boolean, require_signature boolean, require_payment boolean, create_date timestamp, write_date timestamp, prepayment_percent double precision, spreadsheet_template_id integer);
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_mail_template_id_fkey FOREIGN KEY (mail_template_id) REFERENCES mail_template (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_spreadsheet_template_id_fkey FOREIGN KEY (spreadsheet_template_id) REFERENCES sale_order_spreadsheet (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template ADD CONSTRAINT sale_order_template_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE sale_order_template_line (id integer NOT NULL, sale_order_template_id integer NOT NULL, sequence integer, company_id integer, product_id integer, product_uom_id integer, create_uid integer, write_uid integer, name jsonb, create_date timestamp, write_date timestamp);
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_product_uom_id_fkey FOREIGN KEY (product_uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_sale_order_template_id_fkey FOREIGN KEY (sale_order_template_id) REFERENCES sale_order_template (id) ON DELETE CASCADE;
ALTER TABLE sale_order_template_line ADD CONSTRAINT sale_order_template_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_template_option (id integer NOT NULL, sale_order_template_id integer NOT NULL, company_id integer, product_id integer NOT NULL, uom_id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_pkey PRIMARY KEY (id);
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_product_id_fkey FOREIGN KEY (product_id) REFERENCES product_product (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_sale_order_template_id_fkey FOREIGN KEY (sale_order_template_id) REFERENCES sale_order_template (id) ON DELETE CASCADE;
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_uom_id_fkey FOREIGN KEY (uom_id) REFERENCES uom_uom (id) ON DELETE RESTRICT;
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE sale_order_template_option ADD CONSTRAINT sale_order_template_option_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_order_transaction_rel (transaction_id integer NOT NULL, sale_order_id integer NOT NULL);
ALTER TABLE sale_order_transaction_rel ADD CONSTRAINT sale_order_transaction_rel_pkey PRIMARY KEY (transaction_id, sale_order_id);
ALTER TABLE sale_order_transaction_rel ADD CONSTRAINT sale_order_transaction_rel_sale_order_id_fkey FOREIGN KEY (sale_order_id) REFERENCES sale_order (id) ON DELETE CASCADE;
ALTER TABLE sale_order_transaction_rel ADD CONSTRAINT sale_order_transaction_rel_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES payment_transaction (id) ON DELETE CASCADE;
CREATE TABLE sale_payment_provider_onboarding_wizard (id integer NOT NULL, create_uid integer, write_uid integer, manual_post_msg text, create_date timestamp, write_date timestamp);
ALTER TABLE sale_payment_provider_onboarding_wizard ADD CONSTRAINT sale_payment_provider_onboarding_wizard_pkey PRIMARY KEY (id);
ALTER TABLE sale_payment_provider_onboarding_wizard ADD CONSTRAINT sale_payment_provider_onboarding_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_payment_provider_onboarding_wizard ADD CONSTRAINT sale_payment_provider_onboarding_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sale_pdf_form_field (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sale_pdf_form_field ADD CONSTRAINT sale_pdf_form_field_pkey PRIMARY KEY (id);
ALTER TABLE sale_pdf_form_field ADD CONSTRAINT sale_pdf_form_field_unique_name_per_doc_type UNIQUE (name, document_type);
ALTER TABLE sale_pdf_form_field ADD CONSTRAINT sale_pdf_form_field_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sale_pdf_form_field ADD CONSTRAINT sale_pdf_form_field_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE scheduled_message_attachment_rel (scheduled_message_id integer NOT NULL, attachment_id integer NOT NULL);
ALTER TABLE scheduled_message_attachment_rel ADD CONSTRAINT scheduled_message_attachment_rel_pkey PRIMARY KEY (scheduled_message_id, attachment_id);
ALTER TABLE scheduled_message_attachment_rel ADD CONSTRAINT scheduled_message_attachment_rel_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
ALTER TABLE scheduled_message_attachment_rel ADD CONSTRAINT scheduled_message_attachment_rel_scheduled_message_id_fkey FOREIGN KEY (scheduled_message_id) REFERENCES mail_scheduled_message (id) ON DELETE CASCADE;
CREATE TABLE service_type (id integer NOT NULL, create_uid integer, write_uid integer, description text, create_date timestamp, write_date timestamp);
ALTER TABLE service_type ADD CONSTRAINT service_type_pkey PRIMARY KEY (id);
ALTER TABLE service_type ADD CONSTRAINT service_type_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE service_type ADD CONSTRAINT service_type_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_account_code (id integer NOT NULL, account_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_account_code ADD CONSTRAINT sms_account_code_pkey PRIMARY KEY (id);
ALTER TABLE sms_account_code ADD CONSTRAINT sms_account_code_account_id_fkey FOREIGN KEY (account_id) REFERENCES iap_account (id) ON DELETE CASCADE;
ALTER TABLE sms_account_code ADD CONSTRAINT sms_account_code_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_account_code ADD CONSTRAINT sms_account_code_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_account_phone (id integer NOT NULL, account_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_account_phone ADD CONSTRAINT sms_account_phone_pkey PRIMARY KEY (id);
ALTER TABLE sms_account_phone ADD CONSTRAINT sms_account_phone_account_id_fkey FOREIGN KEY (account_id) REFERENCES iap_account (id) ON DELETE CASCADE;
ALTER TABLE sms_account_phone ADD CONSTRAINT sms_account_phone_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_account_phone ADD CONSTRAINT sms_account_phone_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_account_sender (id integer NOT NULL, account_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_account_sender ADD CONSTRAINT sms_account_sender_pkey PRIMARY KEY (id);
ALTER TABLE sms_account_sender ADD CONSTRAINT sms_account_sender_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_account_sender ADD CONSTRAINT sms_account_sender_account_id_fkey FOREIGN KEY (account_id) REFERENCES iap_account (id) ON DELETE CASCADE;
ALTER TABLE sms_account_sender ADD CONSTRAINT sms_account_sender_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_composer (id integer NOT NULL, res_id integer, template_id integer, create_uid integer, write_uid integer, body text NOT NULL, mass_keep_log boolean, mass_force_send boolean, mass_use_blacklist boolean, create_date timestamp, write_date timestamp);
ALTER TABLE sms_composer ADD CONSTRAINT sms_composer_pkey PRIMARY KEY (id);
ALTER TABLE sms_composer ADD CONSTRAINT sms_composer_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_composer ADD CONSTRAINT sms_composer_template_id_fkey FOREIGN KEY (template_id) REFERENCES sms_template (id) ON DELETE SET NULL;
ALTER TABLE sms_composer ADD CONSTRAINT sms_composer_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_resend (id integer NOT NULL, mail_message_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_resend ADD CONSTRAINT sms_resend_pkey PRIMARY KEY (id);
ALTER TABLE sms_resend ADD CONSTRAINT sms_resend_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE;
ALTER TABLE sms_resend ADD CONSTRAINT sms_resend_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_resend ADD CONSTRAINT sms_resend_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_resend_recipient (id integer NOT NULL, sms_resend_id integer NOT NULL, notification_id integer NOT NULL, create_uid integer, write_uid integer, resend boolean, create_date timestamp, write_date timestamp);
ALTER TABLE sms_resend_recipient ADD CONSTRAINT sms_resend_recipient_pkey PRIMARY KEY (id);
ALTER TABLE sms_resend_recipient ADD CONSTRAINT sms_resend_recipient_sms_resend_id_fkey FOREIGN KEY (sms_resend_id) REFERENCES sms_resend (id) ON DELETE RESTRICT;
ALTER TABLE sms_resend_recipient ADD CONSTRAINT sms_resend_recipient_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_resend_recipient ADD CONSTRAINT sms_resend_recipient_notification_id_fkey FOREIGN KEY (notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE;
ALTER TABLE sms_resend_recipient ADD CONSTRAINT sms_resend_recipient_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_sms (id integer NOT NULL, partner_id integer, mail_message_id integer, create_uid integer, write_uid integer, body text, to_delete boolean, create_date timestamp, write_date timestamp);
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_pkey PRIMARY KEY (id);
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_uuid_unique UNIQUE (uuid);
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_mail_message_id_fkey FOREIGN KEY (mail_message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE sms_sms ADD CONSTRAINT sms_sms_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_template (id integer NOT NULL, model_id integer NOT NULL, sidebar_action_id integer, create_uid integer, write_uid integer, name jsonb, body jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE sms_template ADD CONSTRAINT sms_template_pkey PRIMARY KEY (id);
ALTER TABLE sms_template ADD CONSTRAINT sms_template_sidebar_action_id_fkey FOREIGN KEY (sidebar_action_id) REFERENCES ir_act_window (id) ON DELETE SET NULL;
ALTER TABLE sms_template ADD CONSTRAINT sms_template_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_template ADD CONSTRAINT sms_template_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_template ADD CONSTRAINT sms_template_model_id_fkey FOREIGN KEY (model_id) REFERENCES ir_model (id) ON DELETE CASCADE;
CREATE TABLE sms_template_preview (id integer NOT NULL, sms_template_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_template_preview ADD CONSTRAINT sms_template_preview_pkey PRIMARY KEY (id);
ALTER TABLE sms_template_preview ADD CONSTRAINT sms_template_preview_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_template_preview ADD CONSTRAINT sms_template_preview_sms_template_id_fkey FOREIGN KEY (sms_template_id) REFERENCES sms_template (id) ON DELETE CASCADE;
ALTER TABLE sms_template_preview ADD CONSTRAINT sms_template_preview_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_template_reset (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_template_reset ADD CONSTRAINT sms_template_reset_pkey PRIMARY KEY (id);
ALTER TABLE sms_template_reset ADD CONSTRAINT sms_template_reset_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_template_reset ADD CONSTRAINT sms_template_reset_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sms_template_sms_template_reset_rel (sms_template_reset_id integer NOT NULL, sms_template_id integer NOT NULL);
ALTER TABLE sms_template_sms_template_reset_rel ADD CONSTRAINT sms_template_sms_template_reset_rel_pkey PRIMARY KEY (sms_template_reset_id, sms_template_id);
ALTER TABLE sms_template_sms_template_reset_rel ADD CONSTRAINT sms_template_sms_template_reset_rel_sms_template_reset_id_fkey FOREIGN KEY (sms_template_reset_id) REFERENCES sms_template_reset (id) ON DELETE CASCADE;
ALTER TABLE sms_template_sms_template_reset_rel ADD CONSTRAINT sms_template_sms_template_reset_rel_sms_template_id_fkey FOREIGN KEY (sms_template_id) REFERENCES sms_template (id) ON DELETE CASCADE;
CREATE TABLE sms_tracker (id integer NOT NULL, mail_notification_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sms_tracker ADD CONSTRAINT sms_tracker_pkey PRIMARY KEY (id);
ALTER TABLE sms_tracker ADD CONSTRAINT sms_tracker_sms_uuid_unique UNIQUE (sms_uuid);
ALTER TABLE sms_tracker ADD CONSTRAINT sms_tracker_mail_notification_id_fkey FOREIGN KEY (mail_notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE;
ALTER TABLE sms_tracker ADD CONSTRAINT sms_tracker_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sms_tracker ADD CONSTRAINT sms_tracker_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE snailmail_letter (id integer NOT NULL, user_id integer, res_id integer NOT NULL, partner_id integer NOT NULL, company_id integer NOT NULL, report_template integer, attachment_id integer, message_id integer, state_id integer, country_id integer, create_uid integer, write_uid integer, info_msg text, color boolean, cover boolean, duplex boolean, create_date timestamp, write_date timestamp);
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_pkey PRIMARY KEY (id);
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_report_template_fkey FOREIGN KEY (report_template) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE RESTRICT;
ALTER TABLE snailmail_letter ADD CONSTRAINT snailmail_letter_attachment_id_fkey FOREIGN KEY (attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE;
CREATE TABLE snailmail_letter_format_error (id integer NOT NULL, message_id integer, create_uid integer, write_uid integer, snailmail_cover boolean, create_date timestamp, write_date timestamp);
ALTER TABLE snailmail_letter_format_error ADD CONSTRAINT snailmail_letter_format_error_pkey PRIMARY KEY (id);
ALTER TABLE snailmail_letter_format_error ADD CONSTRAINT snailmail_letter_format_error_message_id_fkey FOREIGN KEY (message_id) REFERENCES mail_message (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_format_error ADD CONSTRAINT snailmail_letter_format_error_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_format_error ADD CONSTRAINT snailmail_letter_format_error_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE snailmail_letter_missing_required_fields (id integer NOT NULL, partner_id integer, letter_id integer, state_id integer, country_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_pkey PRIMARY KEY (id);
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_country_id_fkey FOREIGN KEY (country_id) REFERENCES res_country (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_letter_id_fkey FOREIGN KEY (letter_id) REFERENCES snailmail_letter (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_partner_id_fkey FOREIGN KEY (partner_id) REFERENCES res_partner (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_state_id_fkey FOREIGN KEY (state_id) REFERENCES res_country_state (id) ON DELETE SET NULL;
ALTER TABLE snailmail_letter_missing_required_fields ADD CONSTRAINT snailmail_letter_missing_required_fields_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE sparse_fields_test (id integer NOT NULL, create_uid integer, write_uid integer, data text, create_date timestamp, write_date timestamp);
ALTER TABLE sparse_fields_test ADD CONSTRAINT sparse_fields_test_pkey PRIMARY KEY (id);
ALTER TABLE sparse_fields_test ADD CONSTRAINT sparse_fields_test_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sparse_fields_test ADD CONSTRAINT sparse_fields_test_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE spreadsheet_cell_thread (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp, dashboard_id integer, sale_order_spreadsheet_id integer);
ALTER TABLE spreadsheet_cell_thread ADD CONSTRAINT spreadsheet_cell_thread_pkey PRIMARY KEY (id);
ALTER TABLE spreadsheet_cell_thread ADD CONSTRAINT spreadsheet_cell_thread_dashboard_id_fkey FOREIGN KEY (dashboard_id) REFERENCES spreadsheet_dashboard (id) ON DELETE CASCADE;
ALTER TABLE spreadsheet_cell_thread ADD CONSTRAINT spreadsheet_cell_thread_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_cell_thread ADD CONSTRAINT spreadsheet_cell_thread_sale_order_spreadsheet_id_fkey FOREIGN KEY (sale_order_spreadsheet_id) REFERENCES sale_order_spreadsheet (id) ON DELETE CASCADE;
ALTER TABLE spreadsheet_cell_thread ADD CONSTRAINT spreadsheet_cell_thread_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE spreadsheet_dashboard (id integer NOT NULL, dashboard_group_id integer NOT NULL, sequence integer, company_id integer, create_uid integer, write_uid integer, name jsonb NOT NULL, is_published boolean, create_date timestamp, write_date timestamp);
ALTER TABLE spreadsheet_dashboard ADD CONSTRAINT spreadsheet_dashboard_pkey PRIMARY KEY (id);
ALTER TABLE spreadsheet_dashboard ADD CONSTRAINT spreadsheet_dashboard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_dashboard ADD CONSTRAINT spreadsheet_dashboard_dashboard_group_id_fkey FOREIGN KEY (dashboard_group_id) REFERENCES spreadsheet_dashboard_group (id) ON DELETE RESTRICT;
ALTER TABLE spreadsheet_dashboard ADD CONSTRAINT spreadsheet_dashboard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_dashboard ADD CONSTRAINT spreadsheet_dashboard_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
CREATE TABLE spreadsheet_dashboard_group (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE spreadsheet_dashboard_group ADD CONSTRAINT spreadsheet_dashboard_group_pkey PRIMARY KEY (id);
ALTER TABLE spreadsheet_dashboard_group ADD CONSTRAINT spreadsheet_dashboard_group_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_dashboard_group ADD CONSTRAINT spreadsheet_dashboard_group_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE spreadsheet_dashboard_share (id integer NOT NULL, dashboard_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE spreadsheet_dashboard_share ADD CONSTRAINT spreadsheet_dashboard_share_pkey PRIMARY KEY (id);
ALTER TABLE spreadsheet_dashboard_share ADD CONSTRAINT spreadsheet_dashboard_share_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_dashboard_share ADD CONSTRAINT spreadsheet_dashboard_share_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_dashboard_share ADD CONSTRAINT spreadsheet_dashboard_share_dashboard_id_fkey FOREIGN KEY (dashboard_id) REFERENCES spreadsheet_dashboard (id) ON DELETE CASCADE;
CREATE TABLE spreadsheet_revision (id integer NOT NULL, res_id integer NOT NULL, parent_revision_id integer, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE spreadsheet_revision ADD CONSTRAINT spreadsheet_revision_pkey PRIMARY KEY (id);
ALTER TABLE spreadsheet_revision ADD CONSTRAINT spreadsheet_revision_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_revision ADD CONSTRAINT spreadsheet_revision_parent_revision_id_fkey FOREIGN KEY (parent_revision_id) REFERENCES spreadsheet_revision (id) ON DELETE SET NULL;
ALTER TABLE spreadsheet_revision ADD CONSTRAINT spreadsheet_revision_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE stage_config (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, is_won boolean, is_lost boolean, create_date timestamp, write_date timestamp, is_archive_lead boolean);
ALTER TABLE stage_config ADD CONSTRAINT stage_config_pkey PRIMARY KEY (id);
ALTER TABLE stage_config ADD CONSTRAINT stage_config_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE stage_config ADD CONSTRAINT stage_config_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE subscription_plan (id integer NOT NULL, access_group_id integer, responsible integer, create_uid integer, write_uid integer, active boolean, is_allowed_user_creation boolean, create_date timestamp, write_date timestamp, show_only_explore_screen boolean, description text);
ALTER TABLE subscription_plan ADD CONSTRAINT subscription_plan_pkey PRIMARY KEY (id);
ALTER TABLE subscription_plan ADD CONSTRAINT subscription_plan_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan ADD CONSTRAINT subscription_plan_access_group_id_fkey FOREIGN KEY (access_group_id) REFERENCES access_group (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan ADD CONSTRAINT subscription_plan_responsible_fkey FOREIGN KEY (responsible) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan ADD CONSTRAINT subscription_plan_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE subscription_plan_access_menu_ref (subscription_plan_id integer NOT NULL, access_menu_id integer NOT NULL);
ALTER TABLE subscription_plan_access_menu_ref ADD CONSTRAINT subscription_plan_access_menu_ref_pkey PRIMARY KEY (subscription_plan_id, access_menu_id);
ALTER TABLE subscription_plan_access_menu_ref ADD CONSTRAINT subscription_plan_access_menu_ref_access_menu_id_fkey FOREIGN KEY (access_menu_id) REFERENCES access_menu (id) ON DELETE CASCADE;
ALTER TABLE subscription_plan_access_menu_ref ADD CONSTRAINT subscription_plan_access_menu_ref_subscription_plan_id_fkey FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE CASCADE;
CREATE TABLE subscription_plan_feature (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE subscription_plan_feature ADD CONSTRAINT subscription_plan_feature_pkey PRIMARY KEY (id);
ALTER TABLE subscription_plan_feature ADD CONSTRAINT subscription_plan_feature_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan_feature ADD CONSTRAINT subscription_plan_feature_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE subscription_plan_feature_ref (subscription_plan_id integer NOT NULL, subscription_feature_id integer NOT NULL);
ALTER TABLE subscription_plan_feature_ref ADD CONSTRAINT subscription_plan_feature_ref_pkey PRIMARY KEY (subscription_plan_id, subscription_feature_id);
ALTER TABLE subscription_plan_feature_ref ADD CONSTRAINT subscription_plan_feature_ref_subscription_plan_id_fkey FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE CASCADE;
ALTER TABLE subscription_plan_feature_ref ADD CONSTRAINT subscription_plan_feature_ref_subscription_feature_id_fkey FOREIGN KEY (subscription_feature_id) REFERENCES subscription_plan_feature (id) ON DELETE CASCADE;
CREATE TABLE subscription_plan_line (id integer NOT NULL, subscription_plan_id integer, cancel_subscription_id integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE subscription_plan_line ADD CONSTRAINT subscription_plan_line_pkey PRIMARY KEY (id);
ALTER TABLE subscription_plan_line ADD CONSTRAINT subscription_plan_line_cancel_subscription_id_fkey FOREIGN KEY (cancel_subscription_id) REFERENCES cancel_subscription (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan_line ADD CONSTRAINT subscription_plan_line_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan_line ADD CONSTRAINT subscription_plan_line_subscription_plan_id_fkey FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE SET NULL;
ALTER TABLE subscription_plan_line ADD CONSTRAINT subscription_plan_line_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE subscription_plan_res_company_ref (subscription_plan_id integer NOT NULL, company_id integer NOT NULL);
ALTER TABLE subscription_plan_res_company_ref ADD CONSTRAINT subscription_plan_res_company_ref_pkey PRIMARY KEY (subscription_plan_id, company_id);
ALTER TABLE subscription_plan_res_company_ref ADD CONSTRAINT subscription_plan_res_company_ref_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE CASCADE;
ALTER TABLE subscription_plan_res_company_ref ADD CONSTRAINT subscription_plan_res_company_ref_subscription_plan_id_fkey FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE CASCADE;
CREATE TABLE sync_master_data_wizard (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE sync_master_data_wizard ADD CONSTRAINT sync_master_data_wizard_pkey PRIMARY KEY (id);
ALTER TABLE sync_master_data_wizard ADD CONSTRAINT sync_master_data_wizard_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE sync_master_data_wizard ADD CONSTRAINT sync_master_data_wizard_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE team_favorite_user_rel (team_id integer NOT NULL, user_id integer NOT NULL);
ALTER TABLE team_favorite_user_rel ADD CONSTRAINT team_favorite_user_rel_pkey PRIMARY KEY (team_id, user_id);
ALTER TABLE team_favorite_user_rel ADD CONSTRAINT team_favorite_user_rel_team_id_fkey FOREIGN KEY (team_id) REFERENCES crm_team (id) ON DELETE CASCADE;
ALTER TABLE team_favorite_user_rel ADD CONSTRAINT team_favorite_user_rel_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE uom_category (id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE uom_category ADD CONSTRAINT uom_category_pkey PRIMARY KEY (id);
ALTER TABLE uom_category ADD CONSTRAINT uom_category_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE uom_category ADD CONSTRAINT uom_category_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE uom_uom (id integer NOT NULL, category_id integer NOT NULL, create_uid integer, write_uid integer, name jsonb NOT NULL, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE uom_uom ADD CONSTRAINT uom_uom_pkey PRIMARY KEY (id);
ALTER TABLE uom_uom ADD CONSTRAINT uom_uom_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE uom_uom ADD CONSTRAINT uom_uom_category_id_fkey FOREIGN KEY (category_id) REFERENCES uom_category (id) ON DELETE RESTRICT;
ALTER TABLE uom_uom ADD CONSTRAINT uom_uom_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE update_product_attribute_value (id integer NOT NULL, attribute_value_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE update_product_attribute_value ADD CONSTRAINT update_product_attribute_value_pkey PRIMARY KEY (id);
ALTER TABLE update_product_attribute_value ADD CONSTRAINT update_product_attribute_value_attribute_value_id_fkey FOREIGN KEY (attribute_value_id) REFERENCES product_attribute_value (id) ON DELETE CASCADE;
ALTER TABLE update_product_attribute_value ADD CONSTRAINT update_product_attribute_value_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE update_product_attribute_value ADD CONSTRAINT update_product_attribute_value_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE user_subscription (id integer NOT NULL, user_id integer NOT NULL, subscription_plan_id integer NOT NULL, create_uid integer, write_uid integer, start_date date, end_date date, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE user_subscription ADD CONSTRAINT user_subscription_pkey PRIMARY KEY (id);
ALTER TABLE user_subscription ADD CONSTRAINT user_subscription_subscription_plan_id_fkey FOREIGN KEY (subscription_plan_id) REFERENCES subscription_plan (id) ON DELETE RESTRICT;
ALTER TABLE user_subscription ADD CONSTRAINT user_subscription_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE user_subscription ADD CONSTRAINT user_subscription_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE user_subscription ADD CONSTRAINT user_subscription_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE CASCADE;
CREATE TABLE utm_campaign (id integer NOT NULL, user_id integer NOT NULL, stage_id integer NOT NULL, color integer, create_uid integer, write_uid integer, title jsonb NOT NULL, active boolean, is_auto_campaign boolean, create_date timestamp, write_date timestamp, ab_testing_winner_mailing_id integer, ab_testing_completed boolean, ab_testing_schedule_datetime timestamp, company_id integer);
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_pkey PRIMARY KEY (id);
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_unique_name UNIQUE (name);
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_ab_testing_winner_mailing_id_fkey FOREIGN KEY (ab_testing_winner_mailing_id) REFERENCES mailing_mailing (id) ON DELETE SET NULL;
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_company_id_fkey FOREIGN KEY (company_id) REFERENCES res_company (id) ON DELETE SET NULL;
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_stage_id_fkey FOREIGN KEY (stage_id) REFERENCES utm_stage (id) ON DELETE RESTRICT;
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_user_id_fkey FOREIGN KEY (user_id) REFERENCES res_users (id) ON DELETE RESTRICT;
ALTER TABLE utm_campaign ADD CONSTRAINT utm_campaign_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE utm_medium (id integer NOT NULL, create_uid integer, write_uid integer, active boolean, create_date timestamp, write_date timestamp);
ALTER TABLE utm_medium ADD CONSTRAINT utm_medium_pkey PRIMARY KEY (id);
ALTER TABLE utm_medium ADD CONSTRAINT utm_medium_unique_name UNIQUE (name);
ALTER TABLE utm_medium ADD CONSTRAINT utm_medium_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE utm_medium ADD CONSTRAINT utm_medium_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE utm_source (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE utm_source ADD CONSTRAINT utm_source_pkey PRIMARY KEY (id);
ALTER TABLE utm_source ADD CONSTRAINT utm_source_unique_name UNIQUE (name);
ALTER TABLE utm_source ADD CONSTRAINT utm_source_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE utm_source ADD CONSTRAINT utm_source_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE utm_stage (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE utm_stage ADD CONSTRAINT utm_stage_pkey PRIMARY KEY (id);
ALTER TABLE utm_stage ADD CONSTRAINT utm_stage_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE utm_stage ADD CONSTRAINT utm_stage_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE utm_tag (id integer NOT NULL, color integer, create_uid integer, write_uid integer, name jsonb NOT NULL, create_date timestamp, write_date timestamp);
ALTER TABLE utm_tag ADD CONSTRAINT utm_tag_pkey PRIMARY KEY (id);
ALTER TABLE utm_tag ADD CONSTRAINT utm_tag_name_uniq UNIQUE (name);
ALTER TABLE utm_tag ADD CONSTRAINT utm_tag_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE utm_tag ADD CONSTRAINT utm_tag_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE utm_tag_rel (tag_id integer NOT NULL, campaign_id integer NOT NULL);
ALTER TABLE utm_tag_rel ADD CONSTRAINT utm_tag_rel_pkey PRIMARY KEY (tag_id, campaign_id);
ALTER TABLE utm_tag_rel ADD CONSTRAINT utm_tag_rel_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES utm_tag (id) ON DELETE CASCADE;
ALTER TABLE utm_tag_rel ADD CONSTRAINT utm_tag_rel_tag_id_fkey FOREIGN KEY (tag_id) REFERENCES utm_campaign (id) ON DELETE CASCADE;
CREATE TABLE validate_account_move (id integer NOT NULL, create_uid integer, write_uid integer, force_post boolean, ignore_abnormal_date boolean, ignore_abnormal_amount boolean, create_date timestamp, write_date timestamp);
ALTER TABLE validate_account_move ADD CONSTRAINT validate_account_move_pkey PRIMARY KEY (id);
ALTER TABLE validate_account_move ADD CONSTRAINT validate_account_move_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE validate_account_move ADD CONSTRAINT validate_account_move_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE web_editor_converter_test (id integer NOT NULL, integer integer, many2one integer, create_uid integer, write_uid integer, date date, html text, text text, datetime timestamp, create_date timestamp, write_date timestamp, float double precision, binary bytea);
ALTER TABLE web_editor_converter_test ADD CONSTRAINT web_editor_converter_test_pkey PRIMARY KEY (id);
ALTER TABLE web_editor_converter_test ADD CONSTRAINT web_editor_converter_test_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_editor_converter_test ADD CONSTRAINT web_editor_converter_test_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_editor_converter_test ADD CONSTRAINT web_editor_converter_test_many2one_fkey FOREIGN KEY (many2one) REFERENCES web_editor_converter_test_sub (id) ON DELETE SET NULL;
CREATE TABLE web_editor_converter_test_sub (id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE web_editor_converter_test_sub ADD CONSTRAINT web_editor_converter_test_sub_pkey PRIMARY KEY (id);
ALTER TABLE web_editor_converter_test_sub ADD CONSTRAINT web_editor_converter_test_sub_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_editor_converter_test_sub ADD CONSTRAINT web_editor_converter_test_sub_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE web_tour_tour (id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, rainbow_man_message jsonb, custom boolean, create_date timestamp, write_date timestamp);
ALTER TABLE web_tour_tour ADD CONSTRAINT web_tour_tour_pkey PRIMARY KEY (id);
ALTER TABLE web_tour_tour ADD CONSTRAINT web_tour_tour_uniq_name UNIQUE (name);
ALTER TABLE web_tour_tour ADD CONSTRAINT web_tour_tour_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_tour_tour ADD CONSTRAINT web_tour_tour_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
CREATE TABLE web_tour_tour_step (id integer NOT NULL, tour_id integer NOT NULL, sequence integer, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE web_tour_tour_step ADD CONSTRAINT web_tour_tour_step_pkey PRIMARY KEY (id);
ALTER TABLE web_tour_tour_step ADD CONSTRAINT web_tour_tour_step_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_tour_tour_step ADD CONSTRAINT web_tour_tour_step_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE web_tour_tour_step ADD CONSTRAINT web_tour_tour_step_tour_id_fkey FOREIGN KEY (tour_id) REFERENCES web_tour_tour (id) ON DELETE CASCADE;
CREATE TABLE wizard_ir_model_menu_create (id integer NOT NULL, menu_id integer NOT NULL, create_uid integer, write_uid integer, create_date timestamp, write_date timestamp);
ALTER TABLE wizard_ir_model_menu_create ADD CONSTRAINT wizard_ir_model_menu_create_pkey PRIMARY KEY (id);
ALTER TABLE wizard_ir_model_menu_create ADD CONSTRAINT wizard_ir_model_menu_create_create_uid_fkey FOREIGN KEY (create_uid) REFERENCES res_users (id) ON DELETE SET NULL;
ALTER TABLE wizard_ir_model_menu_create ADD CONSTRAINT wizard_ir_model_menu_create_menu_id_fkey FOREIGN KEY (menu_id) REFERENCES ir_ui_menu (id) ON DELETE CASCADE;
ALTER TABLE wizard_ir_model_menu_create ADD CONSTRAINT wizard_ir_model_menu_create_write_uid_fkey FOREIGN KEY (write_uid) REFERENCES res_users (id) ON DELETE SET NULL;
